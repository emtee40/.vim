!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.7	//
$	/home/viper/projects/RBit/rcolormanager.o	/^â¬¡˙â»¡¯â—)¡â»∂¿â|$ât$âD$ãEâ$Ë¸ˇˇˇÉƒL[^_]√êUâÂWVSÉÏË¸ˇˇˇÅ√/;"	v
$	/home/viper/projects/RBit/reditbox.o	/^/;"	v
$	/home/viper/projects/RBit/rframepainter.o	/^Â/;"	v
$	/home/viper/projects/RBit/rframepainter.o	/^/;"	v
$	/home/viper/projects/RBit/rscrollbar.o	/^/;"	v
$k$	/home/viper/projects/RBit/rframepainter.o	/^Â/;"	v
ALLOCA	/home/viper/projects/RBit/rsdlttf.cpp	14;"	d	file:
ALLOCA	/home/viper/projects/RBit/rsdlttf.cpp	17;"	d	file:
Abort	/home/viper/projects/RBit/rmessagebox.h	/^    enum Button { NoButton = 0, Ok = 1, Cancel = 2, Yes = 3, No = 4, Abort = 5, Retry = 6, Ignore = 7,$/;"	e	enum:RMessageBox::Button
Accepted	/home/viper/projects/RBit/rdialog.h	/^		Accepted				$/;"	e	enum:RDialog::__anon2
ActiveOnFocus	/home/viper/projects/RBit/captionwidget.h	/^		ActiveOnFocus,$/;"	e	enum:CCaptionWidget::CaptionPolicy
AlignBottom	/home/viper/projects/RBit/rdrawutil.h	/^    AlignBottom       = 0x0020,$/;"	e	enum:RAlignmentFlags
AlignCenter	/home/viper/projects/RBit/rdrawutil.h	/^    AlignCenter       = AlignVCenter | AlignHCenter,$/;"	e	enum:RAlignmentFlags
AlignHCenter	/home/viper/projects/RBit/rdrawutil.h	/^    AlignHCenter      = 0x0004,$/;"	e	enum:RAlignmentFlags
AlignLeft	/home/viper/projects/RBit/rdrawutil.h	/^    AlignLeft         = 0x0001,$/;"	e	enum:RAlignmentFlags
AlignMask	/home/viper/projects/RBit/rdrawutil.h	/^    AlignMask         = 0x007F$/;"	e	enum:RAlignmentFlags
AlignRight	/home/viper/projects/RBit/rdrawutil.h	/^    AlignRight        = 0x0002,$/;"	e	enum:RAlignmentFlags
AlignTop	/home/viper/projects/RBit/rdrawutil.h	/^    AlignTop          = 0x0010,$/;"	e	enum:RAlignmentFlags
AlignVCenter	/home/viper/projects/RBit/rdrawutil.h	/^    AlignVCenter      = 0x0040,$/;"	e	enum:RAlignmentFlags
AlternateBase	/home/viper/projects/RBit/rpalette.h	/^					AlternateBase,$/;"	e	enum:RPalette::ColorRole
AlwaysActive	/home/viper/projects/RBit/captionwidget.h	/^		AlwaysActive = 0,$/;"	e	enum:CCaptionWidget::CaptionPolicy
AscendingOrder	/home/viper/projects/RBit/rbit.h	/^        AscendingOrder,$/;"	e	enum:RBit::SortOrder
Base	/home/viper/projects/RBit/rfont.h	/^    typedef RSharedPtr<TTF_Font> Base;$/;"	t	class:RFont	access:private
Base	/home/viper/projects/RBit/rlibrary.h	/^    typedef RSharedPtr<void, RLibraryDeleter> Base;$/;"	t	class:RLibrary	access:private
Base	/home/viper/projects/RBit/rpalette.h	/^					Base, $/;"	e	enum:RPalette::ColorRole
Base	/home/viper/projects/RBit/rsimplelist.h	/^	typedef RSimpleListNodeBase<i> Base;$/;"	t	class:RSimpleCircularListNode	access:protected
Base	/home/viper/projects/RBit/rsimplelist.h	/^	typedef RSimpleListNodeBase<i> Base;$/;"	t	class:RSimpleListNode	access:protected
Base	/home/viper/projects/RBit/rsurface.h	/^    typedef RSharedPtr<SDL_Surface> Base;$/;"	t	class:RSurface	access:private
BottomLine	/home/viper/projects/RBit/rgridview.h	/^        BottomLine              = 0x10,$/;"	e	enum:RGridView::LineDecorationFlags
BrightText	/home/viper/projects/RBit/rpalette.h	/^					BrightText, $/;"	e	enum:RPalette::ColorRole
Button	/home/viper/projects/RBit/rmessagebox.h	/^    enum Button { NoButton = 0, Ok = 1, Cancel = 2, Yes = 3, No = 4, Abort = 5, Retry = 6, Ignore = 7,$/;"	g	class:RMessageBox	access:public
Button	/home/viper/projects/RBit/rpalette.h	/^					Button, $/;"	e	enum:RPalette::ColorRole
ButtonMask	/home/viper/projects/RBit/rmessagebox.h	/^                  ButtonMask = 0xff, Default = 0x100, Escape = 0x200, FlagMask = 0x300 };$/;"	e	enum:RMessageBox::Button
ButtonText	/home/viper/projects/RBit/rpalette.h	/^					ButtonText, $/;"	e	enum:RPalette::ColorRole
CACHED_BITMAP	/home/viper/projects/RBit/rsdlttf.cpp	41;"	d	file:
CACHED_METRICS	/home/viper/projects/RBit/rsdlttf.cpp	40;"	d	file:
CACHED_PIXMAP	/home/viper/projects/RBit/rsdlttf.cpp	42;"	d	file:
CAPTIONWIDGET_H	/home/viper/projects/RBit/captionwidget.h	2;"	d
CCaptionWidget	/home/viper/projects/RBit/captionwidget.cpp	/^CCaptionWidget::CCaptionWidget(RWidget* parent, RWFlags flags)$/;"	f	class:CCaptionWidget	signature:(RWidget* parent, RWFlags flags)
CCaptionWidget	/home/viper/projects/RBit/captionwidget.h	/^    CCaptionWidget(const CCaptionWidget&);$/;"	p	class:CCaptionWidget	access:private	signature:(const CCaptionWidget&)
CCaptionWidget	/home/viper/projects/RBit/captionwidget.h	/^    explicit CCaptionWidget(RWidget* parent=0, RWFlags flags=0);$/;"	p	class:CCaptionWidget	access:public	signature:(RWidget* parent=0, RWFlags flags=0)
CCaptionWidget	/home/viper/projects/RBit/captionwidget.h	/^class RBIT_CORE_EXPORT CCaptionWidget : public RLabel$/;"	c	inherits:RLabel
CCaptionWidget::ActiveOnFocus	/home/viper/projects/RBit/captionwidget.h	/^		ActiveOnFocus,$/;"	e	enum:CCaptionWidget::CaptionPolicy
CCaptionWidget::AlwaysActive	/home/viper/projects/RBit/captionwidget.h	/^		AlwaysActive = 0,$/;"	e	enum:CCaptionWidget::CaptionPolicy
CCaptionWidget::CCaptionWidget	/home/viper/projects/RBit/captionwidget.cpp	/^CCaptionWidget::CCaptionWidget(RWidget* parent, RWFlags flags)$/;"	f	class:CCaptionWidget	signature:(RWidget* parent, RWFlags flags)
CCaptionWidget::CCaptionWidget	/home/viper/projects/RBit/captionwidget.h	/^    CCaptionWidget(const CCaptionWidget&);$/;"	p	class:CCaptionWidget	access:private	signature:(const CCaptionWidget&)
CCaptionWidget::CCaptionWidget	/home/viper/projects/RBit/captionwidget.h	/^    explicit CCaptionWidget(RWidget* parent=0, RWFlags flags=0);$/;"	p	class:CCaptionWidget	access:public	signature:(RWidget* parent=0, RWFlags flags=0)
CCaptionWidget::CaptionPolicy	/home/viper/projects/RBit/captionwidget.h	/^	enum CaptionPolicy {$/;"	g	class:CCaptionWidget	access:public
CCaptionWidget::eventMouseDown	/home/viper/projects/RBit/captionwidget.cpp	/^void CCaptionWidget::eventMouseDown(const SDL_MouseButtonEvent &e)$/;"	f	class:CCaptionWidget	signature:(const SDL_MouseButtonEvent &e)
CCaptionWidget::eventMouseDown	/home/viper/projects/RBit/captionwidget.h	/^	virtual void eventMouseDown(const SDL_MouseButtonEvent&);$/;"	p	class:CCaptionWidget	access:protected	signature:(const SDL_MouseButtonEvent&)
CCaptionWidget::getCaptionPolicy	/home/viper/projects/RBit/captionwidget.h	/^	CaptionPolicy getCaptionPolicy() const;$/;"	p	class:CCaptionWidget	access:public	signature:() const
CCaptionWidget::getCaptionPolicy	/home/viper/projects/RBit/captionwidget.h	/^inline CCaptionWidget::CaptionPolicy CCaptionWidget::getCaptionPolicy() const$/;"	f	class:CCaptionWidget	signature:() const
CCaptionWidget::isActive	/home/viper/projects/RBit/captionwidget.h	/^	bool isActive() const;$/;"	p	class:CCaptionWidget	access:public	signature:() const
CCaptionWidget::isActive	/home/viper/projects/RBit/captionwidget.h	/^inline bool CCaptionWidget::isActive() const$/;"	f	class:CCaptionWidget	signature:() const
CCaptionWidget::m_captionPolicy	/home/viper/projects/RBit/captionwidget.h	/^	CaptionPolicy m_captionPolicy;$/;"	m	class:CCaptionWidget	access:private
CCaptionWidget::operator =	/home/viper/projects/RBit/captionwidget.h	/^    CCaptionWidget& operator=(const CCaptionWidget&);  $/;"	p	class:CCaptionWidget	access:private	signature:(const CCaptionWidget&)
CCaptionWidget::repaintImpl	/home/viper/projects/RBit/captionwidget.cpp	/^void CCaptionWidget::repaintImpl(const RRect& r)$/;"	f	class:CCaptionWidget	signature:(const RRect& r)
CCaptionWidget::repaintImpl	/home/viper/projects/RBit/captionwidget.h	/^    virtual void repaintImpl(const RRect& r);$/;"	p	class:CCaptionWidget	access:protected	signature:(const RRect& r)
CCaptionWidget::setCaptionPolicy	/home/viper/projects/RBit/captionwidget.h	/^	void setCaptionPolicy(CaptionPolicy p);$/;"	p	class:CCaptionWidget	access:public	signature:(CaptionPolicy p)
CCaptionWidget::setCaptionPolicy	/home/viper/projects/RBit/captionwidget.h	/^inline void CCaptionWidget::setCaptionPolicy(CaptionPolicy p)$/;"	f	class:CCaptionWidget	signature:(CaptionPolicy p)
CCaptionWidget::sizeHint	/home/viper/projects/RBit/captionwidget.cpp	/^RSize CCaptionWidget::sizeHint() const$/;"	f	class:CCaptionWidget	signature:() const
CCaptionWidget::sizeHint	/home/viper/projects/RBit/captionwidget.h	/^    RSize sizeHint() const;$/;"	p	class:CCaptionWidget	access:public	signature:() const
Cancel	/home/viper/projects/RBit/rmessagebox.h	/^    enum Button { NoButton = 0, Ok = 1, Cancel = 2, Yes = 3, No = 4, Abort = 5, Retry = 6, Ignore = 7,$/;"	e	enum:RMessageBox::Button
CaptionPolicy	/home/viper/projects/RBit/captionwidget.h	/^	enum CaptionPolicy {$/;"	g	class:CCaptionWidget	access:public
CheckState	/home/viper/projects/RBit/rbit.h	/^    enum CheckState$/;"	g	namespace:RBit
Checked	/home/viper/projects/RBit/rbit.h	/^        Checked$/;"	e	enum:RBit::CheckState
ColorArray	/home/viper/projects/RBit/rcolormanager.cpp	/^        ColorArray() $/;"	f	struct:RBlendingMap1::ColorArray	access:public	signature:()
ColorArray	/home/viper/projects/RBit/rcolormanager.cpp	/^    struct ColorArray$/;"	s	class:RBlendingMap1	file:	access:private
ColorNode	/home/viper/projects/RBit/rcolormanager.cpp	/^    struct ColorNode $/;"	s	class:RBlendingMap1	file:	access:private
ColorRole	/home/viper/projects/RBit/rpalette.h	/^    enum ColorRole {WindowText, $/;"	g	class:RPalette	access:public
Contents	/home/viper/projects/RBit/rsimplelist.h	/^	typedef typename Node::Contents Contents;$/;"	t	class:RSimpleList	access:public
Contents	/home/viper/projects/RBit/rsimplelist.h	/^    typedef T Contents;$/;"	t	class:RSimpleCircularListNode	access:protected
Contents	/home/viper/projects/RBit/rsimplelist.h	/^    typedef T Contents;$/;"	t	class:RSimpleListNode	access:protected
Critical	/home/viper/projects/RBit/rmessagebox.h	/^    enum Icon { NoIcon = 0, Information = 1, Warning = 2, Critical = 3 };$/;"	e	enum:RMessageBox::Icon
CursorAction	/home/viper/projects/RBit/rgridview.h	/^    enum CursorAction { $/;"	g	class:RGridView	access:protected
Custom	/home/viper/projects/RBit/rheaderview.h	/^        Custom$/;"	e	enum:RHeaderView::ResizeMode
D	/home/viper/projects/RBit/libRBit.so	/^/;"	v
Dark	/home/viper/projects/RBit/rpalette.h	/^					Dark, $/;"	e	enum:RPalette::ColorRole
Default	/home/viper/projects/RBit/rmessagebox.h	/^                  ButtonMask = 0xff, Default = 0x100, Escape = 0x200, FlagMask = 0x300 };$/;"	e	enum:RMessageBox::Button
DescendingOrder	/home/viper/projects/RBit/rbit.h	/^        DescendingOrder$/;"	e	enum:RBit::SortOrder
DontPrint	/home/viper/projects/RBit/rdrawutil.h	/^    DontPrint         = 0x2000,$/;"	e	enum:RTextFlags
E	/home/viper/projects/RBit/rcolormanager.o	/^â¬¡˙â»¡¯â—)¡â»∂¿â|$ât$âD$ãEâ$Ë¸ˇˇˇàEﬂãEÃ∂UﬂàÉEÃ∂Eﬂ:E“tÄEÀ∂EﬂàE“∂Ö¥˛ˇˇ;Eÿu∂EﬂàE”ÉEÿÅ}ÿˇ/;"	v
E	/home/viper/projects/RBit/rsdlttf.o	/^∏ˇˇˇˇÈÛ/;"	v
EchoMode	/home/viper/projects/RBit/reditbox.h	/^    enum EchoMode$/;"	g	class:REditBox	access:public
EditBox	/home/viper/projects/RBit/rcombobox.cpp	/^	EditBox(RComboBox *parent, RWFlags flags)$/;"	f	class:RComboBox::EditBox	access:public	signature:(RComboBox *parent, RWFlags flags)
EditBox	/home/viper/projects/RBit/rcombobox.cpp	/^class RComboBox::EditBox : public REditBox {$/;"	c	class:RComboBox	file:	inherits:REditBox
Escape	/home/viper/projects/RBit/rmessagebox.h	/^                  ButtonMask = 0xff, Default = 0x100, Escape = 0x200, FlagMask = 0x300 };$/;"	e	enum:RMessageBox::Button
ExtendedHorizontalLines	/home/viper/projects/RBit/rgridview.h	/^        ExtendedHorizontalLines = 0x08,$/;"	e	enum:RGridView::LineDecorationFlags
ExtendedVerticalLines	/home/viper/projects/RBit/rgridview.h	/^        ExtendedVerticalLines   = 0x04,$/;"	e	enum:RGridView::LineDecorationFlags
FPS	/home/viper/projects/RBit/rapplication.cpp	/^struct FPS$/;"	s	namespace:__anon21	file:
FREEA	/home/viper/projects/RBit/rsdlttf.cpp	15;"	d	file:
FREEA	/home/viper/projects/RBit/rsdlttf.cpp	18;"	d	file:
FTERRORS_H	/home/viper/projects/RBit/rsdlttf.cpp	123;"	d	file:
FT_CEIL	/home/viper/projects/RBit/rsdlttf.cpp	38;"	d	file:
FT_ERRORDEF	/home/viper/projects/RBit/rsdlttf.cpp	124;"	d	file:
FT_FLOOR	/home/viper/projects/RBit/rsdlttf.cpp	37;"	d	file:
FT_OPEN_STREAM	/home/viper/projects/RBit/rsdlttf.cpp	30;"	d	file:
Find_Glyph	/home/viper/projects/RBit/rsdlttf.cpp	/^static FT_Error Find_Glyph( TTF_Font* font, Uint8 ch, int want )$/;"	f	file:	signature:( TTF_Font* font, Uint8 ch, int want )
FlagMask	/home/viper/projects/RBit/rmessagebox.h	/^                  ButtonMask = 0xff, Default = 0x100, Escape = 0x200, FlagMask = 0x300 };$/;"	e	enum:RMessageBox::Button
Flush_Cache	/home/viper/projects/RBit/rsdlttf.cpp	/^static void Flush_Cache( TTF_Font* font )$/;"	f	file:	signature:( TTF_Font* font )
Flush_Glyph	/home/viper/projects/RBit/rsdlttf.cpp	/^static void Flush_Glyph( c_glyph* glyph )$/;"	f	file:	signature:( c_glyph* glyph )
GlobalColor	/home/viper/projects/RBit/rbit.h	/^    enum GlobalColor {$/;"	g	namespace:RBit
HeaderObserver	/home/viper/projects/RBit/rgridview.h	/^        HeaderObserver() : m_grid(0) {}$/;"	f	class:RGridView::HeaderObserver	access:public	signature:()
HeaderObserver	/home/viper/projects/RBit/rgridview.h	/^    class HeaderObserver : public RHeaderView::Observer,$/;"	c	class:RGridView	inherits:RHeaderView::Observer,RHeaderModel::Observer	access:private
HeaderSection	/home/viper/projects/RBit/rheaderview.h	/^    struct HeaderSection {$/;"	s	class:RHeaderView	access:private
HeaderSections	/home/viper/projects/RBit/rheaderview.h	/^    typedef std::vector<HeaderSection> HeaderSections;$/;"	t	class:RHeaderView	access:private
Highlight	/home/viper/projects/RBit/rpalette.h	/^                    Highlight, $/;"	e	enum:RPalette::ColorRole
HighlightedText	/home/viper/projects/RBit/rpalette.h	/^					HighlightedText, $/;"	e	enum:RPalette::ColorRole
Horizontal	/home/viper/projects/RBit/rbit.h	/^        Horizontal,$/;"	e	enum:RBit::Orientation
HorizontalLines	/home/viper/projects/RBit/rgridview.h	/^        HorizontalLines         = 0x02,        $/;"	e	enum:RGridView::LineDecorationFlags
Icon	/home/viper/projects/RBit/rmessagebox.h	/^    enum Icon { NoIcon = 0, Information = 1, Warning = 2, Critical = 3 };$/;"	g	class:RMessageBox	access:public
Ignore	/home/viper/projects/RBit/rmessagebox.h	/^    enum Button { NoButton = 0, Ok = 1, Cancel = 2, Yes = 3, No = 4, Abort = 5, Retry = 6, Ignore = 7,$/;"	e	enum:RMessageBox::Button
Information	/home/viper/projects/RBit/rmessagebox.h	/^    enum Icon { NoIcon = 0, Information = 1, Warning = 2, Critical = 3 };$/;"	e	enum:RMessageBox::Icon
Interactive	/home/viper/projects/RBit/rheaderview.h	/^        Interactive,$/;"	e	enum:RHeaderView::ResizeMode
Internal	/home/viper/projects/RBit/rwidgetdefaultsettings.h	/^    struct Internal$/;"	s	class:RWidgetDefaultSettingsHelper	access:private
Item	/home/viper/projects/RBit/rsimplegridmodel.h	/^        Item(const char* text, const RFont&, int alignment, const RColor& bg, const RColor& fg, int type = Type);$/;"	p	class:RSimpleGridModel::Item	access:public	signature:(const char* text, const RFont&, int alignment, const RColor& bg, const RColor& fg, int type = Type)
Item	/home/viper/projects/RBit/rsimplegridmodel.h	/^        explicit Item(const char* text, int type = Type);$/;"	p	class:RSimpleGridModel::Item	access:public	signature:(const char* text, int type = Type)
Item	/home/viper/projects/RBit/rsimplegridmodel.h	/^        explicit Item(int type = Type);$/;"	p	class:RSimpleGridModel::Item	access:public	signature:(int type = Type)
Item	/home/viper/projects/RBit/rsimplegridmodel.h	/^    class RBIT_CORE_EXPORT Item$/;"	c	class:RSimpleGridModel	access:public
Item	/home/viper/projects/RBit/rsimplegridmodel.h	/^inline RSimpleGridModel::Item::Item(const char* text, const RFont& f, int a, const RColor& bg, const RColor& fg, int type)$/;"	f	class:RSimpleGridModel::Item	signature:(const char* text, const RFont& f, int a, const RColor& bg, const RColor& fg, int type)
Item	/home/viper/projects/RBit/rsimplegridmodel.h	/^inline RSimpleGridModel::Item::Item(const char* text, int type)$/;"	f	class:RSimpleGridModel::Item	signature:(const char* text, int type)
Item	/home/viper/projects/RBit/rsimplegridmodel.h	/^inline RSimpleGridModel::Item::Item(int type)$/;"	f	class:RSimpleGridModel::Item	signature:(int type)
Item	/home/viper/projects/RBit/rsimpleheadermodel.h	/^        Item(const char* text, const RFont&, RAlignmentFlags, const RColor& bg, $/;"	p	class:RSimpleHeaderModel::Item	access:public	signature:(const char* text, const RFont&, RAlignmentFlags, const RColor& bg, const RColor& fg, const RColor& dark, const RColor& light, int type = Type)
Item	/home/viper/projects/RBit/rsimpleheadermodel.h	/^        explicit Item(const char* text, int type = Type);$/;"	p	class:RSimpleHeaderModel::Item	access:public	signature:(const char* text, int type = Type)
Item	/home/viper/projects/RBit/rsimpleheadermodel.h	/^        explicit Item(int type = Type);$/;"	p	class:RSimpleHeaderModel::Item	access:public	signature:(int type = Type)
Item	/home/viper/projects/RBit/rsimpleheadermodel.h	/^    class RBIT_CORE_EXPORT Item$/;"	c	class:RSimpleHeaderModel	access:public
Item	/home/viper/projects/RBit/rsimpleheadermodel.h	/^inline RSimpleHeaderModel::Item::Item(const char* text, const RFont& f, $/;"	f	class:RSimpleHeaderModel::Item	signature:(const char* text, const RFont& f, RAlignmentFlags a, const RColor& bg, const RColor& fg, const RColor& dark, const RColor& light, int type)
Item	/home/viper/projects/RBit/rsimpleheadermodel.h	/^inline RSimpleHeaderModel::Item::Item(const char* text, int type)$/;"	f	class:RSimpleHeaderModel::Item	signature:(const char* text, int type)
Item	/home/viper/projects/RBit/rsimpleheadermodel.h	/^inline RSimpleHeaderModel::Item::Item(int type)$/;"	f	class:RSimpleHeaderModel::Item	signature:(int type)
ItemAutoPtr	/home/viper/projects/RBit/rsimplegridmodel.h	/^        inline ItemAutoPtr() $/;"	f	struct:RSimpleGridModel::ItemAutoPtr	access:public	signature:()
ItemAutoPtr	/home/viper/projects/RBit/rsimplegridmodel.h	/^        inline ItemAutoPtr(const ItemAutoPtr& i)$/;"	f	struct:RSimpleGridModel::ItemAutoPtr	access:public	signature:(const ItemAutoPtr& i)
ItemAutoPtr	/home/viper/projects/RBit/rsimplegridmodel.h	/^        inline explicit ItemAutoPtr(Item* i) $/;"	f	struct:RSimpleGridModel::ItemAutoPtr	access:public	signature:(Item* i)
ItemAutoPtr	/home/viper/projects/RBit/rsimplegridmodel.h	/^    struct ItemAutoPtr$/;"	s	class:RSimpleGridModel	access:private
ItemAutoPtr	/home/viper/projects/RBit/rsimpleheadermodel.h	/^        inline ItemAutoPtr() $/;"	f	struct:RSimpleHeaderModel::ItemAutoPtr	access:public	signature:()
ItemAutoPtr	/home/viper/projects/RBit/rsimpleheadermodel.h	/^        inline ItemAutoPtr(const ItemAutoPtr& i)$/;"	f	struct:RSimpleHeaderModel::ItemAutoPtr	access:public	signature:(const ItemAutoPtr& i)
ItemAutoPtr	/home/viper/projects/RBit/rsimpleheadermodel.h	/^        inline explicit ItemAutoPtr(Item* i) $/;"	f	struct:RSimpleHeaderModel::ItemAutoPtr	access:public	signature:(Item* i)
ItemAutoPtr	/home/viper/projects/RBit/rsimpleheadermodel.h	/^    struct ItemAutoPtr$/;"	s	class:RSimpleHeaderModel	access:private
ItemFlags	/home/viper/projects/RBit/rgridmodel.h	/^    enum ItemFlags {$/;"	g	class:RGridModel	access:public
ItemIsEditable	/home/viper/projects/RBit/rgridmodel.h	/^        ItemIsEditable   = 0x02$/;"	e	enum:RGridModel::ItemFlags
ItemIsSelectable	/home/viper/projects/RBit/rgridmodel.h	/^        ItemIsSelectable = 0x01,$/;"	e	enum:RGridModel::ItemFlags
Light	/home/viper/projects/RBit/rpalette.h	/^					Light, $/;"	e	enum:RPalette::ColorRole
LineDecorationFlags	/home/viper/projects/RBit/rgridview.h	/^    enum LineDecorationFlags {$/;"	g	class:RGridView	access:public
Load_Glyph	/home/viper/projects/RBit/rsdlttf.cpp	/^static FT_Error Load_Glyph( TTF_Font* font, Uint8 ch8, c_glyph* cached, int want )$/;"	f	file:	signature:( TTF_Font* font, Uint8 ch8, c_glyph* cached, int want )
MAX_CHARS	/home/viper/projects/RBit/rsdlttf.cpp	44;"	d	file:
MDT_Number	/home/viper/projects/RBit/rgridmodeldatatype.h	/^    MDT_Number = 1$/;"	e	enum:ModelDataTypeId
MDT_Text	/home/viper/projects/RBit/rgridmodeldatatype.h	/^    MDT_Text   = 0,$/;"	e	enum:ModelDataTypeId
MShadow	/home/viper/projects/RBit/rdrawutil.h	/^    MShadow = 0x00f0$/;"	e	enum:RFrameShadowFlags
MShape	/home/viper/projects/RBit/rdrawutil.h	/^    MShape  = 0x000f$/;"	e	enum:RFrameShapeFlags
MetaData	/home/viper/projects/RBit/rsimplegridmodel.cpp	/^RSimpleGridModel::Item::MetaData::MetaData()$/;"	f	class:RSimpleGridModel::Item::MetaData	signature:()
MetaData	/home/viper/projects/RBit/rsimplegridmodel.cpp	/^RSimpleGridModel::Item::MetaData::MetaData(const RFont& f, const RColor& bg, const RColor& fg, RAlignmentFlags a)$/;"	f	class:RSimpleGridModel::Item::MetaData	signature:(const RFont& f, const RColor& bg, const RColor& fg, RAlignmentFlags a)
MetaData	/home/viper/projects/RBit/rsimplegridmodel.h	/^            MetaData();$/;"	p	struct:RSimpleGridModel::Item::MetaData	access:public	signature:()
MetaData	/home/viper/projects/RBit/rsimplegridmodel.h	/^            MetaData(const RFont&, const RColor& bg, const RColor& fg, RAlignmentFlags);$/;"	p	struct:RSimpleGridModel::Item::MetaData	access:public	signature:(const RFont&, const RColor& bg, const RColor& fg, RAlignmentFlags)
MetaData	/home/viper/projects/RBit/rsimplegridmodel.h	/^        struct MetaData$/;"	s	class:RSimpleGridModel::Item	access:private
MetaData	/home/viper/projects/RBit/rsimpleheadermodel.cpp	/^RSimpleHeaderModel::Item::MetaData::MetaData()$/;"	f	class:RSimpleHeaderModel::Item::MetaData	signature:()
MetaData	/home/viper/projects/RBit/rsimpleheadermodel.cpp	/^RSimpleHeaderModel::Item::MetaData::MetaData(const RFont& f, const RColor& bg, const RColor& fg, RAlignmentFlags a)$/;"	f	class:RSimpleHeaderModel::Item::MetaData	signature:(const RFont& f, const RColor& bg, const RColor& fg, RAlignmentFlags a)
MetaData	/home/viper/projects/RBit/rsimpleheadermodel.h	/^            MetaData();$/;"	p	struct:RSimpleHeaderModel::Item::MetaData	access:public	signature:()
MetaData	/home/viper/projects/RBit/rsimpleheadermodel.h	/^            MetaData(const RFont&, const RColor& bg, const RColor& fg, RAlignmentFlags);$/;"	p	struct:RSimpleHeaderModel::Item::MetaData	access:public	signature:(const RFont&, const RColor& bg, const RColor& fg, RAlignmentFlags)
MetaData	/home/viper/projects/RBit/rsimpleheadermodel.h	/^        struct MetaData$/;"	s	class:RSimpleHeaderModel::Item	access:private
MetaObjects	/home/viper/projects/RBit/rwidget.h	/^    typedef std::map<const char*, RMetaObject*, StrCmp> MetaObjects;$/;"	t	class:RMetaRegistrator	access:private
Mid	/home/viper/projects/RBit/rpalette.h	/^					Mid,$/;"	e	enum:RPalette::ColorRole
Midlight	/home/viper/projects/RBit/rpalette.h	/^					Midlight, $/;"	e	enum:RPalette::ColorRole
ModelDataTypeId	/home/viper/projects/RBit/rgridmodeldatatype.h	/^enum ModelDataTypeId$/;"	g
MoveDown	/home/viper/projects/RBit/rgridview.h	/^        MoveDown, $/;"	e	enum:RGridView::CursorAction
MoveEnd	/home/viper/projects/RBit/rgridview.h	/^        MoveEnd, $/;"	e	enum:RGridView::CursorAction
MoveHome	/home/viper/projects/RBit/rgridview.h	/^        MoveHome, $/;"	e	enum:RGridView::CursorAction
MoveLeft	/home/viper/projects/RBit/rgridview.h	/^        MoveLeft, $/;"	e	enum:RGridView::CursorAction
MoveNext	/home/viper/projects/RBit/rgridview.h	/^        MoveNext, $/;"	e	enum:RGridView::CursorAction
MovePageDown	/home/viper/projects/RBit/rgridview.h	/^        MovePageDown,$/;"	e	enum:RGridView::CursorAction
MovePageUp	/home/viper/projects/RBit/rgridview.h	/^        MovePageUp, $/;"	e	enum:RGridView::CursorAction
MovePrevious	/home/viper/projects/RBit/rgridview.h	/^        MovePrevious $/;"	e	enum:RGridView::CursorAction
MoveRight	/home/viper/projects/RBit/rgridview.h	/^        MoveRight,$/;"	e	enum:RGridView::CursorAction
MoveUp	/home/viper/projects/RBit/rgridview.h	/^        MoveUp, $/;"	e	enum:RGridView::CursorAction
NColorRoles	/home/viper/projects/RBit/rpalette.h	/^					NColorRoles,	\/\/˝Ú‡ ıÂÌ¸ ‡Ì‡ÎÓ„ Count, ÚÓÎ¸ÍÓ Ì‡Á‚‡Ì‡ ÌÂ ÒÚ‡Ì‰‡ÚÌÓ, ÒÓÓÚ‚ÚÒÚ ‰ÓÎÊÌ˚ ·˚Ú¸ ÔÓÒÎÂ‰ÌÂÈ$/;"	e	enum:RPalette::ColorRole
No	/home/viper/projects/RBit/rmessagebox.h	/^    enum Button { NoButton = 0, Ok = 1, Cancel = 2, Yes = 3, No = 4, Abort = 5, Retry = 6, Ignore = 7,$/;"	e	enum:RMessageBox::Button
NoButton	/home/viper/projects/RBit/rmessagebox.h	/^    enum Button { NoButton = 0, Ok = 1, Cancel = 2, Yes = 3, No = 4, Abort = 5, Retry = 6, Ignore = 7,$/;"	e	enum:RMessageBox::Button
NoEcho	/home/viper/projects/RBit/reditbox.h	/^        NoEcho,$/;"	e	enum:REditBox::EchoMode
NoIcon	/home/viper/projects/RBit/rmessagebox.h	/^    enum Icon { NoIcon = 0, Information = 1, Warning = 2, Critical = 3 };$/;"	e	enum:RMessageBox::Icon
NoLines	/home/viper/projects/RBit/rgridview.h	/^        NoLines = 0$/;"	e	enum:RGridView::LineDecorationFlags
NoRole	/home/viper/projects/RBit/rpalette.h	/^					NoRole = NColorRoles };$/;"	e	enum:RPalette::ColorRole
NoSelection	/home/viper/projects/RBit/rgridview.h	/^        NoSelection$/;"	e	enum:RGridView::SelectionPolicy
NoShape	/home/viper/projects/RBit/rdrawutil.h	/^    NoShape = 0x0001,       $/;"	e	enum:RFrameShapeFlags
NoState	/home/viper/projects/RBit/rheaderview.h	/^    enum State { NoState, ResizeSection } m_state;$/;"	e	enum:RHeaderView::State
NoState	/home/viper/projects/RBit/rsplitter.cpp	/^	enum State { NoState, ResizeState };$/;"	e	enum:RSplitterPrivate::State	file:
Node	/home/viper/projects/RBit/rsimplelist.h	/^	typedef RSimpleCircularListNode<T, i> Node;$/;"	t	class:RSimpleCircularListNode	access:protected
Node	/home/viper/projects/RBit/rsimplelist.h	/^	typedef RSimpleListNode<T, i> Node;$/;"	t	class:RSimpleListNode	access:protected
Normal	/home/viper/projects/RBit/reditbox.h	/^        Normal,$/;"	e	enum:REditBox::EchoMode
Observer	/home/viper/projects/RBit/rgridmodel.h	/^    typedef RGridModelObserverBase Observer;$/;"	t	class:RSubjectTraits	access:public
Observer	/home/viper/projects/RBit/rgridview.h	/^    typedef RGridViewObserver Observer;$/;"	t	class:RSubjectTraits	access:public
Observer	/home/viper/projects/RBit/rheadermodel.h	/^    typedef RHeaderModelObserver Observer;$/;"	t	class:RSubjectTraits	access:public
Observer	/home/viper/projects/RBit/rheaderview.h	/^    typedef RHeaderViewObserver Observer;$/;"	t	class:RSubjectTraits	access:public
Observer	/home/viper/projects/RBit/rsubjectobserver.h	/^    typedef typename RSubjectTraits<Subject>::Observer Observer;$/;"	t	class:RSubject	access:public
ObserverList	/home/viper/projects/RBit/rsubjectobserver.h	/^    typedef RSimpleList<ObserverListNode> ObserverList;$/;"	t	class:RSubject	access:private
ObserverListNode	/home/viper/projects/RBit/rsubjectobserver.h	/^    typedef RSimpleListNode<Observer> ObserverListNode;$/;"	t	class:RSubject	access:private
Ok	/home/viper/projects/RBit/rmessagebox.h	/^    enum Button { NoButton = 0, Ok = 1, Cancel = 2, Yes = 3, No = 4, Abort = 5, Retry = 6, Ignore = 7,$/;"	e	enum:RMessageBox::Button
Orientation	/home/viper/projects/RBit/rbit.h	/^    enum Orientation$/;"	g	namespace:RBit
Panel	/home/viper/projects/RBit/rdrawutil.h	/^    Panel   = 0x0002,$/;"	e	enum:RFrameShapeFlags
Password	/home/viper/projects/RBit/reditbox.h	/^        Password    $/;"	e	enum:REditBox::EchoMode
Plain	/home/viper/projects/RBit/rdrawutil.h	/^    Plain   = 0x0010,$/;"	e	enum:RFrameShadowFlags
Popup	/home/viper/projects/RBit/rcombobox.cpp	/^    Popup(RComboBox* combo, RWidget* parent=0, RWFlags flags=0)$/;"	f	class:RComboBox::Popup	access:public	signature:(RComboBox* combo, RWidget* parent=0, RWFlags flags=0)
Popup	/home/viper/projects/RBit/rcombobox.cpp	/^class RComboBox::Popup : public RGridView,$/;"	c	class:RComboBox	file:	inherits:RGridView,RGridView::Observer
PopupModel	/home/viper/projects/RBit/rcombobox.cpp	/^		PopupModel(Popup* popup) $/;"	f	class:RComboBox::Popup::PopupModel	access:public	signature:(Popup* popup)
PopupModel	/home/viper/projects/RBit/rcombobox.cpp	/^	class PopupModel : public RSimpleGridModel$/;"	c	class:RComboBox::Popup	file:	inherits:RSimpleGridModel	access:public
PrivateButton	/home/viper/projects/RBit/rmessagebox.h	/^        PrivateButton(int id, RMessageBox* parent, RWFlags flags)$/;"	f	class:RMessageBox::PrivateButton	access:public	signature:(int id, RMessageBox* parent, RWFlags flags)
PrivateButton	/home/viper/projects/RBit/rmessagebox.h	/^    class PrivateButton : public RButton,$/;"	c	class:RMessageBox	inherits:RButton,RIdentity	access:private
RAPPLICATION_H	/home/viper/projects/RBit/rapplication.h	2;"	d
RARRAY_CONTAINER_H	/home/viper/projects/RBit/rarraycontainer.h	2;"	d
RAlignmentFlags	/home/viper/projects/RBit/rdrawutil.h	/^enum RAlignmentFlags {       $/;"	g
RApplication	/home/viper/projects/RBit/rapplication.cpp	/^RApplication::RApplication(SDL_Surface* screen) $/;"	f	class:RApplication	signature:(SDL_Surface* screen)
RApplication	/home/viper/projects/RBit/rapplication.cpp	/^RApplication::RApplication(int w, int h, int depth, bool fullscreen) $/;"	f	class:RApplication	signature:(int w, int h, int depth, bool fullscreen)
RApplication	/home/viper/projects/RBit/rapplication.h	/^    RApplication(SDL_Surface* screen);$/;"	p	class:RApplication	access:public	signature:(SDL_Surface* screen)
RApplication	/home/viper/projects/RBit/rapplication.h	/^    RApplication(const RApplication&);$/;"	p	class:RApplication	access:private	signature:(const RApplication&)
RApplication	/home/viper/projects/RBit/rapplication.h	/^    RApplication(int w, int h, int depth, bool fullscreen);$/;"	p	class:RApplication	access:public	signature:(int w, int h, int depth, bool fullscreen)
RApplication	/home/viper/projects/RBit/rapplication.h	/^class RBIT_CORE_EXPORT RApplication$/;"	c
RApplication::RApplication	/home/viper/projects/RBit/rapplication.cpp	/^RApplication::RApplication(SDL_Surface* screen) $/;"	f	class:RApplication	signature:(SDL_Surface* screen)
RApplication::RApplication	/home/viper/projects/RBit/rapplication.cpp	/^RApplication::RApplication(int w, int h, int depth, bool fullscreen) $/;"	f	class:RApplication	signature:(int w, int h, int depth, bool fullscreen)
RApplication::RApplication	/home/viper/projects/RBit/rapplication.h	/^    RApplication(SDL_Surface* screen);$/;"	p	class:RApplication	access:public	signature:(SDL_Surface* screen)
RApplication::RApplication	/home/viper/projects/RBit/rapplication.h	/^    RApplication(const RApplication&);$/;"	p	class:RApplication	access:private	signature:(const RApplication&)
RApplication::RApplication	/home/viper/projects/RBit/rapplication.h	/^    RApplication(int w, int h, int depth, bool fullscreen);$/;"	p	class:RApplication	access:public	signature:(int w, int h, int depth, bool fullscreen)
RApplication::clearSdlPoll	/home/viper/projects/RBit/rapplication.cpp	/^void RApplication::clearSdlPoll()$/;"	f	class:RApplication	signature:()
RApplication::clearSdlPoll	/home/viper/projects/RBit/rapplication.h	/^	void clearSdlPoll();$/;"	p	class:RApplication	access:public	signature:()
RApplication::closeWidgets	/home/viper/projects/RBit/rapplication.cpp	/^void RApplication::closeWidgets()$/;"	f	class:RApplication	signature:()
RApplication::closeWidgets	/home/viper/projects/RBit/rapplication.h	/^    void closeWidgets();$/;"	p	class:RApplication	access:private	signature:()
RApplication::createFont	/home/viper/projects/RBit/rapplication.cpp	/^TTF_Font* RApplication::createFont(const char* font, Uint8 size) const$/;"	f	class:RApplication	signature:(const char* font, Uint8 size) const
RApplication::createFont	/home/viper/projects/RBit/rapplication.h	/^    virtual TTF_Font* createFont(const char* font, Uint8 size) const;$/;"	p	class:RApplication	access:public	signature:(const char* font, Uint8 size) const
RApplication::cursorFlashTime	/home/viper/projects/RBit/rapplication.h	/^    uint cursorFlashTime() const;$/;"	p	class:RApplication	access:public	signature:() const
RApplication::cursorFlashTime	/home/viper/projects/RBit/rapplication.h	/^inline uint RApplication::cursorFlashTime() const$/;"	f	class:RApplication	signature:() const
RApplication::deliverScreenUpdate	/home/viper/projects/RBit/rapplication.cpp	/^void RApplication::deliverScreenUpdate()$/;"	f	class:RApplication	signature:()
RApplication::deliverScreenUpdate	/home/viper/projects/RBit/rapplication.h	/^    void deliverScreenUpdate();    $/;"	p	class:RApplication	access:protected	signature:()
RApplication::deliverScreenUpdate_helper	/home/viper/projects/RBit/rapplication.cpp	/^void RApplication::deliverScreenUpdate_helper(const RRect& r, RWidget* parent)$/;"	f	class:RApplication	signature:(const RRect& r, RWidget* parent)
RApplication::deliverScreenUpdate_helper	/home/viper/projects/RBit/rapplication.h	/^    void deliverScreenUpdate_helper(const RRect&, RWidget*);$/;"	p	class:RApplication	access:private	signature:(const RRect&, RWidget*)
RApplication::doubleClickEnabled	/home/viper/projects/RBit/rapplication.h	/^    bool doubleClickEnabled() const;$/;"	p	class:RApplication	access:public	signature:() const
RApplication::doubleClickEnabled	/home/viper/projects/RBit/rapplication.h	/^inline bool RApplication::doubleClickEnabled() const$/;"	f	class:RApplication	signature:() const
RApplication::doubleClickMargin	/home/viper/projects/RBit/rapplication.h	/^    uint doubleClickMargin() const;$/;"	p	class:RApplication	access:public	signature:() const
RApplication::doubleClickMargin	/home/viper/projects/RBit/rapplication.h	/^inline uint RApplication::doubleClickMargin() const$/;"	f	class:RApplication	signature:() const
RApplication::firstTopLevelWidget	/home/viper/projects/RBit/rapplication.cpp	/^RWidget* RApplication::firstTopLevelWidget()  $/;"	f	class:RApplication	signature:()
RApplication::firstTopLevelWidget	/home/viper/projects/RBit/rapplication.h	/^    RWidget* firstTopLevelWidget();$/;"	p	class:RApplication	access:public	signature:()
RApplication::focusWidget	/home/viper/projects/RBit/rapplication.h	/^    RWidget* focusWidget(); $/;"	p	class:RApplication	access:public	signature:()
RApplication::focusWidget	/home/viper/projects/RBit/rapplication.h	/^inline RWidget* RApplication::focusWidget()  $/;"	f	class:RApplication	signature:()
RApplication::font	/home/viper/projects/RBit/rapplication.cpp	/^const RFont& RApplication::font() const$/;"	f	class:RApplication	signature:() const
RApplication::font	/home/viper/projects/RBit/rapplication.h	/^    const RFont& font() const;$/;"	p	class:RApplication	access:public	signature:() const
RApplication::getWindowHandle	/home/viper/projects/RBit/rapplication.cpp	/^long RApplication::getWindowHandle() {$/;"	f	class:RApplication	signature:()
RApplication::getWindowHandle	/home/viper/projects/RBit/rapplication.h	/^	long getWindowHandle();$/;"	p	class:RApplication	access:public	signature:()
RApplication::grabMouse	/home/viper/projects/RBit/rapplication.cpp	/^void RApplication::grabMouse(RWidget* w)$/;"	f	class:RApplication	signature:(RWidget* w)
RApplication::grabMouse	/home/viper/projects/RBit/rapplication.h	/^    void grabMouse(RWidget* w);$/;"	p	class:RApplication	access:protected	signature:(RWidget* w)
RApplication::isAltEnterEnabled	/home/viper/projects/RBit/rapplication.h	/^    bool isAltEnterEnabled() const;$/;"	p	class:RApplication	access:public	signature:() const
RApplication::isAltEnterEnabled	/home/viper/projects/RBit/rapplication.h	/^inline bool RApplication::isAltEnterEnabled() const$/;"	f	class:RApplication	signature:() const
RApplication::isDone	/home/viper/projects/RBit/rapplication.h	/^    bool isDone() const;$/;"	p	class:RApplication	access:public	signature:() const
RApplication::isDone	/home/viper/projects/RBit/rapplication.h	/^inline bool RApplication::isDone() const$/;"	f	class:RApplication	signature:() const
RApplication::isKeyAutoRepeat	/home/viper/projects/RBit/rapplication.h	/^    bool isKeyAutoRepeat() const;$/;"	p	class:RApplication	access:public	signature:() const
RApplication::isKeyAutoRepeat	/home/viper/projects/RBit/rapplication.h	/^inline bool RApplication::isKeyAutoRepeat() const$/;"	f	class:RApplication	signature:() const
RApplication::keyAutoRepeatLatency	/home/viper/projects/RBit/rapplication.h	/^    uint keyAutoRepeatLatency() const;$/;"	p	class:RApplication	access:public	signature:() const
RApplication::keyAutoRepeatLatency	/home/viper/projects/RBit/rapplication.h	/^inline uint RApplication::keyAutoRepeatLatency() const$/;"	f	class:RApplication	signature:() const
RApplication::keyAutoRepeatPeriod	/home/viper/projects/RBit/rapplication.h	/^    uint keyAutoRepeatPeriod() const;$/;"	p	class:RApplication	access:public	signature:() const
RApplication::keyAutoRepeatPeriod	/home/viper/projects/RBit/rapplication.h	/^inline uint RApplication::keyAutoRepeatPeriod() const$/;"	f	class:RApplication	signature:() const
RApplication::keyRepeatPeriodLowerBound	/home/viper/projects/RBit/rapplication.h	/^    uint keyRepeatPeriodLowerBound() const;$/;"	p	class:RApplication	access:public	signature:() const
RApplication::keyRepeatPeriodLowerBound	/home/viper/projects/RBit/rapplication.h	/^inline uint RApplication::keyRepeatPeriodLowerBound() const$/;"	f	class:RApplication	signature:() const
RApplication::lastTopLevelWidget	/home/viper/projects/RBit/rapplication.cpp	/^RWidget* RApplication::lastTopLevelWidget()  $/;"	f	class:RApplication	signature:()
RApplication::lastTopLevelWidget	/home/viper/projects/RBit/rapplication.h	/^    RWidget* lastTopLevelWidget();$/;"	p	class:RApplication	access:public	signature:()
RApplication::local8bit_toUnicode	/home/viper/projects/RBit/rapplication.cpp	/^Uint16 RApplication::local8bit_toUnicode(Uint8 ch)$/;"	f	class:RApplication	signature:(Uint8 ch)
RApplication::local8bit_toUnicode	/home/viper/projects/RBit/rapplication.h	/^    Uint16 local8bit_toUnicode(Uint8 ch);$/;"	p	class:RApplication	access:public	signature:(Uint8 ch)
RApplication::locale	/home/viper/projects/RBit/rapplication.cpp	/^const std::locale& RApplication::locale() const$/;"	f	class:RApplication	signature:() const
RApplication::locale	/home/viper/projects/RBit/rapplication.h	/^    const std::locale& locale() const;$/;"	p	class:RApplication	access:public	signature:() const
RApplication::log	/home/viper/projects/RBit/rapplication.cpp	/^void RApplication::log(const char* text) {$/;"	f	class:RApplication	signature:(const char* text)
RApplication::log	/home/viper/projects/RBit/rapplication.h	/^	virtual void log(Uint8 \/*type*\/, void * \/*pText*\/)	{};$/;"	f	class:RApplication	access:public	signature:(Uint8 , void * )
RApplication::log	/home/viper/projects/RBit/rapplication.h	/^	void log(const char* str);$/;"	p	class:RApplication	access:private	signature:(const char* str)
RApplication::m_activeWidget	/home/viper/projects/RBit/rapplication.h	/^    RWidget*              m_activeWidget;$/;"	m	class:RApplication	access:private
RApplication::m_cursorFlashTime	/home/viper/projects/RBit/rapplication.h	/^    uint                  m_cursorFlashTime;$/;"	m	class:RApplication	access:private
RApplication::m_deletingWidgets	/home/viper/projects/RBit/rapplication.h	/^    std::list<RWidget*>   m_deletingWidgets;$/;"	m	class:RApplication	access:private
RApplication::m_doubleClickMargin	/home/viper/projects/RBit/rapplication.h	/^    uint                  m_doubleClickMargin;$/;"	m	class:RApplication	access:private
RApplication::m_focusWidget	/home/viper/projects/RBit/rapplication.h	/^    RWidget*              m_focusWidget;      $/;"	m	class:RApplication	access:private
RApplication::m_font	/home/viper/projects/RBit/rapplication.h	/^    mutable RFont         m_font;$/;"	m	class:RApplication	access:private
RApplication::m_lkpt	/home/viper/projects/RBit/rapplication.h	/^    uint                  m_lkpt;$/;"	m	class:RApplication	access:private
RApplication::m_lkrt	/home/viper/projects/RBit/rapplication.h	/^    uint                  m_lkrt; $/;"	m	class:RApplication	access:private
RApplication::m_mouseGrabberWidget	/home/viper/projects/RBit/rapplication.h	/^    RWidget*              m_mouseGrabberWidget;$/;"	m	class:RApplication	access:private
RApplication::m_mouseTrackerCount	/home/viper/projects/RBit/rapplication.h	/^    uint                  m_mouseTrackerCount;$/;"	m	class:RApplication	access:private
RApplication::m_palette	/home/viper/projects/RBit/rapplication.h	/^    RPalette              m_palette;$/;"	m	class:RApplication	access:private
RApplication::m_repeatDelay	/home/viper/projects/RBit/rapplication.h	/^    uint                  m_repeatDelay;$/;"	m	class:RApplication	access:private
RApplication::m_repeatKey	/home/viper/projects/RBit/rapplication.h	/^    SDL_keysym            m_repeatKey;$/;"	m	class:RApplication	access:private
RApplication::m_repeatPeriod	/home/viper/projects/RBit/rapplication.h	/^    uint                  m_repeatPeriod;$/;"	m	class:RApplication	access:private
RApplication::m_repeatPeriodLowerBound	/home/viper/projects/RBit/rapplication.h	/^    uint                  m_repeatPeriodLowerBound;    $/;"	m	class:RApplication	access:private
RApplication::m_screen	/home/viper/projects/RBit/rapplication.h	/^    SDL_Surface*          m_screen;        $/;"	m	class:RApplication	access:private
RApplication::m_screenRect	/home/viper/projects/RBit/rapplication.h	/^    RRect                 m_screenRect;    $/;"	m	class:RApplication	access:private
RApplication::m_toplevelWidgets	/home/viper/projects/RBit/rapplication.h	/^    RSiblingWidgetList    m_toplevelWidgets;$/;"	m	class:RApplication	access:private
RApplication::m_updateRect	/home/viper/projects/RBit/rapplication.h	/^    RRect                 m_updateRect;$/;"	m	class:RApplication	access:private
RApplication::mouseGrabberWidget	/home/viper/projects/RBit/rapplication.h	/^    RWidget* mouseGrabberWidget();$/;"	p	class:RApplication	access:protected	signature:()
RApplication::mouseGrabberWidget	/home/viper/projects/RBit/rapplication.h	/^inline RWidget* RApplication::mouseGrabberWidget()$/;"	f	class:RApplication	signature:()
RApplication::mouseTrackingEnabled	/home/viper/projects/RBit/rapplication.h	/^    bool mouseTrackingEnabled() const;$/;"	p	class:RApplication	access:protected	signature:() const
RApplication::mouseTrackingEnabled	/home/viper/projects/RBit/rapplication.h	/^inline bool RApplication::mouseTrackingEnabled() const$/;"	f	class:RApplication	signature:() const
RApplication::operator =	/home/viper/projects/RBit/rapplication.h	/^    RApplication& operator=(const RApplication&);$/;"	p	class:RApplication	access:private	signature:(const RApplication&)
RApplication::palette	/home/viper/projects/RBit/rapplication.cpp	/^const RPalette& RApplication::palette() const$/;"	f	class:RApplication	signature:() const
RApplication::palette	/home/viper/projects/RBit/rapplication.h	/^    const RPalette& palette() const;        $/;"	p	class:RApplication	access:public	signature:() const
RApplication::processMouseMotion	/home/viper/projects/RBit/rapplication.cpp	/^void RApplication::processMouseMotion(RWidget* w, const SDL_MouseMotionEvent& m, uint trackersCount)$/;"	f	class:RApplication	signature:(RWidget* w, const SDL_MouseMotionEvent& m, uint trackersCount)
RApplication::processMouseMotion	/home/viper/projects/RBit/rapplication.h	/^    void processMouseMotion(RWidget* w, const SDL_MouseMotionEvent& m, uint trackersCount);    $/;"	p	class:RApplication	access:protected	signature:(RWidget* w, const SDL_MouseMotionEvent& m, uint trackersCount)
RApplication::processPendingEvents	/home/viper/projects/RBit/rapplication.cpp	/^void RApplication::processPendingEvents()$/;"	f	class:RApplication	signature:()
RApplication::processPendingEvents	/home/viper/projects/RBit/rapplication.h	/^    void processPendingEvents();$/;"	p	class:RApplication	access:public	signature:()
RApplication::quit	/home/viper/projects/RBit/rapplication.h	/^    void quit();$/;"	p	class:RApplication	access:public	signature:()
RApplication::quit	/home/viper/projects/RBit/rapplication.h	/^inline void RApplication::quit()$/;"	f	class:RApplication	signature:()
RApplication::releaseMouse	/home/viper/projects/RBit/rapplication.cpp	/^void RApplication::releaseMouse(RWidget* w)$/;"	f	class:RApplication	signature:(RWidget* w)
RApplication::releaseMouse	/home/viper/projects/RBit/rapplication.h	/^    void releaseMouse(RWidget* w);$/;"	p	class:RApplication	access:protected	signature:(RWidget* w)
RApplication::run	/home/viper/projects/RBit/rapplication.cpp	/^void RApplication::run()$/;"	f	class:RApplication	signature:()
RApplication::run	/home/viper/projects/RBit/rapplication.h	/^    void run();$/;"	p	class:RApplication	access:public	signature:()
RApplication::screen	/home/viper/projects/RBit/rapplication.h	/^    SDL_Surface* screen();    $/;"	p	class:RApplication	access:protected	signature:()
RApplication::screen	/home/viper/projects/RBit/rapplication.h	/^inline SDL_Surface* RApplication::screen()$/;"	f	class:RApplication	signature:()
RApplication::screenRect	/home/viper/projects/RBit/rapplication.h	/^    const RRect& screenRect() const;$/;"	p	class:RApplication	access:public	signature:() const
RApplication::screenRect	/home/viper/projects/RBit/rapplication.h	/^inline const RRect& RApplication::screenRect() const$/;"	f	class:RApplication	signature:() const
RApplication::setAltEnterEnabled	/home/viper/projects/RBit/rapplication.h	/^    void setAltEnterEnabled(bool enabled);$/;"	p	class:RApplication	access:public	signature:(bool enabled)
RApplication::setAltEnterEnabled	/home/viper/projects/RBit/rapplication.h	/^inline void RApplication::setAltEnterEnabled(bool enabled)$/;"	f	class:RApplication	signature:(bool enabled)
RApplication::setCaption	/home/viper/projects/RBit/rapplication.h	/^    void setCaption(const char* name);$/;"	p	class:RApplication	access:public	signature:(const char* name)
RApplication::setCaption	/home/viper/projects/RBit/rapplication.h	/^inline void RApplication::setCaption(const char* name)$/;"	f	class:RApplication	signature:(const char* name)
RApplication::setCursorFlashTime	/home/viper/projects/RBit/rapplication.h	/^    void setCursorFlashTime(uint msecs); $/;"	p	class:RApplication	access:public	signature:(uint msecs)
RApplication::setCursorFlashTime	/home/viper/projects/RBit/rapplication.h	/^inline void RApplication::setCursorFlashTime(uint msecs)$/;"	f	class:RApplication	signature:(uint msecs)
RApplication::setDoubleClickEnabled	/home/viper/projects/RBit/rapplication.h	/^    void setDoubleClickEnabled(bool enabled);$/;"	p	class:RApplication	access:public	signature:(bool enabled)
RApplication::setDoubleClickEnabled	/home/viper/projects/RBit/rapplication.h	/^inline void RApplication::setDoubleClickEnabled(bool enabled)$/;"	f	class:RApplication	signature:(bool enabled)
RApplication::setDoubleClickMargin	/home/viper/projects/RBit/rapplication.h	/^    void setDoubleClickMargin(uint margin);$/;"	p	class:RApplication	access:public	signature:(uint margin)
RApplication::setDoubleClickMargin	/home/viper/projects/RBit/rapplication.h	/^inline void RApplication::setDoubleClickMargin(uint margin) $/;"	f	class:RApplication	signature:(uint margin)
RApplication::setFocusWidget	/home/viper/projects/RBit/rapplication.cpp	/^void RApplication::setFocusWidget(RWidget* w)$/;"	f	class:RApplication	signature:(RWidget* w)
RApplication::setFocusWidget	/home/viper/projects/RBit/rapplication.h	/^    void setFocusWidget(RWidget* w);$/;"	p	class:RApplication	access:protected	signature:(RWidget* w)
RApplication::setFont	/home/viper/projects/RBit/rapplication.cpp	/^void RApplication::setFont(const RFont& font)$/;"	f	class:RApplication	signature:(const RFont& font)
RApplication::setFont	/home/viper/projects/RBit/rapplication.h	/^    void setFont(const RFont& font);$/;"	p	class:RApplication	access:public	signature:(const RFont& font)
RApplication::setKeyAutoRepeat	/home/viper/projects/RBit/rapplication.cpp	/^void RApplication::setKeyAutoRepeat(bool autoRepeat)$/;"	f	class:RApplication	signature:(bool autoRepeat)
RApplication::setKeyAutoRepeat	/home/viper/projects/RBit/rapplication.h	/^    void setKeyAutoRepeat(bool autoRepeat);$/;"	p	class:RApplication	access:public	signature:(bool autoRepeat)
RApplication::setKeyAutoRepeatLatency	/home/viper/projects/RBit/rapplication.cpp	/^void RApplication::setKeyAutoRepeatLatency(uint latency)$/;"	f	class:RApplication	signature:(uint latency)
RApplication::setKeyAutoRepeatLatency	/home/viper/projects/RBit/rapplication.h	/^    void setKeyAutoRepeatLatency(uint delay);$/;"	p	class:RApplication	access:public	signature:(uint delay)
RApplication::setKeyAutoRepeatPeriod	/home/viper/projects/RBit/rapplication.cpp	/^void RApplication::setKeyAutoRepeatPeriod(uint period)$/;"	f	class:RApplication	signature:(uint period)
RApplication::setKeyAutoRepeatPeriod	/home/viper/projects/RBit/rapplication.h	/^    void setKeyAutoRepeatPeriod(uint period);$/;"	p	class:RApplication	access:public	signature:(uint period)
RApplication::setKeyRepeatPeriodLowerBound	/home/viper/projects/RBit/rapplication.cpp	/^void RApplication::setKeyRepeatPeriodLowerBound(uint bound)$/;"	f	class:RApplication	signature:(uint bound)
RApplication::setKeyRepeatPeriodLowerBound	/home/viper/projects/RBit/rapplication.h	/^    void setKeyRepeatPeriodLowerBound(uint bound);$/;"	p	class:RApplication	access:public	signature:(uint bound)
RApplication::setMouseTrackingEnabled	/home/viper/projects/RBit/rapplication.h	/^    bool setMouseTrackingEnabled(bool enabled);   $/;"	p	class:RApplication	access:private	signature:(bool enabled)
RApplication::setMouseTrackingEnabled	/home/viper/projects/RBit/rapplication.h	/^inline bool RApplication::setMouseTrackingEnabled(bool enabled)$/;"	f	class:RApplication	signature:(bool enabled)
RApplication::setPalette	/home/viper/projects/RBit/rapplication.cpp	/^void RApplication::setPalette(const RPalette& p)$/;"	f	class:RApplication	signature:(const RPalette& p)
RApplication::setPalette	/home/viper/projects/RBit/rapplication.h	/^    void setPalette(const RPalette&);$/;"	p	class:RApplication	access:public	signature:(const RPalette&)
RApplication::setScreen	/home/viper/projects/RBit/rapplication.cpp	/^bool RApplication::setScreen(SDL_Surface* surface)$/;"	f	class:RApplication	signature:(SDL_Surface* surface)
RApplication::setScreen	/home/viper/projects/RBit/rapplication.cpp	/^bool RApplication::setScreen(int w, int h, int depth, bool fullscreen)$/;"	f	class:RApplication	signature:(int w, int h, int depth, bool fullscreen)
RApplication::setScreen	/home/viper/projects/RBit/rapplication.h	/^    bool setScreen(SDL_Surface* surface);$/;"	p	class:RApplication	access:public	signature:(SDL_Surface* surface)
RApplication::setScreen	/home/viper/projects/RBit/rapplication.h	/^    bool setScreen(int w, int h, int depth, bool fullscreen);   $/;"	p	class:RApplication	access:public	signature:(int w, int h, int depth, bool fullscreen)
RApplication::setScreenUpdateArea	/home/viper/projects/RBit/rapplication.h	/^    void setScreenUpdateArea(const RRect&);$/;"	p	class:RApplication	access:protected	signature:(const RRect&)
RApplication::setScreenUpdateArea	/home/viper/projects/RBit/rapplication.h	/^inline void RApplication::setScreenUpdateArea(const RRect& r) $/;"	f	class:RApplication	signature:(const RRect& r)
RApplication::showCursor	/home/viper/projects/RBit/rapplication.h	/^    void showCursor(bool on = true);$/;"	p	class:RApplication	access:public	signature:(bool on = true)
RApplication::showCursor	/home/viper/projects/RBit/rapplication.h	/^inline void RApplication::showCursor(bool on)$/;"	f	class:RApplication	signature:(bool on)
RApplication::translate	/home/viper/projects/RBit/rapplication.cpp	/^void RApplication::translate(SDL_keysym* key)$/;"	f	class:RApplication	signature:(SDL_keysym* key)
RApplication::translate	/home/viper/projects/RBit/rapplication.h	/^    void translate(SDL_keysym* key);$/;"	p	class:RApplication	access:private	signature:(SDL_keysym* key)
RApplication::unicode_toLocal8bit	/home/viper/projects/RBit/rapplication.cpp	/^Uint8 RApplication::unicode_toLocal8bit(Uint16 ch)$/;"	f	class:RApplication	signature:(Uint16 ch)
RApplication::unicode_toLocal8bit	/home/viper/projects/RBit/rapplication.h	/^    Uint8 unicode_toLocal8bit(Uint16 ch);$/;"	p	class:RApplication	access:public	signature:(Uint16 ch)
RApplication::updateScreen	/home/viper/projects/RBit/rapplication.cpp	/^void RApplication::updateScreen(const RRect& r)$/;"	f	class:RApplication	signature:(const RRect& r)
RApplication::updateScreen	/home/viper/projects/RBit/rapplication.h	/^    void updateScreen();$/;"	p	class:RApplication	access:public	signature:()
RApplication::updateScreen	/home/viper/projects/RBit/rapplication.h	/^    void updateScreen(const RRect& r);$/;"	p	class:RApplication	access:public	signature:(const RRect& r)
RApplication::updateScreen	/home/viper/projects/RBit/rapplication.h	/^inline void RApplication::updateScreen()$/;"	f	class:RApplication	signature:()
RApplication::~RApplication	/home/viper/projects/RBit/rapplication.cpp	/^RApplication::~RApplication()$/;"	f	class:RApplication	signature:()
RApplication::~RApplication	/home/viper/projects/RBit/rapplication.h	/^    ~RApplication();    $/;"	p	class:RApplication	access:public	signature:()
RArrayContainer	/home/viper/projects/RBit/rarraycontainer.h	/^	RArrayContainer();$/;"	p	class:RArrayContainer	access:public	signature:()
RArrayContainer	/home/viper/projects/RBit/rarraycontainer.h	/^	RArrayContainer(const RArrayContainer&);	$/;"	p	class:RArrayContainer	access:public	signature:(const RArrayContainer&)
RArrayContainer	/home/viper/projects/RBit/rarraycontainer.h	/^	RArrayContainer(const T* array, Uint32 size);$/;"	p	class:RArrayContainer	access:public	signature:(const T* array, Uint32 size)
RArrayContainer	/home/viper/projects/RBit/rarraycontainer.h	/^    explicit RArrayContainer(Uint32 size);$/;"	p	class:RArrayContainer	access:public	signature:(Uint32 size)
RArrayContainer	/home/viper/projects/RBit/rarraycontainer.h	/^inline RArrayContainer<T>::RArrayContainer()$/;"	f	class:RArrayContainer	signature:()
RArrayContainer	/home/viper/projects/RBit/rarraycontainer.h	/^inline RArrayContainer<T>::RArrayContainer(Uint32 size)$/;"	f	class:RArrayContainer	signature:(Uint32 size)
RArrayContainer	/home/viper/projects/RBit/rarraycontainer.h	/^inline RArrayContainer<T>::RArrayContainer(const T* array, Uint32 size)$/;"	f	class:RArrayContainer	signature:(const T* array, Uint32 size)
RArrayContainer	/home/viper/projects/RBit/rarraycontainer.h	/^template <class T> class RArrayContainer$/;"	c
RArrayContainer::RArrayContainer	/home/viper/projects/RBit/rarraycontainer.h	/^	RArrayContainer();$/;"	p	class:RArrayContainer	access:public	signature:()
RArrayContainer::RArrayContainer	/home/viper/projects/RBit/rarraycontainer.h	/^	RArrayContainer(const RArrayContainer&);	$/;"	p	class:RArrayContainer	access:public	signature:(const RArrayContainer&)
RArrayContainer::RArrayContainer	/home/viper/projects/RBit/rarraycontainer.h	/^	RArrayContainer(const T* array, Uint32 size);$/;"	p	class:RArrayContainer	access:public	signature:(const T* array, Uint32 size)
RArrayContainer::RArrayContainer	/home/viper/projects/RBit/rarraycontainer.h	/^    explicit RArrayContainer(Uint32 size);$/;"	p	class:RArrayContainer	access:public	signature:(Uint32 size)
RArrayContainer::RArrayContainer	/home/viper/projects/RBit/rarraycontainer.h	/^inline RArrayContainer<T>::RArrayContainer()$/;"	f	class:RArrayContainer	signature:()
RArrayContainer::RArrayContainer	/home/viper/projects/RBit/rarraycontainer.h	/^inline RArrayContainer<T>::RArrayContainer(Uint32 size)$/;"	f	class:RArrayContainer	signature:(Uint32 size)
RArrayContainer::RArrayContainer	/home/viper/projects/RBit/rarraycontainer.h	/^inline RArrayContainer<T>::RArrayContainer(const T* array, Uint32 size)$/;"	f	class:RArrayContainer	signature:(const T* array, Uint32 size)
RArrayContainer::copy	/home/viper/projects/RBit/rarraycontainer.h	/^	void    copy(const T* array, Uint32 size);$/;"	p	class:RArrayContainer	access:public	signature:(const T* array, Uint32 size)
RArrayContainer::copy	/home/viper/projects/RBit/rarraycontainer.h	/^inline void RArrayContainer<T>::copy(const T* array, Uint32 size)$/;"	f	class:RArrayContainer	signature:(const T* array, Uint32 size)
RArrayContainer::free	/home/viper/projects/RBit/rarraycontainer.h	/^	void    free();$/;"	p	class:RArrayContainer	access:public	signature:()
RArrayContainer::free	/home/viper/projects/RBit/rarraycontainer.h	/^inline void RArrayContainer<T>::free()$/;"	f	class:RArrayContainer	signature:()
RArrayContainer::get	/home/viper/projects/RBit/rarraycontainer.h	/^	T*      get() const;		$/;"	p	class:RArrayContainer	access:public	signature:() const
RArrayContainer::get	/home/viper/projects/RBit/rarraycontainer.h	/^inline T* RArrayContainer<T>::get() const$/;"	f	class:RArrayContainer	signature:() const
RArrayContainer::m_array	/home/viper/projects/RBit/rarraycontainer.h	/^	T*      m_array;$/;"	m	class:RArrayContainer	access:private
RArrayContainer::m_size	/home/viper/projects/RBit/rarraycontainer.h	/^	Uint32  m_size;$/;"	m	class:RArrayContainer	access:private
RArrayContainer::operator =	/home/viper/projects/RBit/rarraycontainer.h	/^	RArrayContainer& operator=(const RArrayContainer&);	$/;"	p	class:RArrayContainer	access:public	signature:(const RArrayContainer&)
RArrayContainer::operator =	/home/viper/projects/RBit/rarraycontainer.h	/^inline RArrayContainer<T>& RArrayContainer<T>::operator=(const RArrayContainer<T>& c)$/;"	f	class:RArrayContainer	signature:(const RArrayContainer<T>& c)
RArrayContainer::set	/home/viper/projects/RBit/rarraycontainer.h	/^	void    set(T* array, Uint32 size);$/;"	p	class:RArrayContainer	access:public	signature:(T* array, Uint32 size)
RArrayContainer::set	/home/viper/projects/RBit/rarraycontainer.h	/^inline void RArrayContainer<T>::set(T* array, Uint32 size)$/;"	f	class:RArrayContainer	signature:(T* array, Uint32 size)
RArrayContainer::size	/home/viper/projects/RBit/rarraycontainer.h	/^	Uint32  size() const;	$/;"	p	class:RArrayContainer	access:public	signature:() const
RArrayContainer::size	/home/viper/projects/RBit/rarraycontainer.h	/^inline Uint32 RArrayContainer<T>::size() const$/;"	f	class:RArrayContainer	signature:() const
RArrayContainer::~RArrayContainer	/home/viper/projects/RBit/rarraycontainer.h	/^	~RArrayContainer();$/;"	p	class:RArrayContainer	access:public	signature:()
RArrayContainer::~RArrayContainer	/home/viper/projects/RBit/rarraycontainer.h	/^inline RArrayContainer<T>::~RArrayContainer()$/;"	f	class:RArrayContainer	signature:()
RBIT_CORE_EXPORT	/home/viper/projects/RBit/rglobal.h	47;"	d
RBIT_CORE_EXPORT	/home/viper/projects/RBit/rglobal.h	49;"	d
RBIT_CORE_EXPORT	/home/viper/projects/RBit/rglobal.h	52;"	d
RBIT_CORE_EXPORT	/home/viper/projects/RBit/rglobal.h	61;"	d
RBIT_CORE_EXPORT	/home/viper/projects/RBit/rglobal.h	63;"	d
RBIT_DECL_EXPORT	/home/viper/projects/RBit/rglobal.h	22;"	d
RBIT_DECL_EXPORT	/home/viper/projects/RBit/rglobal.h	24;"	d
RBIT_DECL_EXPORT	/home/viper/projects/RBit/rglobal.h	27;"	d
RBIT_DECL_IMPORT	/home/viper/projects/RBit/rglobal.h	32;"	d
RBIT_DECL_IMPORT	/home/viper/projects/RBit/rglobal.h	34;"	d
RBIT_DLL	/home/viper/projects/RBit/rglobal.h	41;"	d
RBIT_DLL	/home/viper/projects/RBit/rglobal.h	44;"	d
RBIT_DLL	/home/viper/projects/RBit/rglobal.h	56;"	d
RBIT_H	/home/viper/projects/RBit/rbit.h	2;"	d
RBIT_MAKEDLL	/home/viper/projects/RBit/rglobal.h	40;"	d
RBIT_MAKEDLL	/home/viper/projects/RBit/rglobal.h	55;"	d
RBUTTON_H	/home/viper/projects/RBit/rbutton.h	2;"	d
RBit	/home/viper/projects/RBit/rbit.h	/^namespace RBit$/;"	n
RBit::AscendingOrder	/home/viper/projects/RBit/rbit.h	/^        AscendingOrder,$/;"	e	enum:RBit::SortOrder
RBit::CheckState	/home/viper/projects/RBit/rbit.h	/^    enum CheckState$/;"	g	namespace:RBit
RBit::Checked	/home/viper/projects/RBit/rbit.h	/^        Checked$/;"	e	enum:RBit::CheckState
RBit::DescendingOrder	/home/viper/projects/RBit/rbit.h	/^        DescendingOrder$/;"	e	enum:RBit::SortOrder
RBit::GlobalColor	/home/viper/projects/RBit/rbit.h	/^    enum GlobalColor {$/;"	g	namespace:RBit
RBit::Horizontal	/home/viper/projects/RBit/rbit.h	/^        Horizontal,$/;"	e	enum:RBit::Orientation
RBit::Orientation	/home/viper/projects/RBit/rbit.h	/^    enum Orientation$/;"	g	namespace:RBit
RBit::SortOrder	/home/viper/projects/RBit/rbit.h	/^    enum SortOrder$/;"	g	namespace:RBit
RBit::Unchecked	/home/viper/projects/RBit/rbit.h	/^        Unchecked=0,$/;"	e	enum:RBit::CheckState
RBit::Vertical	/home/viper/projects/RBit/rbit.h	/^        Vertical$/;"	e	enum:RBit::Orientation
RBit::black	/home/viper/projects/RBit/rbit.h	/^        black,$/;"	e	enum:RBit::GlobalColor
RBit::blue	/home/viper/projects/RBit/rbit.h	/^        blue,$/;"	e	enum:RBit::GlobalColor
RBit::cyan	/home/viper/projects/RBit/rbit.h	/^        cyan,$/;"	e	enum:RBit::GlobalColor
RBit::darkBlue	/home/viper/projects/RBit/rbit.h	/^        darkBlue,$/;"	e	enum:RBit::GlobalColor
RBit::darkCyan	/home/viper/projects/RBit/rbit.h	/^        darkCyan,$/;"	e	enum:RBit::GlobalColor
RBit::darkGray	/home/viper/projects/RBit/rbit.h	/^        darkGray,$/;"	e	enum:RBit::GlobalColor
RBit::darkGreen	/home/viper/projects/RBit/rbit.h	/^        darkGreen,$/;"	e	enum:RBit::GlobalColor
RBit::darkMagenta	/home/viper/projects/RBit/rbit.h	/^        darkMagenta,$/;"	e	enum:RBit::GlobalColor
RBit::darkRed	/home/viper/projects/RBit/rbit.h	/^        darkRed,$/;"	e	enum:RBit::GlobalColor
RBit::darkYellow	/home/viper/projects/RBit/rbit.h	/^        darkYellow        $/;"	e	enum:RBit::GlobalColor
RBit::gray	/home/viper/projects/RBit/rbit.h	/^        gray,$/;"	e	enum:RBit::GlobalColor
RBit::green	/home/viper/projects/RBit/rbit.h	/^        green,$/;"	e	enum:RBit::GlobalColor
RBit::lightGray	/home/viper/projects/RBit/rbit.h	/^        lightGray,$/;"	e	enum:RBit::GlobalColor
RBit::magenta	/home/viper/projects/RBit/rbit.h	/^        magenta,$/;"	e	enum:RBit::GlobalColor
RBit::red	/home/viper/projects/RBit/rbit.h	/^        red,$/;"	e	enum:RBit::GlobalColor
RBit::white	/home/viper/projects/RBit/rbit.h	/^        white,$/;"	e	enum:RBit::GlobalColor
RBit::yellow	/home/viper/projects/RBit/rbit.h	/^        yellow,$/;"	e	enum:RBit::GlobalColor
RBlendingMap	/home/viper/projects/RBit/rcolormanager.cpp	/^class RBlendingMap$/;"	c	file:
RBlendingMap1	/home/viper/projects/RBit/rcolormanager.cpp	/^    RBlendingMap1();    $/;"	p	class:RBlendingMap1	file:	access:public	signature:()
RBlendingMap1	/home/viper/projects/RBit/rcolormanager.cpp	/^RBlendingMap1::RBlendingMap1()$/;"	f	class:RBlendingMap1	signature:()
RBlendingMap1	/home/viper/projects/RBit/rcolormanager.cpp	/^class RBlendingMap1 : public RBlendingMap$/;"	c	file:	inherits:RBlendingMap
RBlendingMap1::ColorArray	/home/viper/projects/RBit/rcolormanager.cpp	/^    struct ColorArray$/;"	s	class:RBlendingMap1	file:	access:private
RBlendingMap1::ColorArray::ColorArray	/home/viper/projects/RBit/rcolormanager.cpp	/^        ColorArray() $/;"	f	struct:RBlendingMap1::ColorArray	access:public	signature:()
RBlendingMap1::ColorArray::m_count	/home/viper/projects/RBit/rcolormanager.cpp	/^        Uint8 m_count;$/;"	m	struct:RBlendingMap1::ColorArray	file:	access:public
RBlendingMap1::ColorArray::m_nodes	/home/viper/projects/RBit/rcolormanager.cpp	/^        ColorNode* m_nodes;$/;"	m	struct:RBlendingMap1::ColorArray	file:	access:public
RBlendingMap1::ColorArray::~ColorArray	/home/viper/projects/RBit/rcolormanager.cpp	/^        ~ColorArray() $/;"	f	struct:RBlendingMap1::ColorArray	access:public	signature:()
RBlendingMap1::ColorNode	/home/viper/projects/RBit/rcolormanager.cpp	/^    struct ColorNode $/;"	s	class:RBlendingMap1	file:	access:private
RBlendingMap1::ColorNode::c	/home/viper/projects/RBit/rcolormanager.cpp	/^        Uint8 c;    \/\/ ˆ‚ÂÚ$/;"	m	struct:RBlendingMap1::ColorNode	file:	access:public
RBlendingMap1::ColorNode::i	/home/viper/projects/RBit/rcolormanager.cpp	/^        Uint8 i;    \/\/ ËÌÚÂÌÒË‚ÌÓÒÚ¸$/;"	m	struct:RBlendingMap1::ColorNode	file:	access:public
RBlendingMap1::RBlendingMap1	/home/viper/projects/RBit/rcolormanager.cpp	/^    RBlendingMap1();    $/;"	p	class:RBlendingMap1	file:	access:public	signature:()
RBlendingMap1::RBlendingMap1	/home/viper/projects/RBit/rcolormanager.cpp	/^RBlendingMap1::RBlendingMap1()$/;"	f	class:RBlendingMap1	signature:()
RBlendingMap1::blendColor	/home/viper/projects/RBit/rcolormanager.cpp	/^    virtual Uint32 blendColor(const RColor& fg, Uint32 bg, Uint8 i, SDL_PixelFormat* format);$/;"	p	class:RBlendingMap1	file:	access:public	signature:(const RColor& fg, Uint32 bg, Uint8 i, SDL_PixelFormat* format)
RBlendingMap1::blendColor	/home/viper/projects/RBit/rcolormanager.cpp	/^Uint32 RBlendingMap1::blendColor(const RColor& fg, Uint32 bgi, Uint8 intencity, SDL_PixelFormat* format)$/;"	f	class:RBlendingMap1	signature:(const RColor& fg, Uint32 bgi, Uint8 intencity, SDL_PixelFormat* format)
RBlendingMap1::m_arrays	/home/viper/projects/RBit/rcolormanager.cpp	/^    }           m_arrays[0x10000];$/;"	m	class:RBlendingMap1	typeref:struct:RBlendingMap1::ColorArray	file:	access:private
RBlendingMap1::m_larr	/home/viper/projects/RBit/rcolormanager.cpp	/^    ColorArray* m_larr; $/;"	m	class:RBlendingMap1	file:	access:private
RBlendingMap1::m_li	/home/viper/projects/RBit/rcolormanager.cpp	/^    Uint8       m_li;$/;"	m	class:RBlendingMap1	file:	access:private
RBlendingMap1::m_lres	/home/viper/projects/RBit/rcolormanager.cpp	/^    Uint32      m_lres;$/;"	m	class:RBlendingMap1	file:	access:private
RBlendingMap::blendColor	/home/viper/projects/RBit/rcolormanager.cpp	/^    virtual Uint32 blendColor(const RColor& fg, Uint32 bg, Uint8 i, SDL_PixelFormat* format);$/;"	p	class:RBlendingMap	file:	access:public	signature:(const RColor& fg, Uint32 bg, Uint8 i, SDL_PixelFormat* format)
RBlendingMap::blendColor	/home/viper/projects/RBit/rcolormanager.cpp	/^Uint32 RBlendingMap::blendColor(const RColor& fg, Uint32 bgi, Uint8 i, SDL_PixelFormat* format)$/;"	f	class:RBlendingMap	signature:(const RColor& fg, Uint32 bgi, Uint8 i, SDL_PixelFormat* format)
RBlendingMap::~RBlendingMap	/home/viper/projects/RBit/rcolormanager.cpp	/^    virtual ~RBlendingMap() {}$/;"	f	class:RBlendingMap	access:public	signature:()
RBlendingMapPtr	/home/viper/projects/RBit/rcolormanager.cpp	/^RColorManager::RBlendingMapPtr::RBlendingMapPtr()$/;"	f	class:RColorManager::RBlendingMapPtr	signature:()
RBlendingMapPtr	/home/viper/projects/RBit/rcolormanager.cpp	/^RColorManager::RBlendingMapPtr::RBlendingMapPtr(RBlendingMap* m)$/;"	f	class:RColorManager::RBlendingMapPtr	signature:(RBlendingMap* m)
RBlendingMapPtr	/home/viper/projects/RBit/rcolormanager.h	/^        RBlendingMapPtr();$/;"	p	class:RColorManager::RBlendingMapPtr	access:public	signature:()
RBlendingMapPtr	/home/viper/projects/RBit/rcolormanager.h	/^        RBlendingMapPtr(RBlendingMap* s);   $/;"	p	class:RColorManager::RBlendingMapPtr	access:public	signature:(RBlendingMap* s)
RBlendingMapPtr	/home/viper/projects/RBit/rcolormanager.h	/^    class RBlendingMapPtr$/;"	c	class:RColorManager	access:private
RButton	/home/viper/projects/RBit/rbutton.cpp	/^RButton::RButton(RWidget* parent, RWFlags f) $/;"	f	class:RButton	signature:(RWidget* parent, RWFlags f)
RButton	/home/viper/projects/RBit/rbutton.h	/^    RButton(const RButton&);$/;"	p	class:RButton	access:private	signature:(const RButton&)
RButton	/home/viper/projects/RBit/rbutton.h	/^    explicit RButton(RWidget* parent = 0, RWFlags f = RWFlags(0));$/;"	p	class:RButton	access:public	signature:(RWidget* parent = 0, RWFlags f = RWFlags(0))
RButton	/home/viper/projects/RBit/rbutton.h	/^class RBIT_CORE_EXPORT RButton : public RWidget, $/;"	c	inherits:RWidget,RTextPainter,RFramePainter
RButton::RButton	/home/viper/projects/RBit/rbutton.cpp	/^RButton::RButton(RWidget* parent, RWFlags f) $/;"	f	class:RButton	signature:(RWidget* parent, RWFlags f)
RButton::RButton	/home/viper/projects/RBit/rbutton.h	/^    RButton(const RButton&);$/;"	p	class:RButton	access:private	signature:(const RButton&)
RButton::RButton	/home/viper/projects/RBit/rbutton.h	/^    explicit RButton(RWidget* parent = 0, RWFlags f = RWFlags(0));$/;"	p	class:RButton	access:public	signature:(RWidget* parent = 0, RWFlags f = RWFlags(0))
RButton::animateClick	/home/viper/projects/RBit/rbutton.cpp	/^void RButton::animateClick(int msec)$/;"	f	class:RButton	signature:(int msec)
RButton::animateClick	/home/viper/projects/RBit/rbutton.h	/^    void animateClick(int msec = 100);$/;"	p	class:RButton	access:public	signature:(int msec = 100)
RButton::autoRepeat	/home/viper/projects/RBit/rbutton.cpp	/^bool RButton::autoRepeat() const$/;"	f	class:RButton	signature:() const
RButton::autoRepeat	/home/viper/projects/RBit/rbutton.h	/^    bool autoRepeat() const;$/;"	p	class:RButton	access:public	signature:() const
RButton::click	/home/viper/projects/RBit/rbutton.cpp	/^void RButton::click()$/;"	f	class:RButton	signature:()
RButton::click	/home/viper/projects/RBit/rbutton.h	/^    virtual void click();$/;"	p	class:RButton	access:public	signature:()
RButton::drawFocus	/home/viper/projects/RBit/rbutton.cpp	/^void RButton::drawFocus(const RRect& r)$/;"	f	class:RButton	signature:(const RRect& r)
RButton::drawFocus	/home/viper/projects/RBit/rbutton.h	/^    void drawFocus(const RRect& r);    $/;"	p	class:RButton	access:protected	signature:(const RRect& r)
RButton::eventFocusLost	/home/viper/projects/RBit/rbutton.cpp	/^void RButton::eventFocusLost()$/;"	f	class:RButton	signature:()
RButton::eventFocusLost	/home/viper/projects/RBit/rbutton.h	/^    virtual void eventFocusLost();$/;"	p	class:RButton	access:protected	signature:()
RButton::eventFocusSet	/home/viper/projects/RBit/rbutton.cpp	/^void RButton::eventFocusSet()$/;"	f	class:RButton	signature:()
RButton::eventFocusSet	/home/viper/projects/RBit/rbutton.h	/^    virtual void eventFocusSet();$/;"	p	class:RButton	access:protected	signature:()
RButton::eventIdle	/home/viper/projects/RBit/rbutton.cpp	/^void RButton::eventIdle()$/;"	f	class:RButton	signature:()
RButton::eventIdle	/home/viper/projects/RBit/rbutton.h	/^    virtual void eventIdle();$/;"	p	class:RButton	access:protected	signature:()
RButton::eventKeyDown	/home/viper/projects/RBit/rbutton.cpp	/^bool RButton::eventKeyDown(const SDL_keysym& key, bool autoRepeat)$/;"	f	class:RButton	signature:(const SDL_keysym& key, bool autoRepeat)
RButton::eventKeyDown	/home/viper/projects/RBit/rbutton.h	/^    virtual bool eventKeyDown(const SDL_keysym& key, bool autoRepeat);$/;"	p	class:RButton	access:protected	signature:(const SDL_keysym& key, bool autoRepeat)
RButton::eventKeyUp	/home/viper/projects/RBit/rbutton.cpp	/^bool RButton::eventKeyUp(const SDL_keysym& key, bool autoRepeat)$/;"	f	class:RButton	signature:(const SDL_keysym& key, bool autoRepeat)
RButton::eventKeyUp	/home/viper/projects/RBit/rbutton.h	/^    virtual bool eventKeyUp(const SDL_keysym& key, bool autoRepeat);$/;"	p	class:RButton	access:protected	signature:(const SDL_keysym& key, bool autoRepeat)
RButton::eventMouseDown	/home/viper/projects/RBit/rbutton.cpp	/^void RButton::eventMouseDown(const SDL_MouseButtonEvent& m)$/;"	f	class:RButton	signature:(const SDL_MouseButtonEvent& m)
RButton::eventMouseDown	/home/viper/projects/RBit/rbutton.h	/^    virtual void eventMouseDown(const SDL_MouseButtonEvent& m);$/;"	p	class:RButton	access:protected	signature:(const SDL_MouseButtonEvent& m)
RButton::eventMouseUp	/home/viper/projects/RBit/rbutton.cpp	/^void RButton::eventMouseUp(const SDL_MouseButtonEvent& m)$/;"	f	class:RButton	signature:(const SDL_MouseButtonEvent& m)
RButton::eventMouseUp	/home/viper/projects/RBit/rbutton.h	/^    virtual void eventMouseUp(const SDL_MouseButtonEvent& m);$/;"	p	class:RButton	access:protected	signature:(const SDL_MouseButtonEvent& m)
RButton::isCheckable	/home/viper/projects/RBit/rbutton.cpp	/^bool RButton::isCheckable() const$/;"	f	class:RButton	signature:() const
RButton::isCheckable	/home/viper/projects/RBit/rbutton.h	/^    bool isCheckable() const;$/;"	p	class:RButton	access:public	signature:() const
RButton::isChecked	/home/viper/projects/RBit/rbutton.cpp	/^bool RButton::isChecked() const$/;"	f	class:RButton	signature:() const
RButton::isChecked	/home/viper/projects/RBit/rbutton.h	/^    bool isChecked() const;$/;"	p	class:RButton	access:public	signature:() const
RButton::isFlat	/home/viper/projects/RBit/rbutton.cpp	/^bool RButton::isFlat() const$/;"	f	class:RButton	signature:() const
RButton::isFlat	/home/viper/projects/RBit/rbutton.h	/^    bool isFlat() const;$/;"	p	class:RButton	access:public	signature:() const
RButton::isPressed	/home/viper/projects/RBit/rbutton.cpp	/^bool RButton::isPressed() const$/;"	f	class:RButton	signature:() const
RButton::isPressed	/home/viper/projects/RBit/rbutton.h	/^    bool isPressed() const;$/;"	p	class:RButton	access:public	signature:() const
RButton::m_d	/home/viper/projects/RBit/rbutton.h	/^    RButtonPrivate* m_d;$/;"	m	class:RButton	access:private
RButton::nextCheckState	/home/viper/projects/RBit/rbutton.cpp	/^void RButton::nextCheckState()$/;"	f	class:RButton	signature:()
RButton::nextCheckState	/home/viper/projects/RBit/rbutton.h	/^    void nextCheckState();$/;"	p	class:RButton	access:protected	signature:()
RButton::operator =	/home/viper/projects/RBit/rbutton.h	/^    RButton& operator=(const RButton&);$/;"	p	class:RButton	access:private	signature:(const RButton&)
RButton::pressed	/home/viper/projects/RBit/rbutton.cpp	/^void RButton::pressed()$/;"	f	class:RButton	signature:()
RButton::pressed	/home/viper/projects/RBit/rbutton.h	/^    virtual void pressed();$/;"	p	class:RButton	access:protected	signature:()
RButton::released	/home/viper/projects/RBit/rbutton.cpp	/^void RButton::released()$/;"	f	class:RButton	signature:()
RButton::released	/home/viper/projects/RBit/rbutton.h	/^    virtual void released();$/;"	p	class:RButton	access:protected	signature:()
RButton::repaintImpl	/home/viper/projects/RBit/rbutton.cpp	/^void RButton::repaintImpl(const RRect& r)$/;"	f	class:RButton	signature:(const RRect& r)
RButton::repaintImpl	/home/viper/projects/RBit/rbutton.h	/^    virtual void repaintImpl(const RRect& r); $/;"	p	class:RButton	access:protected	signature:(const RRect& r)
RButton::setAutoRepeat	/home/viper/projects/RBit/rbutton.cpp	/^void RButton::setAutoRepeat(bool yes)$/;"	f	class:RButton	signature:(bool yes)
RButton::setAutoRepeat	/home/viper/projects/RBit/rbutton.h	/^    void setAutoRepeat(bool autoRepeat);$/;"	p	class:RButton	access:public	signature:(bool autoRepeat)
RButton::setCheckable	/home/viper/projects/RBit/rbutton.cpp	/^void RButton::setCheckable(bool checkable)$/;"	f	class:RButton	signature:(bool checkable)
RButton::setCheckable	/home/viper/projects/RBit/rbutton.h	/^    void setCheckable(bool checkable);$/;"	p	class:RButton	access:public	signature:(bool checkable)
RButton::setChecked	/home/viper/projects/RBit/rbutton.cpp	/^void RButton::setChecked(bool checked)$/;"	f	class:RButton	signature:(bool checked)
RButton::setChecked	/home/viper/projects/RBit/rbutton.h	/^    void setChecked(bool checked);$/;"	p	class:RButton	access:public	signature:(bool checked)
RButton::setFlat	/home/viper/projects/RBit/rbutton.cpp	/^void RButton::setFlat(bool yes)$/;"	f	class:RButton	signature:(bool yes)
RButton::setFlat	/home/viper/projects/RBit/rbutton.h	/^    void setFlat(bool flat);$/;"	p	class:RButton	access:public	signature:(bool flat)
RButton::setText	/home/viper/projects/RBit/rbutton.cpp	/^void RButton::setText(const char* str)$/;"	f	class:RButton	signature:(const char* str)
RButton::setText	/home/viper/projects/RBit/rbutton.h	/^    void setText(const char* str);$/;"	p	class:RButton	access:public	signature:(const char* str)
RButton::setTextRef	/home/viper/projects/RBit/rbutton.cpp	/^void RButton::setTextRef(const char* str)$/;"	f	class:RButton	signature:(const char* str)
RButton::setTextRef	/home/viper/projects/RBit/rbutton.h	/^    void setTextRef(const char* str);$/;"	p	class:RButton	access:public	signature:(const char* str)
RButton::sizeHint	/home/viper/projects/RBit/rbutton.cpp	/^RSize RButton::sizeHint() const$/;"	f	class:RButton	signature:() const
RButton::sizeHint	/home/viper/projects/RBit/rbutton.h	/^    RSize sizeHint() const;$/;"	p	class:RButton	access:public	signature:() const
RButton::text	/home/viper/projects/RBit/rbutton.cpp	/^const char* RButton::text() const$/;"	f	class:RButton	signature:() const
RButton::text	/home/viper/projects/RBit/rbutton.h	/^    const char*	text() const; $/;"	p	class:RButton	access:public	signature:() const
RButton::toggle	/home/viper/projects/RBit/rbutton.cpp	/^void RButton::toggle()$/;"	f	class:RButton	signature:()
RButton::toggle	/home/viper/projects/RBit/rbutton.h	/^    void toggle();$/;"	p	class:RButton	access:public	signature:()
RButton::toggled	/home/viper/projects/RBit/rbutton.cpp	/^void RButton::toggled()$/;"	f	class:RButton	signature:()
RButton::toggled	/home/viper/projects/RBit/rbutton.h	/^    virtual void toggled();$/;"	p	class:RButton	access:protected	signature:()
RButton::~RButton	/home/viper/projects/RBit/rbutton.cpp	/^RButton::~RButton()$/;"	f	class:RButton	signature:()
RButton::~RButton	/home/viper/projects/RBit/rbutton.h	/^    ~RButton();$/;"	p	class:RButton	access:public	signature:()
RButtonPrivate	/home/viper/projects/RBit/rbutton.cpp	/^    RButtonPrivate()$/;"	f	class:RButtonPrivate	access:public	signature:()
RButtonPrivate	/home/viper/projects/RBit/rbutton.cpp	/^class RButtonPrivate$/;"	c	file:
RButtonPrivate::RButtonPrivate	/home/viper/projects/RBit/rbutton.cpp	/^    RButtonPrivate()$/;"	f	class:RButtonPrivate	access:public	signature:()
RButtonPrivate::animMsec	/home/viper/projects/RBit/rbutton.cpp	/^    int animMsec;$/;"	m	class:RButtonPrivate	file:	access:public
RButtonPrivate::animTicks	/home/viper/projects/RBit/rbutton.cpp	/^    uint animTicks;$/;"	m	class:RButtonPrivate	file:	access:public
RButtonPrivate::buff	/home/viper/projects/RBit/rbutton.cpp	/^    RString buff;$/;"	m	class:RButtonPrivate	file:	access:public
RButtonPrivate::text	/home/viper/projects/RBit/rbutton.cpp	/^    const char*	text;$/;"	m	class:RButtonPrivate	file:	access:public
RCHECKBOX_H	/home/viper/projects/RBit/rcheckbox.h	2;"	d
RCOLOR_H	/home/viper/projects/RBit/rcolor.h	2;"	d
RCOMBOBOX_H	/home/viper/projects/RBit/rcombobox.h	2;"	d
RCheckBox	/home/viper/projects/RBit/rcheckbox.cpp	/^RCheckBox::RCheckBox(RBit::CheckState state, RWidget* parent, RWFlags flags)$/;"	f	class:RCheckBox	signature:(RBit::CheckState state, RWidget* parent, RWFlags flags)
RCheckBox	/home/viper/projects/RBit/rcheckbox.cpp	/^RCheckBox::RCheckBox(RWidget* parent, RWFlags flags)$/;"	f	class:RCheckBox	signature:(RWidget* parent, RWFlags flags)
RCheckBox	/home/viper/projects/RBit/rcheckbox.h	/^	RCheckBox(const RCheckBox&);$/;"	p	class:RCheckBox	access:private	signature:(const RCheckBox&)
RCheckBox	/home/viper/projects/RBit/rcheckbox.h	/^    RCheckBox(RWidget* parent=0, RWFlags flags=0);$/;"	p	class:RCheckBox	access:public	signature:(RWidget* parent=0, RWFlags flags=0)
RCheckBox	/home/viper/projects/RBit/rcheckbox.h	/^    explicit RCheckBox(RBit::CheckState, RWidget* parent=0, RWFlags flags=0);$/;"	p	class:RCheckBox	access:public	signature:(RBit::CheckState, RWidget* parent=0, RWFlags flags=0)
RCheckBox	/home/viper/projects/RBit/rcheckbox.h	/^class RBIT_CORE_EXPORT RCheckBox : public RWidget, $/;"	c	inherits:RWidget,RTextPainter
RCheckBox::RCheckBox	/home/viper/projects/RBit/rcheckbox.cpp	/^RCheckBox::RCheckBox(RBit::CheckState state, RWidget* parent, RWFlags flags)$/;"	f	class:RCheckBox	signature:(RBit::CheckState state, RWidget* parent, RWFlags flags)
RCheckBox::RCheckBox	/home/viper/projects/RBit/rcheckbox.cpp	/^RCheckBox::RCheckBox(RWidget* parent, RWFlags flags)$/;"	f	class:RCheckBox	signature:(RWidget* parent, RWFlags flags)
RCheckBox::RCheckBox	/home/viper/projects/RBit/rcheckbox.h	/^	RCheckBox(const RCheckBox&);$/;"	p	class:RCheckBox	access:private	signature:(const RCheckBox&)
RCheckBox::RCheckBox	/home/viper/projects/RBit/rcheckbox.h	/^    RCheckBox(RWidget* parent=0, RWFlags flags=0);$/;"	p	class:RCheckBox	access:public	signature:(RWidget* parent=0, RWFlags flags=0)
RCheckBox::RCheckBox	/home/viper/projects/RBit/rcheckbox.h	/^    explicit RCheckBox(RBit::CheckState, RWidget* parent=0, RWFlags flags=0);$/;"	p	class:RCheckBox	access:public	signature:(RBit::CheckState, RWidget* parent=0, RWFlags flags=0)
RCheckBox::checkState	/home/viper/projects/RBit/rcheckbox.h	/^    RBit::CheckState checkState() const;$/;"	p	class:RCheckBox	access:public	signature:() const
RCheckBox::checkState	/home/viper/projects/RBit/rcheckbox.h	/^inline RBit::CheckState RCheckBox::checkState() const$/;"	f	class:RCheckBox	signature:() const
RCheckBox::click	/home/viper/projects/RBit/rcheckbox.cpp	/^void RCheckBox::click()$/;"	f	class:RCheckBox	signature:()
RCheckBox::click	/home/viper/projects/RBit/rcheckbox.h	/^    virtual void click();$/;"	p	class:RCheckBox	access:public	signature:()
RCheckBox::eventFocusLost	/home/viper/projects/RBit/rcheckbox.cpp	/^void RCheckBox::eventFocusLost()$/;"	f	class:RCheckBox	signature:()
RCheckBox::eventFocusLost	/home/viper/projects/RBit/rcheckbox.h	/^	virtual void eventFocusLost();$/;"	p	class:RCheckBox	access:protected	signature:()
RCheckBox::eventFocusSet	/home/viper/projects/RBit/rcheckbox.cpp	/^void RCheckBox::eventFocusSet()$/;"	f	class:RCheckBox	signature:()
RCheckBox::eventFocusSet	/home/viper/projects/RBit/rcheckbox.h	/^	virtual void eventFocusSet();$/;"	p	class:RCheckBox	access:protected	signature:()
RCheckBox::eventKeyDown	/home/viper/projects/RBit/rcheckbox.cpp	/^bool RCheckBox::eventKeyDown(const SDL_keysym& key, bool autoRepeat)$/;"	f	class:RCheckBox	signature:(const SDL_keysym& key, bool autoRepeat)
RCheckBox::eventKeyDown	/home/viper/projects/RBit/rcheckbox.h	/^    virtual bool eventKeyDown(const SDL_keysym& key, bool autoRepeat);$/;"	p	class:RCheckBox	access:protected	signature:(const SDL_keysym& key, bool autoRepeat)
RCheckBox::eventKeyUp	/home/viper/projects/RBit/rcheckbox.cpp	/^bool RCheckBox::eventKeyUp(const SDL_keysym& key, bool autoRepeat)$/;"	f	class:RCheckBox	signature:(const SDL_keysym& key, bool autoRepeat)
RCheckBox::eventKeyUp	/home/viper/projects/RBit/rcheckbox.h	/^	virtual bool eventKeyUp(const SDL_keysym& key, bool autoRepeat);$/;"	p	class:RCheckBox	access:protected	signature:(const SDL_keysym& key, bool autoRepeat)
RCheckBox::eventMouseDown	/home/viper/projects/RBit/rcheckbox.cpp	/^void RCheckBox::eventMouseDown(const SDL_MouseButtonEvent& m)$/;"	f	class:RCheckBox	signature:(const SDL_MouseButtonEvent& m)
RCheckBox::eventMouseDown	/home/viper/projects/RBit/rcheckbox.h	/^	virtual void eventMouseDown(const SDL_MouseButtonEvent& m);$/;"	p	class:RCheckBox	access:protected	signature:(const SDL_MouseButtonEvent& m)
RCheckBox::eventMouseUp	/home/viper/projects/RBit/rcheckbox.cpp	/^void RCheckBox::eventMouseUp(const SDL_MouseButtonEvent& m)$/;"	f	class:RCheckBox	signature:(const SDL_MouseButtonEvent& m)
RCheckBox::eventMouseUp	/home/viper/projects/RBit/rcheckbox.h	/^	virtual void eventMouseUp(const SDL_MouseButtonEvent& m);$/;"	p	class:RCheckBox	access:protected	signature:(const SDL_MouseButtonEvent& m)
RCheckBox::m_buff	/home/viper/projects/RBit/rcheckbox.h	/^    RString     m_buff;$/;"	m	class:RCheckBox	access:private
RCheckBox::m_text	/home/viper/projects/RBit/rcheckbox.h	/^    const char* m_text;$/;"	m	class:RCheckBox	access:private
RCheckBox::operator =	/home/viper/projects/RBit/rcheckbox.h	/^	RCheckBox& operator=(const RCheckBox&);$/;"	p	class:RCheckBox	access:private	signature:(const RCheckBox&)
RCheckBox::repaintImpl	/home/viper/projects/RBit/rcheckbox.cpp	/^void RCheckBox::repaintImpl(const RRect& r)$/;"	f	class:RCheckBox	signature:(const RRect& r)
RCheckBox::repaintImpl	/home/viper/projects/RBit/rcheckbox.h	/^	virtual void repaintImpl(const RRect& r);    $/;"	p	class:RCheckBox	access:protected	signature:(const RRect& r)
RCheckBox::setCheckState	/home/viper/projects/RBit/rcheckbox.cpp	/^void RCheckBox::setCheckState(RBit::CheckState state)$/;"	f	class:RCheckBox	signature:(RBit::CheckState state)
RCheckBox::setCheckState	/home/viper/projects/RBit/rcheckbox.h	/^    void setCheckState(RBit::CheckState state);$/;"	p	class:RCheckBox	access:public	signature:(RBit::CheckState state)
RCheckBox::setText	/home/viper/projects/RBit/rcheckbox.h	/^    void setText(const char* str);$/;"	p	class:RCheckBox	access:public	signature:(const char* str)
RCheckBox::setText	/home/viper/projects/RBit/rcheckbox.h	/^inline void RCheckBox::setText(const char* str)$/;"	f	class:RCheckBox	signature:(const char* str)
RCheckBox::setTextRef	/home/viper/projects/RBit/rcheckbox.h	/^    void setTextRef(const char* str);$/;"	p	class:RCheckBox	access:public	signature:(const char* str)
RCheckBox::setTextRef	/home/viper/projects/RBit/rcheckbox.h	/^inline void RCheckBox::setTextRef(const char* str)$/;"	f	class:RCheckBox	signature:(const char* str)
RCheckBox::sizeHint	/home/viper/projects/RBit/rcheckbox.cpp	/^RSize RCheckBox::sizeHint() const$/;"	f	class:RCheckBox	signature:() const
RCheckBox::sizeHint	/home/viper/projects/RBit/rcheckbox.h	/^    RSize sizeHint() const;$/;"	p	class:RCheckBox	access:public	signature:() const
RCheckBox::stateChanged	/home/viper/projects/RBit/rcheckbox.cpp	/^void RCheckBox::stateChanged(RBit::CheckState)$/;"	f	class:RCheckBox	signature:(RBit::CheckState)
RCheckBox::stateChanged	/home/viper/projects/RBit/rcheckbox.h	/^    virtual void stateChanged(RBit::CheckState);$/;"	p	class:RCheckBox	access:public	signature:(RBit::CheckState)
RCheckBox::text	/home/viper/projects/RBit/rcheckbox.h	/^    const char* text() const;$/;"	p	class:RCheckBox	access:public	signature:() const
RCheckBox::text	/home/viper/projects/RBit/rcheckbox.h	/^inline const char* RCheckBox::text() const$/;"	f	class:RCheckBox	signature:() const
RColor	/home/viper/projects/RBit/rcolor.cpp	/^RColor::RColor(RBit::GlobalColor color)$/;"	f	class:RColor	signature:(RBit::GlobalColor color)
RColor	/home/viper/projects/RBit/rcolor.h	/^	RColor();$/;"	p	class:RColor	access:public	signature:()
RColor	/home/viper/projects/RBit/rcolor.h	/^	RColor(Uint8 r, Uint8 g, Uint8 b);$/;"	p	class:RColor	access:public	signature:(Uint8 r, Uint8 g, Uint8 b)
RColor	/home/viper/projects/RBit/rcolor.h	/^	RColor(const RColor& c);	$/;"	p	class:RColor	access:public	signature:(const RColor& c)
RColor	/home/viper/projects/RBit/rcolor.h	/^	RColor(const SDL_Color& c);$/;"	p	class:RColor	access:public	signature:(const SDL_Color& c)
RColor	/home/viper/projects/RBit/rcolor.h	/^    RColor(RBit::GlobalColor);$/;"	p	class:RColor	access:public	signature:(RBit::GlobalColor)
RColor	/home/viper/projects/RBit/rcolor.h	/^    RColor(Uint8 r, Uint8 g, Uint8 b, Uint8 a);$/;"	p	class:RColor	access:public	signature:(Uint8 r, Uint8 g, Uint8 b, Uint8 a)
RColor	/home/viper/projects/RBit/rcolor.h	/^class RBIT_CORE_EXPORT RColor$/;"	c
RColor	/home/viper/projects/RBit/rcolor.h	/^inline RColor::RColor()  $/;"	f	class:RColor	signature:()
RColor	/home/viper/projects/RBit/rcolor.h	/^inline RColor::RColor(Uint8 r, Uint8 g, Uint8 b)  $/;"	f	class:RColor	signature:(Uint8 r, Uint8 g, Uint8 b)
RColor	/home/viper/projects/RBit/rcolor.h	/^inline RColor::RColor(Uint8 r, Uint8 g, Uint8 b, Uint8 a)  $/;"	f	class:RColor	signature:(Uint8 r, Uint8 g, Uint8 b, Uint8 a)
RColor	/home/viper/projects/RBit/rcolor.h	/^inline RColor::RColor(const RColor& c)$/;"	f	class:RColor	signature:(const RColor& c)
RColor	/home/viper/projects/RBit/rcolor.h	/^inline RColor::RColor(const SDL_Color& c)$/;"	f	class:RColor	signature:(const SDL_Color& c)
RColor::RColor	/home/viper/projects/RBit/rcolor.cpp	/^RColor::RColor(RBit::GlobalColor color)$/;"	f	class:RColor	signature:(RBit::GlobalColor color)
RColor::RColor	/home/viper/projects/RBit/rcolor.h	/^	RColor();$/;"	p	class:RColor	access:public	signature:()
RColor::RColor	/home/viper/projects/RBit/rcolor.h	/^	RColor(Uint8 r, Uint8 g, Uint8 b);$/;"	p	class:RColor	access:public	signature:(Uint8 r, Uint8 g, Uint8 b)
RColor::RColor	/home/viper/projects/RBit/rcolor.h	/^	RColor(const RColor& c);	$/;"	p	class:RColor	access:public	signature:(const RColor& c)
RColor::RColor	/home/viper/projects/RBit/rcolor.h	/^	RColor(const SDL_Color& c);$/;"	p	class:RColor	access:public	signature:(const SDL_Color& c)
RColor::RColor	/home/viper/projects/RBit/rcolor.h	/^    RColor(RBit::GlobalColor);$/;"	p	class:RColor	access:public	signature:(RBit::GlobalColor)
RColor::RColor	/home/viper/projects/RBit/rcolor.h	/^    RColor(Uint8 r, Uint8 g, Uint8 b, Uint8 a);$/;"	p	class:RColor	access:public	signature:(Uint8 r, Uint8 g, Uint8 b, Uint8 a)
RColor::RColor	/home/viper/projects/RBit/rcolor.h	/^inline RColor::RColor()  $/;"	f	class:RColor	signature:()
RColor::RColor	/home/viper/projects/RBit/rcolor.h	/^inline RColor::RColor(Uint8 r, Uint8 g, Uint8 b)  $/;"	f	class:RColor	signature:(Uint8 r, Uint8 g, Uint8 b)
RColor::RColor	/home/viper/projects/RBit/rcolor.h	/^inline RColor::RColor(Uint8 r, Uint8 g, Uint8 b, Uint8 a)  $/;"	f	class:RColor	signature:(Uint8 r, Uint8 g, Uint8 b, Uint8 a)
RColor::RColor	/home/viper/projects/RBit/rcolor.h	/^inline RColor::RColor(const RColor& c)$/;"	f	class:RColor	signature:(const RColor& c)
RColor::RColor	/home/viper/projects/RBit/rcolor.h	/^inline RColor::RColor(const SDL_Color& c)$/;"	f	class:RColor	signature:(const SDL_Color& c)
RColor::alpha	/home/viper/projects/RBit/rcolor.h	/^    Uint8  alpha() const;$/;"	p	class:RColor	access:public	signature:() const
RColor::alpha	/home/viper/projects/RBit/rcolor.h	/^inline Uint8 RColor::alpha() const$/;"	f	class:RColor	signature:() const
RColor::blue	/home/viper/projects/RBit/rcolor.h	/^	Uint8  blue() const;$/;"	p	class:RColor	access:public	signature:() const
RColor::blue	/home/viper/projects/RBit/rcolor.h	/^inline Uint8 RColor::blue() const$/;"	f	class:RColor	signature:() const
RColor::dark	/home/viper/projects/RBit/rcolor.cpp	/^RColor RColor::dark(Uint8 factor) const$/;"	f	class:RColor	signature:(Uint8 factor) const
RColor::dark	/home/viper/projects/RBit/rcolor.h	/^    RColor dark(Uint8 factor = 200) const;$/;"	p	class:RColor	access:public	signature:(Uint8 factor = 200) const
RColor::grayed	/home/viper/projects/RBit/rcolor.cpp	/^RColor RColor::grayed() const$/;"	f	class:RColor	signature:() const
RColor::grayed	/home/viper/projects/RBit/rcolor.h	/^    RColor grayed() const;	$/;"	p	class:RColor	access:public	signature:() const
RColor::green	/home/viper/projects/RBit/rcolor.h	/^	Uint8  green() const;$/;"	p	class:RColor	access:public	signature:() const
RColor::green	/home/viper/projects/RBit/rcolor.h	/^inline Uint8 RColor::green() const$/;"	f	class:RColor	signature:() const
RColor::hue	/home/viper/projects/RBit/rcolor.cpp	/^Uint16 RColor::hue() const$/;"	f	class:RColor	signature:() const
RColor::hue	/home/viper/projects/RBit/rcolor.h	/^    Uint16 hue() const;$/;"	p	class:RColor	access:public	signature:() const
RColor::index	/home/viper/projects/RBit/rcolor.cpp	/^Uint32 RColor::index(SDL_PixelFormat* format) const$/;"	f	class:RColor	signature:(SDL_PixelFormat* format) const
RColor::index	/home/viper/projects/RBit/rcolor.h	/^	Uint32 index(SDL_PixelFormat* format = SDL_GetVideoSurface()->format) const;$/;"	p	class:RColor	access:public	signature:(SDL_PixelFormat* format = SDL_GetVideoSurface()->format) const
RColor::light	/home/viper/projects/RBit/rcolor.cpp	/^RColor RColor::light(Uint8 factor) const$/;"	f	class:RColor	signature:(Uint8 factor) const
RColor::light	/home/viper/projects/RBit/rcolor.h	/^    RColor light(Uint8 factor = 150) const;$/;"	p	class:RColor	access:public	signature:(Uint8 factor = 150) const
RColor::m_c	/home/viper/projects/RBit/rcolor.h	/^	SDL_Color m_c;$/;"	m	class:RColor	access:private
RColor::m_format	/home/viper/projects/RBit/rcolor.h	/^    SDL_PixelFormat* m_format;$/;"	m	class:RColor	access:private
RColor::m_i	/home/viper/projects/RBit/rcolor.h	/^	mutable unsigned int m_i;$/;"	m	class:RColor	access:private
RColor::operator !=	/home/viper/projects/RBit/rcolor.h	/^	bool operator!=(const RColor& c);$/;"	p	class:RColor	access:public	signature:(const RColor& c)
RColor::operator !=	/home/viper/projects/RBit/rcolor.h	/^inline bool RColor::operator!=(const RColor& c)$/;"	f	class:RColor	signature:(const RColor& c)
RColor::operator =	/home/viper/projects/RBit/rcolor.h	/^	RColor& operator=(const RColor& c);$/;"	p	class:RColor	access:public	signature:(const RColor& c)
RColor::operator =	/home/viper/projects/RBit/rcolor.h	/^	RColor& operator=(const SDL_Color& c);$/;"	p	class:RColor	access:public	signature:(const SDL_Color& c)
RColor::operator =	/home/viper/projects/RBit/rcolor.h	/^inline RColor& RColor::operator=(const RColor& c)$/;"	f	class:RColor	signature:(const RColor& c)
RColor::operator =	/home/viper/projects/RBit/rcolor.h	/^inline RColor& RColor::operator=(const SDL_Color& c)$/;"	f	class:RColor	signature:(const SDL_Color& c)
RColor::operator ==	/home/viper/projects/RBit/rcolor.h	/^	bool operator==(const RColor& c);$/;"	p	class:RColor	access:public	signature:(const RColor& c)
RColor::operator ==	/home/viper/projects/RBit/rcolor.h	/^inline bool RColor::operator==(const RColor& c)$/;"	f	class:RColor	signature:(const RColor& c)
RColor::red	/home/viper/projects/RBit/rcolor.h	/^	Uint8  red() const;$/;"	p	class:RColor	access:public	signature:() const
RColor::red	/home/viper/projects/RBit/rcolor.h	/^inline Uint8 RColor::red() const$/;"	f	class:RColor	signature:() const
RColor::saturation	/home/viper/projects/RBit/rcolor.cpp	/^Uint16 RColor::saturation() const$/;"	f	class:RColor	signature:() const
RColor::saturation	/home/viper/projects/RBit/rcolor.h	/^    Uint16 saturation() const;$/;"	p	class:RColor	access:public	signature:() const
RColor::sdlColor	/home/viper/projects/RBit/rcolor.h	/^	SDL_Color& sdlColor();$/;"	p	class:RColor	access:public	signature:()
RColor::sdlColor	/home/viper/projects/RBit/rcolor.h	/^	const SDL_Color& sdlColor() const;$/;"	p	class:RColor	access:public	signature:() const
RColor::sdlColor	/home/viper/projects/RBit/rcolor.h	/^inline SDL_Color& RColor::sdlColor()$/;"	f	class:RColor	signature:()
RColor::sdlColor	/home/viper/projects/RBit/rcolor.h	/^inline const SDL_Color& RColor::sdlColor() const$/;"	f	class:RColor	signature:() const
RColor::setAlpha	/home/viper/projects/RBit/rcolor.h	/^    void setAlpha(Uint8 a);$/;"	p	class:RColor	access:public	signature:(Uint8 a)
RColor::setAlpha	/home/viper/projects/RBit/rcolor.h	/^inline void RColor::setAlpha(Uint8 a)$/;"	f	class:RColor	signature:(Uint8 a)
RColor::setHSV	/home/viper/projects/RBit/rcolor.cpp	/^void RColor::setHSV(Uint16 hue, Uint16 saturation, Uint16 value)$/;"	f	class:RColor	signature:(Uint16 hue, Uint16 saturation, Uint16 value)
RColor::setHSV	/home/viper/projects/RBit/rcolor.h	/^    void setHSV(Uint16 h, Uint16 s, Uint16 v);$/;"	p	class:RColor	access:public	signature:(Uint16 h, Uint16 s, Uint16 v)
RColor::setRGB	/home/viper/projects/RBit/rcolor.cpp	/^void RColor::setRGB(Uint8 r, Uint8 g, Uint8 b)$/;"	f	class:RColor	signature:(Uint8 r, Uint8 g, Uint8 b)
RColor::setRGB	/home/viper/projects/RBit/rcolor.h	/^	void setRGB(Uint8 r, Uint8 g, Uint8 b);$/;"	p	class:RColor	access:public	signature:(Uint8 r, Uint8 g, Uint8 b)
RColor::setRGBA	/home/viper/projects/RBit/rcolor.h	/^    void setRGBA(Uint8 r, Uint8 g, Uint8 b, Uint8 a);    $/;"	p	class:RColor	access:public	signature:(Uint8 r, Uint8 g, Uint8 b, Uint8 a)
RColor::value	/home/viper/projects/RBit/rcolor.cpp	/^Uint16 RColor::value() const$/;"	f	class:RColor	signature:() const
RColor::value	/home/viper/projects/RBit/rcolor.h	/^    Uint16 value() const;$/;"	p	class:RColor	access:public	signature:() const
RColorManager	/home/viper/projects/RBit/rcolormanager.h	/^    RColorManager() {}$/;"	f	class:RColorManager	access:private	signature:()
RColorManager	/home/viper/projects/RBit/rcolormanager.h	/^    RColorManager(const RColorManager&);$/;"	p	class:RColorManager	access:private	signature:(const RColorManager&)
RColorManager	/home/viper/projects/RBit/rcolormanager.h	/^class RBIT_CORE_EXPORT RColorManager$/;"	c
RColorManager::RBlendingMapPtr	/home/viper/projects/RBit/rcolormanager.h	/^    class RBlendingMapPtr$/;"	c	class:RColorManager	access:private
RColorManager::RBlendingMapPtr::RBlendingMapPtr	/home/viper/projects/RBit/rcolormanager.cpp	/^RColorManager::RBlendingMapPtr::RBlendingMapPtr()$/;"	f	class:RColorManager::RBlendingMapPtr	signature:()
RColorManager::RBlendingMapPtr::RBlendingMapPtr	/home/viper/projects/RBit/rcolormanager.cpp	/^RColorManager::RBlendingMapPtr::RBlendingMapPtr(RBlendingMap* m)$/;"	f	class:RColorManager::RBlendingMapPtr	signature:(RBlendingMap* m)
RColorManager::RBlendingMapPtr::RBlendingMapPtr	/home/viper/projects/RBit/rcolormanager.h	/^        RBlendingMapPtr();$/;"	p	class:RColorManager::RBlendingMapPtr	access:public	signature:()
RColorManager::RBlendingMapPtr::RBlendingMapPtr	/home/viper/projects/RBit/rcolormanager.h	/^        RBlendingMapPtr(RBlendingMap* s);   $/;"	p	class:RColorManager::RBlendingMapPtr	access:public	signature:(RBlendingMap* s)
RColorManager::RBlendingMapPtr::free	/home/viper/projects/RBit/rcolormanager.cpp	/^void RColorManager::RBlendingMapPtr::free()$/;"	f	class:RColorManager::RBlendingMapPtr	signature:()
RColorManager::RBlendingMapPtr::free	/home/viper/projects/RBit/rcolormanager.h	/^        void free();$/;"	p	class:RColorManager::RBlendingMapPtr	access:public	signature:()
RColorManager::RBlendingMapPtr::m_map	/home/viper/projects/RBit/rcolormanager.h	/^        RBlendingMap* m_map;$/;"	m	class:RColorManager::RBlendingMapPtr	access:private
RColorManager::RBlendingMapPtr::operator !	/home/viper/projects/RBit/rcolormanager.cpp	/^bool RColorManager::RBlendingMapPtr::operator !() const$/;"	f	class:RColorManager::RBlendingMapPtr	signature:() const
RColorManager::RBlendingMapPtr::operator !	/home/viper/projects/RBit/rcolormanager.h	/^        bool operator! () const;$/;"	p	class:RColorManager::RBlendingMapPtr	access:public	signature:() const
RColorManager::RBlendingMapPtr::operator *	/home/viper/projects/RBit/rcolormanager.cpp	/^RBlendingMap& RColorManager::RBlendingMapPtr::operator* () const$/;"	f	class:RColorManager::RBlendingMapPtr	signature:() const
RColorManager::RBlendingMapPtr::operator *	/home/viper/projects/RBit/rcolormanager.h	/^        RBlendingMap& operator* () const;   $/;"	p	class:RColorManager::RBlendingMapPtr	access:public	signature:() const
RColorManager::RBlendingMapPtr::operator ->	/home/viper/projects/RBit/rcolormanager.cpp	/^RBlendingMap* RColorManager::RBlendingMapPtr::operator->() const$/;"	f	class:RColorManager::RBlendingMapPtr	signature:() const
RColorManager::RBlendingMapPtr::operator ->	/home/viper/projects/RBit/rcolormanager.h	/^        RBlendingMap* operator->() const;    $/;"	p	class:RColorManager::RBlendingMapPtr	access:public	signature:() const
RColorManager::RBlendingMapPtr::operator =	/home/viper/projects/RBit/rcolormanager.cpp	/^RColorManager::RBlendingMapPtr& RColorManager::RBlendingMapPtr::operator= (RBlendingMap* m)$/;"	f	class:RColorManager::RBlendingMapPtr	signature:(RBlendingMap* m)
RColorManager::RBlendingMapPtr::operator =	/home/viper/projects/RBit/rcolormanager.h	/^        RBlendingMapPtr& operator= (RBlendingMap* m);   $/;"	p	class:RColorManager::RBlendingMapPtr	access:public	signature:(RBlendingMap* m)
RColorManager::RBlendingMapPtr::operator bool	/home/viper/projects/RBit/rcolormanager.cpp	/^RColorManager::RBlendingMapPtr::operator bool() const$/;"	f	class:RColorManager::RBlendingMapPtr	signature:() const
RColorManager::RBlendingMapPtr::operator bool	/home/viper/projects/RBit/rcolormanager.h	/^        operator bool () const;$/;"	p	class:RColorManager::RBlendingMapPtr	access:public	signature:() const
RColorManager::RBlendingMapPtr::~RBlendingMapPtr	/home/viper/projects/RBit/rcolormanager.cpp	/^RColorManager::RBlendingMapPtr::~RBlendingMapPtr()$/;"	f	class:RColorManager::RBlendingMapPtr	signature:()
RColorManager::RBlendingMapPtr::~RBlendingMapPtr	/home/viper/projects/RBit/rcolormanager.h	/^        ~RBlendingMapPtr();$/;"	p	class:RColorManager::RBlendingMapPtr	access:public	signature:()
RColorManager::RColorManager	/home/viper/projects/RBit/rcolormanager.h	/^    RColorManager() {}$/;"	f	class:RColorManager	access:private	signature:()
RColorManager::RColorManager	/home/viper/projects/RBit/rcolormanager.h	/^    RColorManager(const RColorManager&);$/;"	p	class:RColorManager	access:private	signature:(const RColorManager&)
RColorManager::blendColor	/home/viper/projects/RBit/rcolormanager.cpp	/^Uint32 RColorManager::blendColor(const RColor& fg, Uint32 bg, Uint8 i, SDL_PixelFormat* format)$/;"	f	class:RColorManager	signature:(const RColor& fg, Uint32 bg, Uint8 i, SDL_PixelFormat* format)
RColorManager::blendColor	/home/viper/projects/RBit/rcolormanager.h	/^    Uint32 blendColor(const RColor& fg, Uint32 bg, Uint8 i, SDL_PixelFormat* format = SDL_GetVideoSurface()->format);$/;"	p	class:RColorManager	access:public	signature:(const RColor& fg, Uint32 bg, Uint8 i, SDL_PixelFormat* format = SDL_GetVideoSurface()->format)
RColorManager::createBlendingMap	/home/viper/projects/RBit/rcolormanager.cpp	/^void RColorManager::createBlendingMap()$/;"	f	class:RColorManager	signature:()
RColorManager::createBlendingMap	/home/viper/projects/RBit/rcolormanager.h	/^    void createBlendingMap();$/;"	p	class:RColorManager	access:private	signature:()
RColorManager::eventScreenChanged	/home/viper/projects/RBit/rcolormanager.cpp	/^void RColorManager::eventScreenChanged()$/;"	f	class:RColorManager	signature:()
RColorManager::eventScreenChanged	/home/viper/projects/RBit/rcolormanager.h	/^    void eventScreenChanged();$/;"	p	class:RColorManager	access:protected	signature:()
RColorManager::free	/home/viper/projects/RBit/rcolormanager.cpp	/^void RColorManager::free()$/;"	f	class:RColorManager	signature:()
RColorManager::free	/home/viper/projects/RBit/rcolormanager.h	/^    void free();$/;"	p	class:RColorManager	access:public	signature:()
RColorManager::instance	/home/viper/projects/RBit/rcolormanager.h	/^    static RColorManager* instance();$/;"	p	class:RColorManager	access:public	signature:()
RColorManager::instance	/home/viper/projects/RBit/rcolormanager.h	/^inline RColorManager* RColorManager::instance()$/;"	f	class:RColorManager	signature:()
RColorManager::m_bmap	/home/viper/projects/RBit/rcolormanager.h	/^    } m_bmap;$/;"	m	class:RColorManager	typeref:class:RColorManager::RBlendingMapPtr	access:private
RColorManager::mapFromRGB	/home/viper/projects/RBit/rcolormanager.h	/^    Uint32 mapFromRGB(const RColor& c, SDL_PixelFormat* format = SDL_GetVideoSurface()->format);$/;"	p	class:RColorManager	access:public	signature:(const RColor& c, SDL_PixelFormat* format = SDL_GetVideoSurface()->format)
RColorManager::mapFromRGB	/home/viper/projects/RBit/rcolormanager.h	/^inline Uint32 RColorManager::mapFromRGB(const RColor& c, SDL_PixelFormat* format)$/;"	f	class:RColorManager	signature:(const RColor& c, SDL_PixelFormat* format)
RColorManager::mapToRGB	/home/viper/projects/RBit/rcolormanager.h	/^    void mapToRGB(Uint32 ci, RColor* c, SDL_PixelFormat* format = SDL_GetVideoSurface()->format);    $/;"	p	class:RColorManager	access:public	signature:(Uint32 ci, RColor* c, SDL_PixelFormat* format = SDL_GetVideoSurface()->format)
RColorManager::mapToRGB	/home/viper/projects/RBit/rcolormanager.h	/^inline void RColorManager::mapToRGB(Uint32 i, RColor* c, SDL_PixelFormat* format)$/;"	f	class:RColorManager	signature:(Uint32 i, RColor* c, SDL_PixelFormat* format)
RColorManager::operator =	/home/viper/projects/RBit/rcolormanager.h	/^    RColorManager& operator=(const RColorManager&);$/;"	p	class:RColorManager	access:private	signature:(const RColorManager&)
RComboBox	/home/viper/projects/RBit/rcombobox.cpp	/^RComboBox::RComboBox(RWidget* parent, RWFlags flags)$/;"	f	class:RComboBox	signature:(RWidget* parent, RWFlags flags)
RComboBox	/home/viper/projects/RBit/rcombobox.h	/^    explicit RComboBox(RWidget* parent = 0, RWFlags flags = 0);    $/;"	p	class:RComboBox	access:public	signature:(RWidget* parent = 0, RWFlags flags = 0)
RComboBox	/home/viper/projects/RBit/rcombobox.h	/^class RBIT_CORE_EXPORT RComboBox : public RWidget,$/;"	c	inherits:RWidget,RTextPainter
RComboBox::EditBox	/home/viper/projects/RBit/rcombobox.cpp	/^class RComboBox::EditBox : public REditBox {$/;"	c	class:RComboBox	file:	inherits:REditBox
RComboBox::EditBox::EditBox	/home/viper/projects/RBit/rcombobox.cpp	/^	EditBox(RComboBox *parent, RWFlags flags)$/;"	f	class:RComboBox::EditBox	access:public	signature:(RComboBox *parent, RWFlags flags)
RComboBox::EditBox::eventFocusLost	/home/viper/projects/RBit/rcombobox.cpp	/^	virtual void eventFocusLost()$/;"	f	class:RComboBox::EditBox	access:protected	signature:()
RComboBox::EditBox::eventFocusSet	/home/viper/projects/RBit/rcombobox.cpp	/^	virtual void eventFocusSet()$/;"	f	class:RComboBox::EditBox	access:protected	signature:()
RComboBox::EditBox::eventKeyDown	/home/viper/projects/RBit/rcombobox.cpp	/^	virtual bool eventKeyDown(const SDL_keysym& key, bool autoRepeat)$/;"	f	class:RComboBox::EditBox	access:protected	signature:(const SDL_keysym& key, bool autoRepeat)
RComboBox::EditBox::m_combo	/home/viper/projects/RBit/rcombobox.cpp	/^	RComboBox *m_combo;$/;"	m	class:RComboBox::EditBox	file:	access:private
RComboBox::Popup	/home/viper/projects/RBit/rcombobox.cpp	/^class RComboBox::Popup : public RGridView,$/;"	c	class:RComboBox	file:	inherits:RGridView,RGridView::Observer
RComboBox::Popup::Popup	/home/viper/projects/RBit/rcombobox.cpp	/^    Popup(RComboBox* combo, RWidget* parent=0, RWFlags flags=0)$/;"	f	class:RComboBox::Popup	access:public	signature:(RComboBox* combo, RWidget* parent=0, RWFlags flags=0)
RComboBox::Popup::PopupModel	/home/viper/projects/RBit/rcombobox.cpp	/^	class PopupModel : public RSimpleGridModel$/;"	c	class:RComboBox::Popup	file:	inherits:RSimpleGridModel	access:public
RComboBox::Popup::PopupModel::PopupModel	/home/viper/projects/RBit/rcombobox.cpp	/^		PopupModel(Popup* popup) $/;"	f	class:RComboBox::Popup::PopupModel	access:public	signature:(Popup* popup)
RComboBox::Popup::PopupModel::backgroundColor	/home/viper/projects/RBit/rcombobox.cpp	/^        virtual const RColor* backgroundColor(Sint32 row, Sint32 column) const$/;"	f	class:RComboBox::Popup::PopupModel	access:public	signature:(Sint32 row, Sint32 column) const
RComboBox::Popup::PopupModel::findData	/home/viper/projects/RBit/rcombobox.cpp	/^		int findData(const char *key)$/;"	f	class:RComboBox::Popup::PopupModel	access:public	signature:(const char *key)
RComboBox::Popup::PopupModel::foregroundColor	/home/viper/projects/RBit/rcombobox.cpp	/^        virtual const RColor* foregroundColor(Sint32 row, Sint32 column) const$/;"	f	class:RComboBox::Popup::PopupModel	access:public	signature:(Sint32 row, Sint32 column) const
RComboBox::Popup::PopupModel::m_popup	/home/viper/projects/RBit/rcombobox.cpp	/^		Popup* m_popup;$/;"	m	class:RComboBox::Popup::PopupModel	file:	access:private
RComboBox::Popup::PopupModel::textAlignment	/home/viper/projects/RBit/rcombobox.cpp	/^		virtual int textAlignment(Sint32 row, Sint32 column) const $/;"	f	class:RComboBox::Popup::PopupModel	access:public	signature:(Sint32 row, Sint32 column) const
RComboBox::Popup::activated	/home/viper/projects/RBit/rcombobox.cpp	/^    virtual void activated(Sint32 row, Sint32 column)$/;"	f	class:RComboBox::Popup	access:protected	signature:(Sint32 row, Sint32 column)
RComboBox::Popup::clicked	/home/viper/projects/RBit/rcombobox.cpp	/^    virtual void clicked(Sint32 row, Sint32 column)$/;"	f	class:RComboBox::Popup	access:protected	signature:(Sint32 row, Sint32 column)
RComboBox::Popup::currentRowChanged	/home/viper/projects/RBit/rcombobox.cpp	/^    virtual void currentRowChanged(Sint32 oldRow, Sint32 newRow) $/;"	f	class:RComboBox::Popup	access:protected	signature:(Sint32 oldRow, Sint32 newRow)
RComboBox::Popup::entered	/home/viper/projects/RBit/rcombobox.cpp	/^    virtual void entered(Sint32 row, Sint32)$/;"	f	class:RComboBox::Popup	access:protected	signature:(Sint32 row, Sint32)
RComboBox::Popup::eventHide	/home/viper/projects/RBit/rcombobox.cpp	/^    virtual void eventHide()$/;"	f	class:RComboBox::Popup	access:protected	signature:()
RComboBox::Popup::eventKeyDown	/home/viper/projects/RBit/rcombobox.cpp	/^    virtual bool eventKeyDown(const SDL_keysym& key, bool autoRepeat)$/;"	f	class:RComboBox::Popup	access:protected	signature:(const SDL_keysym& key, bool autoRepeat)
RComboBox::Popup::eventMouseDown	/home/viper/projects/RBit/rcombobox.cpp	/^    virtual void eventMouseDown(const SDL_MouseButtonEvent& m)$/;"	f	class:RComboBox::Popup	access:protected	signature:(const SDL_MouseButtonEvent& m)
RComboBox::Popup::eventMouseUp	/home/viper/projects/RBit/rcombobox.cpp	/^    virtual void eventMouseUp(const SDL_MouseButtonEvent& m)$/;"	f	class:RComboBox::Popup	access:protected	signature:(const SDL_MouseButtonEvent& m)
RComboBox::Popup::m_combo	/home/viper/projects/RBit/rcombobox.cpp	/^    RComboBox* m_combo;$/;"	m	class:RComboBox::Popup	file:	access:private
RComboBox::Popup::m_hhmodel	/home/viper/projects/RBit/rcombobox.cpp	/^    RSimpleHeaderModel m_hhmodel, m_vhmodel;$/;"	m	class:RComboBox::Popup	file:	access:private
RComboBox::Popup::m_model	/home/viper/projects/RBit/rcombobox.cpp	/^	} m_model;		$/;"	m	class:RComboBox::Popup	typeref:class:RComboBox::Popup::PopupModel	file:	access:public
RComboBox::Popup::m_vhmodel	/home/viper/projects/RBit/rcombobox.cpp	/^    RSimpleHeaderModel m_hhmodel, m_vhmodel;$/;"	m	class:RComboBox::Popup	file:	access:private
RComboBox::RComboBox	/home/viper/projects/RBit/rcombobox.cpp	/^RComboBox::RComboBox(RWidget* parent, RWFlags flags)$/;"	f	class:RComboBox	signature:(RWidget* parent, RWFlags flags)
RComboBox::RComboBox	/home/viper/projects/RBit/rcombobox.h	/^    explicit RComboBox(RWidget* parent = 0, RWFlags flags = 0);    $/;"	p	class:RComboBox	access:public	signature:(RWidget* parent = 0, RWFlags flags = 0)
RComboBox::SC_ComboBoxArrow	/home/viper/projects/RBit/rcombobox.h	/^        SC_ComboBoxArrow     = 0x04$/;"	e	enum:RComboBox::SubControl
RComboBox::SC_ComboBoxEditField	/home/viper/projects/RBit/rcombobox.h	/^        SC_ComboBoxEditField = 0x02,$/;"	e	enum:RComboBox::SubControl
RComboBox::SC_ComboBoxFrame	/home/viper/projects/RBit/rcombobox.h	/^        SC_ComboBoxFrame     = 0x01,$/;"	e	enum:RComboBox::SubControl
RComboBox::SC_None	/home/viper/projects/RBit/rcombobox.h	/^        SC_None              = 0x00,$/;"	e	enum:RComboBox::SubControl
RComboBox::SubControl	/home/viper/projects/RBit/rcombobox.h	/^    enum SubControl {$/;"	g	class:RComboBox	access:protected
RComboBox::activateSubControl	/home/viper/projects/RBit/rcombobox.h	/^    void activateSubControl(SubControl c);$/;"	p	class:RComboBox	access:protected	signature:(SubControl c)
RComboBox::activated	/home/viper/projects/RBit/rcombobox.cpp	/^void RComboBox::activated(Sint32 row)$/;"	f	class:RComboBox	signature:(Sint32 row)
RComboBox::activated	/home/viper/projects/RBit/rcombobox.h	/^    virtual void activated(Sint32 row);$/;"	p	class:RComboBox	access:protected	signature:(Sint32 row)
RComboBox::addItem	/home/viper/projects/RBit/rcombobox.h	/^    void addItem(const char* text);$/;"	p	class:RComboBox	access:public	signature:(const char* text)
RComboBox::addItem	/home/viper/projects/RBit/rcombobox.h	/^inline void RComboBox::addItem(const char* text)$/;"	f	class:RComboBox	signature:(const char* text)
RComboBox::clear	/home/viper/projects/RBit/rcombobox.cpp	/^void RComboBox::clear()$/;"	f	class:RComboBox	signature:()
RComboBox::clear	/home/viper/projects/RBit/rcombobox.h	/^    void clear();$/;"	p	class:RComboBox	access:public	signature:()
RComboBox::count	/home/viper/projects/RBit/rcombobox.cpp	/^Sint32 RComboBox::count() const$/;"	f	class:RComboBox	signature:() const
RComboBox::count	/home/viper/projects/RBit/rcombobox.h	/^    Sint32 count() const;$/;"	p	class:RComboBox	access:public	signature:() const
RComboBox::currentRow	/home/viper/projects/RBit/rcombobox.cpp	/^Sint32 RComboBox::currentRow() const$/;"	f	class:RComboBox	signature:() const
RComboBox::currentRow	/home/viper/projects/RBit/rcombobox.h	/^    Sint32 currentRow() const;$/;"	p	class:RComboBox	access:public	signature:() const
RComboBox::currentRowChanged	/home/viper/projects/RBit/rcombobox.cpp	/^void RComboBox::currentRowChanged(Sint32 row)$/;"	f	class:RComboBox	signature:(Sint32 row)
RComboBox::currentRowChanged	/home/viper/projects/RBit/rcombobox.h	/^    virtual void currentRowChanged(Sint32 row);$/;"	p	class:RComboBox	access:protected	signature:(Sint32 row)
RComboBox::editbox	/home/viper/projects/RBit/rcombobox.cpp	/^REditBox *RComboBox::editbox()$/;"	f	class:RComboBox	signature:()
RComboBox::editbox	/home/viper/projects/RBit/rcombobox.h	/^	REditBox *editbox();$/;"	p	class:RComboBox	access:public	signature:()
RComboBox::eventFocusLost	/home/viper/projects/RBit/rcombobox.cpp	/^void RComboBox::eventFocusLost()$/;"	f	class:RComboBox	signature:()
RComboBox::eventFocusLost	/home/viper/projects/RBit/rcombobox.h	/^    virtual void eventFocusLost();$/;"	p	class:RComboBox	access:protected	signature:()
RComboBox::eventFocusSet	/home/viper/projects/RBit/rcombobox.cpp	/^void RComboBox::eventFocusSet()$/;"	f	class:RComboBox	signature:()
RComboBox::eventFocusSet	/home/viper/projects/RBit/rcombobox.h	/^    virtual void eventFocusSet();$/;"	p	class:RComboBox	access:protected	signature:()
RComboBox::eventHide	/home/viper/projects/RBit/rcombobox.cpp	/^void RComboBox::eventHide()$/;"	f	class:RComboBox	signature:()
RComboBox::eventHide	/home/viper/projects/RBit/rcombobox.h	/^    virtual void eventHide();$/;"	p	class:RComboBox	access:protected	signature:()
RComboBox::eventIdle	/home/viper/projects/RBit/rcombobox.cpp	/^void RComboBox::eventIdle()$/;"	f	class:RComboBox	signature:()
RComboBox::eventIdle	/home/viper/projects/RBit/rcombobox.h	/^	virtual void eventIdle();$/;"	p	class:RComboBox	access:protected	signature:()
RComboBox::eventKeyDown	/home/viper/projects/RBit/rcombobox.cpp	/^bool RComboBox::eventKeyDown(const SDL_keysym& key, bool autoRepeat)$/;"	f	class:RComboBox	signature:(const SDL_keysym& key, bool autoRepeat)
RComboBox::eventKeyDown	/home/viper/projects/RBit/rcombobox.h	/^    virtual bool eventKeyDown(const SDL_keysym& key, bool autoRepeat);$/;"	p	class:RComboBox	access:protected	signature:(const SDL_keysym& key, bool autoRepeat)
RComboBox::eventKeyUp	/home/viper/projects/RBit/rcombobox.cpp	/^bool RComboBox::eventKeyUp(const SDL_keysym& key, bool autoRepeat)$/;"	f	class:RComboBox	signature:(const SDL_keysym& key, bool autoRepeat)
RComboBox::eventKeyUp	/home/viper/projects/RBit/rcombobox.h	/^    virtual bool eventKeyUp(const SDL_keysym& key, bool autoRepeat);$/;"	p	class:RComboBox	access:protected	signature:(const SDL_keysym& key, bool autoRepeat)
RComboBox::eventMouseDown	/home/viper/projects/RBit/rcombobox.cpp	/^void RComboBox::eventMouseDown(const SDL_MouseButtonEvent& m)$/;"	f	class:RComboBox	signature:(const SDL_MouseButtonEvent& m)
RComboBox::eventMouseDown	/home/viper/projects/RBit/rcombobox.h	/^    virtual void eventMouseDown(const SDL_MouseButtonEvent&);$/;"	p	class:RComboBox	access:protected	signature:(const SDL_MouseButtonEvent&)
RComboBox::eventMouseUp	/home/viper/projects/RBit/rcombobox.cpp	/^void RComboBox::eventMouseUp(const SDL_MouseButtonEvent& m)$/;"	f	class:RComboBox	signature:(const SDL_MouseButtonEvent& m)
RComboBox::eventMouseUp	/home/viper/projects/RBit/rcombobox.h	/^    virtual void eventMouseUp(const SDL_MouseButtonEvent&);$/;"	p	class:RComboBox	access:protected	signature:(const SDL_MouseButtonEvent&)
RComboBox::hidePopup	/home/viper/projects/RBit/rcombobox.cpp	/^void RComboBox::hidePopup()$/;"	f	class:RComboBox	signature:()
RComboBox::hidePopup	/home/viper/projects/RBit/rcombobox.h	/^    virtual void hidePopup();$/;"	p	class:RComboBox	access:public	signature:()
RComboBox::highlighted	/home/viper/projects/RBit/rcombobox.cpp	/^void RComboBox::highlighted(Sint32 row)$/;"	f	class:RComboBox	signature:(Sint32 row)
RComboBox::highlighted	/home/viper/projects/RBit/rcombobox.h	/^    virtual void highlighted(Sint32 row);$/;"	p	class:RComboBox	access:protected	signature:(Sint32 row)
RComboBox::hitTestSubControl	/home/viper/projects/RBit/rcombobox.cpp	/^RComboBox::SubControl RComboBox::hitTestSubControl(const RPoint& p) const$/;"	f	class:RComboBox	signature:(const RPoint& p) const
RComboBox::hitTestSubControl	/home/viper/projects/RBit/rcombobox.h	/^    SubControl hitTestSubControl(const RPoint& p) const;$/;"	p	class:RComboBox	access:protected	signature:(const RPoint& p) const
RComboBox::insertItem	/home/viper/projects/RBit/rcombobox.cpp	/^void RComboBox::insertItem(Sint32 row, const char* text)$/;"	f	class:RComboBox	signature:(Sint32 row, const char* text)
RComboBox::insertItem	/home/viper/projects/RBit/rcombobox.h	/^    void insertItem(Sint32 row, const char* text);$/;"	p	class:RComboBox	access:public	signature:(Sint32 row, const char* text)
RComboBox::isEditable	/home/viper/projects/RBit/rcombobox.h	/^	bool isEditable() const;$/;"	p	class:RComboBox	access:public	signature:() const
RComboBox::isEditable	/home/viper/projects/RBit/rcombobox.h	/^inline bool RComboBox::isEditable() const$/;"	f	class:RComboBox	signature:() const
RComboBox::m_currentRow	/home/viper/projects/RBit/rcombobox.h	/^    Sint32       m_currentRow;$/;"	m	class:RComboBox	access:private
RComboBox::m_edit	/home/viper/projects/RBit/rcombobox.h	/^	EditBox		*m_edit;$/;"	m	class:RComboBox	access:private
RComboBox::m_maxCount	/home/viper/projects/RBit/rcombobox.h	/^    Sint32       m_maxCount;$/;"	m	class:RComboBox	access:private
RComboBox::m_maxVisibleItems	/home/viper/projects/RBit/rcombobox.h	/^    Sint32       m_maxVisibleItems;$/;"	m	class:RComboBox	access:private
RComboBox::m_popup	/home/viper/projects/RBit/rcombobox.h	/^	Popup		*m_popup;$/;"	m	class:RComboBox	access:private
RComboBox::m_pressedControl	/home/viper/projects/RBit/rcombobox.h	/^    SubControl   m_pressedControl;$/;"	m	class:RComboBox	access:private
RComboBox::m_searchStr	/home/viper/projects/RBit/rcombobox.h	/^	std::string	 m_searchStr;$/;"	m	class:RComboBox	access:private
RComboBox::m_searchTimeOut	/home/viper/projects/RBit/rcombobox.h	/^	Sint32		 m_searchTimeOut;$/;"	m	class:RComboBox	access:private
RComboBox::m_timePerSearch	/home/viper/projects/RBit/rcombobox.h	/^	Sint32		 m_timePerSearch;$/;"	m	class:RComboBox	access:private
RComboBox::maxCount	/home/viper/projects/RBit/rcombobox.cpp	/^Sint32 RComboBox::maxCount() const$/;"	f	class:RComboBox	signature:() const
RComboBox::maxCount	/home/viper/projects/RBit/rcombobox.h	/^    Sint32 maxCount() const;$/;"	p	class:RComboBox	access:public	signature:() const
RComboBox::maxVisibleItems	/home/viper/projects/RBit/rcombobox.cpp	/^Sint32 RComboBox::maxVisibleItems() const$/;"	f	class:RComboBox	signature:() const
RComboBox::maxVisibleItems	/home/viper/projects/RBit/rcombobox.h	/^    Sint32 maxVisibleItems() const;$/;"	p	class:RComboBox	access:public	signature:() const
RComboBox::minimumContentsLength	/home/viper/projects/RBit/rcombobox.h	/^    Sint32 minimumContentsLength() const;$/;"	p	class:RComboBox	access:public	signature:() const
RComboBox::minimumSizeHint	/home/viper/projects/RBit/rcombobox.h	/^    RSize minimumSizeHint() const;    $/;"	p	class:RComboBox	access:public	signature:() const
RComboBox::removeItem	/home/viper/projects/RBit/rcombobox.cpp	/^void RComboBox::removeItem(Sint32 row)$/;"	f	class:RComboBox	signature:(Sint32 row)
RComboBox::removeItem	/home/viper/projects/RBit/rcombobox.h	/^    void removeItem(Sint32 row);$/;"	p	class:RComboBox	access:public	signature:(Sint32 row)
RComboBox::repaintImpl	/home/viper/projects/RBit/rcombobox.cpp	/^void RComboBox::repaintImpl(const RRect& r)$/;"	f	class:RComboBox	signature:(const RRect& r)
RComboBox::repaintImpl	/home/viper/projects/RBit/rcombobox.h	/^    virtual void repaintImpl(const RRect& rect);$/;"	p	class:RComboBox	access:protected	signature:(const RRect& rect)
RComboBox::resetButton	/home/viper/projects/RBit/rcombobox.cpp	/^void RComboBox::resetButton()$/;"	f	class:RComboBox	signature:()
RComboBox::resetButton	/home/viper/projects/RBit/rcombobox.h	/^    void resetButton();$/;"	p	class:RComboBox	access:private	signature:()
RComboBox::setCurrentRow	/home/viper/projects/RBit/rcombobox.cpp	/^void RComboBox::setCurrentRow(Sint32 row)$/;"	f	class:RComboBox	signature:(Sint32 row)
RComboBox::setCurrentRow	/home/viper/projects/RBit/rcombobox.h	/^    void setCurrentRow(Sint32 row);$/;"	p	class:RComboBox	access:public	signature:(Sint32 row)
RComboBox::setEditable	/home/viper/projects/RBit/rcombobox.cpp	/^void RComboBox::setEditable(bool b)$/;"	f	class:RComboBox	signature:(bool b)
RComboBox::setEditable	/home/viper/projects/RBit/rcombobox.h	/^	void setEditable(bool b);$/;"	p	class:RComboBox	access:public	signature:(bool b)
RComboBox::setGeometry	/home/viper/projects/RBit/rcombobox.cpp	/^void RComboBox::setGeometry(const RPoint& p, const RSize& s)$/;"	f	class:RComboBox	signature:(const RPoint& p, const RSize& s)
RComboBox::setGeometry	/home/viper/projects/RBit/rcombobox.h	/^	virtual void setGeometry(const RPoint& p, const RSize& s);$/;"	p	class:RComboBox	access:public	signature:(const RPoint& p, const RSize& s)
RComboBox::setGeometry	/home/viper/projects/RBit/rcombobox.h	/^	void setGeometry(const RRect& g);$/;"	p	class:RComboBox	access:public	signature:(const RRect& g)
RComboBox::setGeometry	/home/viper/projects/RBit/rcombobox.h	/^inline void RComboBox::setGeometry(const RRect& g)$/;"	f	class:RComboBox	signature:(const RRect& g)
RComboBox::setMaxCount	/home/viper/projects/RBit/rcombobox.cpp	/^void RComboBox::setMaxCount(Sint32 max)$/;"	f	class:RComboBox	signature:(Sint32 max)
RComboBox::setMaxCount	/home/viper/projects/RBit/rcombobox.h	/^    void setMaxCount(Sint32 max);$/;"	p	class:RComboBox	access:public	signature:(Sint32 max)
RComboBox::setMaxVisibleItems	/home/viper/projects/RBit/rcombobox.cpp	/^void RComboBox::setMaxVisibleItems(Sint32 maxItems)$/;"	f	class:RComboBox	signature:(Sint32 maxItems)
RComboBox::setMaxVisibleItems	/home/viper/projects/RBit/rcombobox.h	/^    void setMaxVisibleItems(Sint32 maxItems);$/;"	p	class:RComboBox	access:public	signature:(Sint32 maxItems)
RComboBox::setMinimumContentsLength	/home/viper/projects/RBit/rcombobox.h	/^    void setMinimumContentsLength(Sint32 characters);$/;"	p	class:RComboBox	access:public	signature:(Sint32 characters)
RComboBox::setText	/home/viper/projects/RBit/rcombobox.cpp	/^void RComboBox::setText(const char* text, Sint32 row)$/;"	f	class:RComboBox	signature:(const char* text, Sint32 row)
RComboBox::setText	/home/viper/projects/RBit/rcombobox.h	/^    void setText(const char* text, Sint32 row);$/;"	p	class:RComboBox	access:public	signature:(const char* text, Sint32 row)
RComboBox::showPopup	/home/viper/projects/RBit/rcombobox.cpp	/^void RComboBox::showPopup()$/;"	f	class:RComboBox	signature:()
RComboBox::showPopup	/home/viper/projects/RBit/rcombobox.h	/^    virtual void showPopup();$/;"	p	class:RComboBox	access:public	signature:()
RComboBox::sizeHint	/home/viper/projects/RBit/rcombobox.cpp	/^RSize RComboBox::sizeHint() const$/;"	f	class:RComboBox	signature:() const
RComboBox::sizeHint	/home/viper/projects/RBit/rcombobox.h	/^    RSize sizeHint() const;$/;"	p	class:RComboBox	access:public	signature:() const
RComboBox::subControlRect	/home/viper/projects/RBit/rcombobox.cpp	/^RRect RComboBox::subControlRect(SubControl sc) const$/;"	f	class:RComboBox	signature:(SubControl sc) const
RComboBox::subControlRect	/home/viper/projects/RBit/rcombobox.h	/^    RRect subControlRect(SubControl c) const;$/;"	p	class:RComboBox	access:protected	signature:(SubControl c) const
RComboBox::text	/home/viper/projects/RBit/rcombobox.cpp	/^const char* RComboBox::text(Sint32 row) const$/;"	f	class:RComboBox	signature:(Sint32 row) const
RComboBox::text	/home/viper/projects/RBit/rcombobox.h	/^    const char* text(Sint32 row) const;$/;"	p	class:RComboBox	access:public	signature:(Sint32 row) const
RComboBox::updateEditBoxGeometry	/home/viper/projects/RBit/rcombobox.cpp	/^void RComboBox::updateEditBoxGeometry()$/;"	f	class:RComboBox	signature:()
RComboBox::updateEditBoxGeometry	/home/viper/projects/RBit/rcombobox.h	/^	void updateEditBoxGeometry();$/;"	p	class:RComboBox	access:protected	signature:()
RComboBox::~RComboBox	/home/viper/projects/RBit/rcombobox.cpp	/^RComboBox::~RComboBox()$/;"	f	class:RComboBox	signature:()
RComboBox::~RComboBox	/home/viper/projects/RBit/rcombobox.h	/^    virtual ~RComboBox();$/;"	p	class:RComboBox	access:public	signature:()
RDIALOG_H	/home/viper/projects/RBit/rdialog.h	2;"	d
RDOUBLE_CLICK_DETECTOR_H	/home/viper/projects/RBit/rdoubleclickdetector.h	2;"	d
RDRAW_UTIL_H	/home/viper/projects/RBit/rdrawutil.h	2;"	d
RDialog	/home/viper/projects/RBit/rdialog.cpp	/^RDialog::RDialog(RWidget* parent, RWFlags f) $/;"	f	class:RDialog	signature:(RWidget* parent, RWFlags f)
RDialog	/home/viper/projects/RBit/rdialog.h	/^	RDialog(RWidget* parent = 0, RWFlags f = RWFlags(0));$/;"	p	class:RDialog	access:public	signature:(RWidget* parent = 0, RWFlags f = RWFlags(0))
RDialog	/home/viper/projects/RBit/rdialog.h	/^	RDialog(const RDialog&);$/;"	p	class:RDialog	access:private	signature:(const RDialog&)
RDialog	/home/viper/projects/RBit/rdialog.h	/^class RBIT_CORE_EXPORT RDialog : public RWidget,$/;"	c	inherits:RWidget,RFramePainter
RDialog::Accepted	/home/viper/projects/RBit/rdialog.h	/^		Accepted				$/;"	e	enum:RDialog::__anon2
RDialog::RDialog	/home/viper/projects/RBit/rdialog.cpp	/^RDialog::RDialog(RWidget* parent, RWFlags f) $/;"	f	class:RDialog	signature:(RWidget* parent, RWFlags f)
RDialog::RDialog	/home/viper/projects/RBit/rdialog.h	/^	RDialog(RWidget* parent = 0, RWFlags f = RWFlags(0));$/;"	p	class:RDialog	access:public	signature:(RWidget* parent = 0, RWFlags f = RWFlags(0))
RDialog::RDialog	/home/viper/projects/RBit/rdialog.h	/^	RDialog(const RDialog&);$/;"	p	class:RDialog	access:private	signature:(const RDialog&)
RDialog::Rejected	/home/viper/projects/RBit/rdialog.h	/^        Rejected=0,$/;"	e	enum:RDialog::__anon2
RDialog::accept	/home/viper/projects/RBit/rdialog.cpp	/^void RDialog::accept()$/;"	f	class:RDialog	signature:()
RDialog::accept	/home/viper/projects/RBit/rdialog.h	/^	virtual void accept();$/;"	p	class:RDialog	access:public	signature:()
RDialog::eventHide	/home/viper/projects/RBit/rdialog.cpp	/^void RDialog::eventHide()$/;"	f	class:RDialog	signature:()
RDialog::eventHide	/home/viper/projects/RBit/rdialog.h	/^	virtual void eventHide();    $/;"	p	class:RDialog	access:protected	signature:()
RDialog::eventKeyDown	/home/viper/projects/RBit/rdialog.cpp	/^bool RDialog::eventKeyDown(const SDL_keysym& key, bool autoRepeat)$/;"	f	class:RDialog	signature:(const SDL_keysym& key, bool autoRepeat)
RDialog::eventKeyDown	/home/viper/projects/RBit/rdialog.h	/^	virtual bool eventKeyDown(const SDL_keysym& key, bool autoRepeat);$/;"	p	class:RDialog	access:protected	signature:(const SDL_keysym& key, bool autoRepeat)
RDialog::eventShow	/home/viper/projects/RBit/rdialog.cpp	/^void RDialog::eventShow()$/;"	f	class:RDialog	signature:()
RDialog::eventShow	/home/viper/projects/RBit/rdialog.h	/^	virtual void eventShow();$/;"	p	class:RDialog	access:protected	signature:()
RDialog::m_res	/home/viper/projects/RBit/rdialog.h	/^	int m_res;$/;"	m	class:RDialog	access:private
RDialog::operator =	/home/viper/projects/RBit/rdialog.h	/^	RDialog& operator=(const RDialog&);	$/;"	p	class:RDialog	access:private	signature:(const RDialog&)
RDialog::reject	/home/viper/projects/RBit/rdialog.cpp	/^void RDialog::reject()$/;"	f	class:RDialog	signature:()
RDialog::reject	/home/viper/projects/RBit/rdialog.h	/^	virtual void reject();	$/;"	p	class:RDialog	access:public	signature:()
RDialog::repaintImpl	/home/viper/projects/RBit/rdialog.cpp	/^void RDialog::repaintImpl(const RRect& r)$/;"	f	class:RDialog	signature:(const RRect& r)
RDialog::repaintImpl	/home/viper/projects/RBit/rdialog.h	/^	virtual void repaintImpl(const RRect& r);$/;"	p	class:RDialog	access:protected	signature:(const RRect& r)
RDialog::result	/home/viper/projects/RBit/rdialog.h	/^    int result() const;$/;"	p	class:RDialog	access:protected	signature:() const
RDialog::result	/home/viper/projects/RBit/rdialog.h	/^inline int RDialog::result() const$/;"	f	class:RDialog	signature:() const
RDialog::run	/home/viper/projects/RBit/rdialog.cpp	/^int RDialog::run()$/;"	f	class:RDialog	signature:()
RDialog::run	/home/viper/projects/RBit/rdialog.h	/^	int run();    $/;"	p	class:RDialog	access:public	signature:()
RDialog::setResult	/home/viper/projects/RBit/rdialog.h	/^	void setResult(int i);$/;"	p	class:RDialog	access:protected	signature:(int i)
RDialog::setResult	/home/viper/projects/RBit/rdialog.h	/^inline void RDialog::setResult(int i)$/;"	f	class:RDialog	signature:(int i)
RDoubleClickDetector	/home/viper/projects/RBit/rdoubleclickdetector.h	/^    RDoubleClickDetector(Uint32 margin = rApp->doubleClickMargin())$/;"	f	class:RDoubleClickDetector	access:public	signature:(Uint32 margin = rApp->doubleClickMargin())
RDoubleClickDetector	/home/viper/projects/RBit/rdoubleclickdetector.h	/^class RDoubleClickDetector$/;"	c
RDoubleClickDetector::RDoubleClickDetector	/home/viper/projects/RBit/rdoubleclickdetector.h	/^    RDoubleClickDetector(Uint32 margin = rApp->doubleClickMargin())$/;"	f	class:RDoubleClickDetector	access:public	signature:(Uint32 margin = rApp->doubleClickMargin())
RDoubleClickDetector::isDoubleClick	/home/viper/projects/RBit/rdoubleclickdetector.h	/^    bool isDoubleClick()$/;"	f	class:RDoubleClickDetector	access:public	signature:()
RDoubleClickDetector::m_doubleClickMargin	/home/viper/projects/RBit/rdoubleclickdetector.h	/^    const uint m_doubleClickMargin;$/;"	m	class:RDoubleClickDetector	access:private
RDoubleClickDetector::m_lastClick	/home/viper/projects/RBit/rdoubleclickdetector.h	/^    Uint32 m_lastClick;$/;"	m	class:RDoubleClickDetector	access:private
RDoubleClickDetector::operator =	/home/viper/projects/RBit/rdoubleclickdetector.h	/^    RDoubleClickDetector& operator=(const RDoubleClickDetector&); \/\/ to avoid warning$/;"	p	class:RDoubleClickDetector	access:private	signature:(const RDoubleClickDetector&)
REDITBOX_H	/home/viper/projects/RBit/reditbox.h	2;"	d
REditBox	/home/viper/projects/RBit/reditbox.cpp	/^REditBox::REditBox(RWidget* parent, RWFlags f)$/;"	f	class:REditBox	signature:(RWidget* parent, RWFlags f)
REditBox	/home/viper/projects/RBit/reditbox.h	/^    REditBox(RWidget* parent = 0, RWFlags f = RWFlags(0));$/;"	p	class:REditBox	access:public	signature:(RWidget* parent = 0, RWFlags f = RWFlags(0))
REditBox	/home/viper/projects/RBit/reditbox.h	/^    REditBox(const REditBox&);$/;"	p	class:REditBox	access:private	signature:(const REditBox&)
REditBox	/home/viper/projects/RBit/reditbox.h	/^class RBIT_CORE_EXPORT REditBox : public RWidget,$/;"	c	inherits:RWidget,RFramePainter,RTextPainter
REditBox::EchoMode	/home/viper/projects/RBit/reditbox.h	/^    enum EchoMode$/;"	g	class:REditBox	access:public
REditBox::NoEcho	/home/viper/projects/RBit/reditbox.h	/^        NoEcho,$/;"	e	enum:REditBox::EchoMode
REditBox::Normal	/home/viper/projects/RBit/reditbox.h	/^        Normal,$/;"	e	enum:REditBox::EchoMode
REditBox::Password	/home/viper/projects/RBit/reditbox.h	/^        Password    $/;"	e	enum:REditBox::EchoMode
REditBox::REditBox	/home/viper/projects/RBit/reditbox.cpp	/^REditBox::REditBox(RWidget* parent, RWFlags f)$/;"	f	class:REditBox	signature:(RWidget* parent, RWFlags f)
REditBox::REditBox	/home/viper/projects/RBit/reditbox.h	/^    REditBox(RWidget* parent = 0, RWFlags f = RWFlags(0));$/;"	p	class:REditBox	access:public	signature:(RWidget* parent = 0, RWFlags f = RWFlags(0))
REditBox::REditBox	/home/viper/projects/RBit/reditbox.h	/^    REditBox(const REditBox&);$/;"	p	class:REditBox	access:private	signature:(const REditBox&)
REditBox::alignmentOffset	/home/viper/projects/RBit/reditbox.cpp	/^RPoint REditBox::alignmentOffset() const$/;"	f	class:REditBox	signature:() const
REditBox::alignmentOffset	/home/viper/projects/RBit/reditbox.h	/^    RPoint alignmentOffset() const;$/;"	p	class:REditBox	access:private	signature:() const
REditBox::backspace	/home/viper/projects/RBit/reditbox.cpp	/^void REditBox::backspace()$/;"	f	class:REditBox	signature:()
REditBox::backspace	/home/viper/projects/RBit/reditbox.h	/^	virtual void backspace();$/;"	p	class:REditBox	access:public	signature:()
REditBox::character	/home/viper/projects/RBit/reditbox.cpp	/^bool REditBox::character(char ch)$/;"	f	class:REditBox	signature:(char ch)
REditBox::character	/home/viper/projects/RBit/reditbox.h	/^    virtual bool character(char ch);$/;"	p	class:REditBox	access:public	signature:(char ch)
REditBox::cursorBackward	/home/viper/projects/RBit/reditbox.cpp	/^void REditBox::cursorBackward(bool mark)$/;"	f	class:REditBox	signature:(bool mark)
REditBox::cursorBackward	/home/viper/projects/RBit/reditbox.h	/^    void cursorBackward(bool mark);    $/;"	p	class:REditBox	access:public	signature:(bool mark)
REditBox::cursorForward	/home/viper/projects/RBit/reditbox.cpp	/^void REditBox::cursorForward(bool mark)$/;"	f	class:REditBox	signature:(bool mark)
REditBox::cursorForward	/home/viper/projects/RBit/reditbox.h	/^    void cursorForward(bool mark);$/;"	p	class:REditBox	access:public	signature:(bool mark)
REditBox::cursorInternalRect	/home/viper/projects/RBit/reditbox.cpp	/^RRect REditBox::cursorInternalRect() const$/;"	f	class:REditBox	signature:() const
REditBox::cursorInternalRect	/home/viper/projects/RBit/reditbox.h	/^    RRect cursorInternalRect() const;$/;"	p	class:REditBox	access:private	signature:() const
REditBox::cursorInternalX	/home/viper/projects/RBit/reditbox.cpp	/^Sint32 REditBox::cursorInternalX() const$/;"	f	class:REditBox	signature:() const
REditBox::cursorInternalX	/home/viper/projects/RBit/reditbox.h	/^    Sint32 cursorInternalX() const;$/;"	p	class:REditBox	access:private	signature:() const
REditBox::cursorPosition	/home/viper/projects/RBit/reditbox.h	/^    Sint32 cursorPosition() const;$/;"	p	class:REditBox	access:public	signature:() const
REditBox::cursorPosition	/home/viper/projects/RBit/reditbox.h	/^inline Sint32 REditBox::cursorPosition() const$/;"	f	class:REditBox	signature:() const
REditBox::cursorRect	/home/viper/projects/RBit/reditbox.cpp	/^RRect REditBox::cursorRect() const$/;"	f	class:REditBox	signature:() const
REditBox::cursorRect	/home/viper/projects/RBit/reditbox.h	/^    RRect cursorRect() const;$/;"	p	class:REditBox	access:protected	signature:() const
REditBox::cursorSize	/home/viper/projects/RBit/reditbox.cpp	/^RSize REditBox::cursorSize() const$/;"	f	class:REditBox	signature:() const
REditBox::cursorSize	/home/viper/projects/RBit/reditbox.h	/^    RSize cursorSize() const; $/;"	p	class:REditBox	access:private	signature:() const
REditBox::del	/home/viper/projects/RBit/reditbox.cpp	/^void REditBox::del()$/;"	f	class:REditBox	signature:()
REditBox::del	/home/viper/projects/RBit/reditbox.h	/^    void del();$/;"	p	class:REditBox	access:public	signature:()
REditBox::deselect	/home/viper/projects/RBit/reditbox.cpp	/^void REditBox::deselect()$/;"	f	class:REditBox	signature:()
REditBox::deselect	/home/viper/projects/RBit/reditbox.h	/^    void deselect();$/;"	p	class:REditBox	access:public	signature:()
REditBox::displayText	/home/viper/projects/RBit/reditbox.cpp	/^const char* REditBox::displayText() const$/;"	f	class:REditBox	signature:() const
REditBox::displayText	/home/viper/projects/RBit/reditbox.h	/^    const char* displayText() const;$/;"	p	class:REditBox	access:protected	signature:() const
REditBox::echoMode	/home/viper/projects/RBit/reditbox.h	/^    EchoMode echoMode() const;$/;"	p	class:REditBox	access:public	signature:() const
REditBox::echoMode	/home/viper/projects/RBit/reditbox.h	/^inline REditBox::EchoMode REditBox::echoMode() const$/;"	f	class:REditBox	signature:() const
REditBox::end	/home/viper/projects/RBit/reditbox.cpp	/^void REditBox::end(bool mark)$/;"	f	class:REditBox	signature:(bool mark)
REditBox::end	/home/viper/projects/RBit/reditbox.h	/^    void end(bool mark);$/;"	p	class:REditBox	access:public	signature:(bool mark)
REditBox::eventFocusLost	/home/viper/projects/RBit/reditbox.cpp	/^void REditBox::eventFocusLost()$/;"	f	class:REditBox	signature:()
REditBox::eventFocusLost	/home/viper/projects/RBit/reditbox.h	/^    virtual void eventFocusLost();$/;"	p	class:REditBox	access:protected	signature:()
REditBox::eventFocusSet	/home/viper/projects/RBit/reditbox.cpp	/^void REditBox::eventFocusSet()$/;"	f	class:REditBox	signature:()
REditBox::eventFocusSet	/home/viper/projects/RBit/reditbox.h	/^    virtual void eventFocusSet();$/;"	p	class:REditBox	access:protected	signature:()
REditBox::eventIdle	/home/viper/projects/RBit/reditbox.cpp	/^void REditBox::eventIdle()$/;"	f	class:REditBox	signature:()
REditBox::eventIdle	/home/viper/projects/RBit/reditbox.h	/^    virtual void eventIdle();   $/;"	p	class:REditBox	access:protected	signature:()
REditBox::eventKeyDown	/home/viper/projects/RBit/reditbox.cpp	/^bool REditBox::eventKeyDown(const SDL_keysym& key, bool autoRepeat)$/;"	f	class:REditBox	signature:(const SDL_keysym& key, bool autoRepeat)
REditBox::eventKeyDown	/home/viper/projects/RBit/reditbox.h	/^    virtual bool eventKeyDown(const SDL_keysym& key, bool autoRepeat);$/;"	p	class:REditBox	access:protected	signature:(const SDL_keysym& key, bool autoRepeat)
REditBox::eventMouseDown	/home/viper/projects/RBit/reditbox.cpp	/^void REditBox::eventMouseDown(const SDL_MouseButtonEvent& m)$/;"	f	class:REditBox	signature:(const SDL_MouseButtonEvent& m)
REditBox::eventMouseDown	/home/viper/projects/RBit/reditbox.h	/^    virtual void eventMouseDown(const SDL_MouseButtonEvent&);$/;"	p	class:REditBox	access:protected	signature:(const SDL_MouseButtonEvent&)
REditBox::eventMouseMove	/home/viper/projects/RBit/reditbox.cpp	/^void REditBox::eventMouseMove(const SDL_MouseMotionEvent& m)$/;"	f	class:REditBox	signature:(const SDL_MouseMotionEvent& m)
REditBox::eventMouseMove	/home/viper/projects/RBit/reditbox.h	/^    virtual void eventMouseMove(const SDL_MouseMotionEvent&);$/;"	p	class:REditBox	access:protected	signature:(const SDL_MouseMotionEvent&)
REditBox::eventShow	/home/viper/projects/RBit/reditbox.cpp	/^void REditBox::eventShow()$/;"	f	class:REditBox	signature:()
REditBox::eventShow	/home/viper/projects/RBit/reditbox.h	/^    virtual void eventShow();$/;"	p	class:REditBox	access:protected	signature:()
REditBox::frameWidthChanged	/home/viper/projects/RBit/reditbox.cpp	/^void REditBox::frameWidthChanged()$/;"	f	class:REditBox	signature:()
REditBox::frameWidthChanged	/home/viper/projects/RBit/reditbox.h	/^    virtual void frameWidthChanged();$/;"	p	class:REditBox	access:protected	signature:()
REditBox::hasSelectedText	/home/viper/projects/RBit/reditbox.cpp	/^bool REditBox::hasSelectedText() const$/;"	f	class:REditBox	signature:() const
REditBox::hasSelectedText	/home/viper/projects/RBit/reditbox.h	/^    bool hasSelectedText() const;    $/;"	p	class:REditBox	access:public	signature:() const
REditBox::home	/home/viper/projects/RBit/reditbox.cpp	/^void REditBox::home(bool mark)$/;"	f	class:REditBox	signature:(bool mark)
REditBox::home	/home/viper/projects/RBit/reditbox.h	/^    void home(bool mark);$/;"	p	class:REditBox	access:public	signature:(bool mark)
REditBox::internalXToPos	/home/viper/projects/RBit/reditbox.cpp	/^Sint32 REditBox::internalXToPos(Sint32 x) const$/;"	f	class:REditBox	signature:(Sint32 x) const
REditBox::internalXToPos	/home/viper/projects/RBit/reditbox.h	/^    Sint32 internalXToPos(Sint32 x) const;$/;"	p	class:REditBox	access:private	signature:(Sint32 x) const
REditBox::isCursorSupressed	/home/viper/projects/RBit/reditbox.h	/^    bool isCursorSupressed() const;$/;"	p	class:REditBox	access:public	signature:() const
REditBox::isCursorSupressed	/home/viper/projects/RBit/reditbox.h	/^inline bool REditBox::isCursorSupressed() const$/;"	f	class:REditBox	signature:() const
REditBox::isCursorVisible	/home/viper/projects/RBit/reditbox.h	/^    bool isCursorVisible() const;$/;"	p	class:REditBox	access:protected	signature:() const
REditBox::isCursorVisible	/home/viper/projects/RBit/reditbox.h	/^inline bool REditBox::isCursorVisible() const$/;"	f	class:REditBox	signature:() const
REditBox::isEditable	/home/viper/projects/RBit/reditbox.h	/^    bool isEditable() const;    $/;"	p	class:REditBox	access:public	signature:() const
REditBox::isEditable	/home/viper/projects/RBit/reditbox.h	/^inline bool REditBox::isEditable() const$/;"	f	class:REditBox	signature:() const
REditBox::isEmpty	/home/viper/projects/RBit/reditbox.h	/^	bool isEmpty();$/;"	p	class:REditBox	access:public	signature:()
REditBox::isEmpty	/home/viper/projects/RBit/reditbox.h	/^inline bool REditBox::isEmpty()$/;"	f	class:REditBox	signature:()
REditBox::m_alignmentOffset	/home/viper/projects/RBit/reditbox.h	/^    mutable RPoint      m_alignmentOffset;$/;"	m	class:REditBox	access:private
REditBox::m_curX	/home/viper/projects/RBit/reditbox.h	/^    mutable Sint32      m_curX;                 \/\/ x-ÍÓÓ‰. ÍÛÒÓ‡$/;"	m	class:REditBox	access:private
REditBox::m_cursor	/home/viper/projects/RBit/reditbox.h	/^    Sint32              m_cursor;               \/\/ ÔÓÁËˆËˇ ÍÛÒÓ‡$/;"	m	class:REditBox	access:private
REditBox::m_displayText	/home/viper/projects/RBit/reditbox.h	/^    mutable std::string m_displayText;$/;"	m	class:REditBox	access:private
REditBox::m_doubleClickDetector	/home/viper/projects/RBit/reditbox.h	/^    RDoubleClickDetector m_doubleClickDetector;$/;"	m	class:REditBox	access:private
REditBox::m_hscroll	/home/viper/projects/RBit/reditbox.h	/^    Sint32              m_hscroll;              $/;"	m	class:REditBox	access:private
REditBox::m_lastCurFlashTime	/home/viper/projects/RBit/reditbox.h	/^    Uint32              m_lastCurFlashTime;     \/\/ ‚ÂÏˇ ÔÓÒÎÂ‰ÌÂ„Ó ÏË„‡ÌËˇ ÍÛÒÓ‡$/;"	m	class:REditBox	access:private
REditBox::m_margin	/home/viper/projects/RBit/reditbox.h	/^    Uint8               m_margin;               \/\/ ÓÚÒÚÛÔ ÒÎÂ‚‡ Ë ÒÔ‡‚‡$/;"	m	class:REditBox	access:private
REditBox::m_selend	/home/viper/projects/RBit/reditbox.h	/^    Sint32              m_selend;$/;"	m	class:REditBox	access:private
REditBox::m_selstart	/home/viper/projects/RBit/reditbox.h	/^    Sint32              m_selstart;$/;"	m	class:REditBox	access:private
REditBox::m_text	/home/viper/projects/RBit/reditbox.h	/^    std::string         m_text;$/;"	m	class:REditBox	access:private
REditBox::m_textSize	/home/viper/projects/RBit/reditbox.h	/^    mutable RSize       m_textSize;$/;"	m	class:REditBox	access:private
REditBox::maxCursorPosition	/home/viper/projects/RBit/reditbox.h	/^    Sint32 maxCursorPosition() const;$/;"	p	class:REditBox	access:public	signature:() const
REditBox::maxCursorPosition	/home/viper/projects/RBit/reditbox.h	/^inline Sint32 REditBox::maxCursorPosition() const$/;"	f	class:REditBox	signature:() const
REditBox::minCursorPosition	/home/viper/projects/RBit/reditbox.h	/^    Sint32 minCursorPosition() const;$/;"	p	class:REditBox	access:public	signature:() const
REditBox::minCursorPosition	/home/viper/projects/RBit/reditbox.h	/^inline Sint32 REditBox::minCursorPosition() const$/;"	f	class:REditBox	signature:() const
REditBox::moveCursor	/home/viper/projects/RBit/reditbox.cpp	/^void REditBox::moveCursor(Sint32 pos, bool mark)$/;"	f	class:REditBox	signature:(Sint32 pos, bool mark)
REditBox::moveCursor	/home/viper/projects/RBit/reditbox.h	/^    virtual void moveCursor(Sint32 pos, bool mark);$/;"	p	class:REditBox	access:protected	signature:(Sint32 pos, bool mark)
REditBox::operator =	/home/viper/projects/RBit/reditbox.h	/^    REditBox& operator=(const REditBox&);$/;"	p	class:REditBox	access:private	signature:(const REditBox&)
REditBox::posToInternalX	/home/viper/projects/RBit/reditbox.cpp	/^Sint32 REditBox::posToInternalX(Sint32 pos) const$/;"	f	class:REditBox	signature:(Sint32 pos) const
REditBox::posToInternalX	/home/viper/projects/RBit/reditbox.h	/^    Sint32 posToInternalX(Sint32 pos) const;$/;"	p	class:REditBox	access:private	signature:(Sint32 pos) const
REditBox::removeSelectedText	/home/viper/projects/RBit/reditbox.cpp	/^void REditBox::removeSelectedText()$/;"	f	class:REditBox	signature:()
REditBox::removeSelectedText	/home/viper/projects/RBit/reditbox.h	/^    void removeSelectedText();$/;"	p	class:REditBox	access:protected	signature:()
REditBox::repaintImpl	/home/viper/projects/RBit/reditbox.cpp	/^void REditBox::repaintImpl(const RRect& r)$/;"	f	class:REditBox	signature:(const RRect& r)
REditBox::repaintImpl	/home/viper/projects/RBit/reditbox.h	/^    virtual void repaintImpl(const RRect& r);    $/;"	p	class:REditBox	access:protected	signature:(const RRect& r)
REditBox::ret	/home/viper/projects/RBit/reditbox.cpp	/^void REditBox::ret()$/;"	f	class:REditBox	signature:()
REditBox::ret	/home/viper/projects/RBit/reditbox.h	/^    virtual void ret();$/;"	p	class:REditBox	access:public	signature:()
REditBox::scrollOffset	/home/viper/projects/RBit/reditbox.cpp	/^RPoint REditBox::scrollOffset() const$/;"	f	class:REditBox	signature:() const
REditBox::scrollOffset	/home/viper/projects/RBit/reditbox.h	/^    RPoint scrollOffset() const;$/;"	p	class:REditBox	access:private	signature:() const
REditBox::scrollTo	/home/viper/projects/RBit/reditbox.cpp	/^void REditBox::scrollTo(Sint32 pos)$/;"	f	class:REditBox	signature:(Sint32 pos)
REditBox::scrollTo	/home/viper/projects/RBit/reditbox.h	/^    void scrollTo(Sint32 pos);$/;"	p	class:REditBox	access:protected	signature:(Sint32 pos)
REditBox::scrollToInternalX	/home/viper/projects/RBit/reditbox.cpp	/^void REditBox::scrollToInternalX(Sint32 x)$/;"	f	class:REditBox	signature:(Sint32 x)
REditBox::scrollToInternalX	/home/viper/projects/RBit/reditbox.h	/^    void scrollToInternalX(Sint32 x);$/;"	p	class:REditBox	access:private	signature:(Sint32 x)
REditBox::selectAll	/home/viper/projects/RBit/reditbox.cpp	/^void REditBox::selectAll()$/;"	f	class:REditBox	signature:()
REditBox::selectAll	/home/viper/projects/RBit/reditbox.h	/^    void selectAll();$/;"	p	class:REditBox	access:public	signature:()
REditBox::selectionEnd	/home/viper/projects/RBit/reditbox.cpp	/^int REditBox::selectionEnd() const$/;"	f	class:REditBox	signature:() const
REditBox::selectionEnd	/home/viper/projects/RBit/reditbox.h	/^    int selectionEnd() const;$/;"	p	class:REditBox	access:public	signature:() const
REditBox::selectionStart	/home/viper/projects/RBit/reditbox.cpp	/^int REditBox::selectionStart() const$/;"	f	class:REditBox	signature:() const
REditBox::selectionStart	/home/viper/projects/RBit/reditbox.h	/^    int selectionStart() const;$/;"	p	class:REditBox	access:public	signature:() const
REditBox::setCursorPosition	/home/viper/projects/RBit/reditbox.cpp	/^void REditBox::setCursorPosition(Sint32 pos)$/;"	f	class:REditBox	signature:(Sint32 pos)
REditBox::setCursorPosition	/home/viper/projects/RBit/reditbox.h	/^    void setCursorPosition(Sint32 pos);$/;"	p	class:REditBox	access:public	signature:(Sint32 pos)
REditBox::setCursorVisible	/home/viper/projects/RBit/reditbox.h	/^    void setCursorVisible(bool visible);$/;"	p	class:REditBox	access:protected	signature:(bool visible)
REditBox::setCursorVisible	/home/viper/projects/RBit/reditbox.h	/^inline void REditBox::setCursorVisible(bool visible)$/;"	f	class:REditBox	signature:(bool visible)
REditBox::setEchoMode	/home/viper/projects/RBit/reditbox.h	/^    void setEchoMode(EchoMode m);$/;"	p	class:REditBox	access:public	signature:(EchoMode m)
REditBox::setEchoMode	/home/viper/projects/RBit/reditbox.h	/^inline void REditBox::setEchoMode(enum REditBox::EchoMode m)$/;"	f	class:REditBox	signature:(enum REditBox::EchoMode m)
REditBox::setEditable	/home/viper/projects/RBit/reditbox.h	/^    void setEditable(bool editable);            $/;"	p	class:REditBox	access:public	signature:(bool editable)
REditBox::setEditable	/home/viper/projects/RBit/reditbox.h	/^inline void REditBox::setEditable(bool e)$/;"	f	class:REditBox	signature:(bool e)
REditBox::setGeometry	/home/viper/projects/RBit/reditbox.cpp	/^void REditBox::setGeometry(const RPoint& pos, const RSize& s)$/;"	f	class:REditBox	signature:(const RPoint& pos, const RSize& s)
REditBox::setGeometry	/home/viper/projects/RBit/reditbox.h	/^    virtual void setGeometry(const RPoint& pos, const RSize& size);$/;"	p	class:REditBox	access:public	signature:(const RPoint& pos, const RSize& size)
REditBox::setGeometry	/home/viper/projects/RBit/reditbox.h	/^    void setGeometry(const RRect& rect);$/;"	p	class:REditBox	access:public	signature:(const RRect& rect)
REditBox::setGeometry	/home/viper/projects/RBit/reditbox.h	/^inline void REditBox::setGeometry(const RRect& rect)$/;"	f	class:REditBox	signature:(const RRect& rect)
REditBox::setSelection	/home/viper/projects/RBit/reditbox.cpp	/^void REditBox::setSelection(int start, int length)$/;"	f	class:REditBox	signature:(int start, int length)
REditBox::setSelection	/home/viper/projects/RBit/reditbox.h	/^    void setSelection(int start, int length);$/;"	p	class:REditBox	access:public	signature:(int start, int length)
REditBox::setText	/home/viper/projects/RBit/reditbox.cpp	/^void REditBox::setText(const char* str)$/;"	f	class:REditBox	signature:(const char* str)
REditBox::setText	/home/viper/projects/RBit/reditbox.h	/^    void setText(const char* str);$/;"	p	class:REditBox	access:public	signature:(const char* str)
REditBox::setText	/home/viper/projects/RBit/reditbox.h	/^    void setText(const std::string& str);   $/;"	p	class:REditBox	access:public	signature:(const std::string& str)
REditBox::setText	/home/viper/projects/RBit/reditbox.h	/^inline void REditBox::setText(const std::string& str)$/;"	f	class:REditBox	signature:(const std::string& str)
REditBox::supressCursor	/home/viper/projects/RBit/reditbox.h	/^    void supressCursor(bool supress);    $/;"	p	class:REditBox	access:public	signature:(bool supress)
REditBox::supressCursor	/home/viper/projects/RBit/reditbox.h	/^inline void REditBox::supressCursor(bool supress)$/;"	f	class:REditBox	signature:(bool supress)
REditBox::text	/home/viper/projects/RBit/reditbox.h	/^    const char* text() const;$/;"	p	class:REditBox	access:public	signature:() const
REditBox::text	/home/viper/projects/RBit/reditbox.h	/^inline const char* REditBox::text() const$/;"	f	class:REditBox	signature:() const
REditBox::textChanged	/home/viper/projects/RBit/reditbox.cpp	/^void REditBox::textChanged()$/;"	f	class:REditBox	signature:()
REditBox::textChanged	/home/viper/projects/RBit/reditbox.h	/^    virtual void textChanged();$/;"	p	class:REditBox	access:protected	signature:()
REditBox::textRect	/home/viper/projects/RBit/reditbox.cpp	/^RRect REditBox::textRect() const$/;"	f	class:REditBox	signature:() const
REditBox::textRect	/home/viper/projects/RBit/reditbox.h	/^    RRect textRect() const;$/;"	p	class:REditBox	access:private	signature:() const
REditBox::textSize	/home/viper/projects/RBit/reditbox.cpp	/^RSize REditBox::textSize() const$/;"	f	class:REditBox	signature:() const
REditBox::textSize	/home/viper/projects/RBit/reditbox.h	/^    RSize textSize() const;$/;"	p	class:REditBox	access:private	signature:() const
REditBox::trim	/home/viper/projects/RBit/reditbox.cpp	/^void REditBox::trim()$/;"	f	class:REditBox	signature:()
REditBox::trim	/home/viper/projects/RBit/reditbox.h	/^	void trim();$/;"	p	class:REditBox	access:public	signature:()
REditBox::triml	/home/viper/projects/RBit/reditbox.cpp	/^void REditBox::triml()$/;"	f	class:REditBox	signature:()
REditBox::triml	/home/viper/projects/RBit/reditbox.h	/^	void triml();$/;"	p	class:REditBox	access:public	signature:()
REditBox::trimr	/home/viper/projects/RBit/reditbox.cpp	/^void REditBox::trimr()$/;"	f	class:REditBox	signature:()
REditBox::trimr	/home/viper/projects/RBit/reditbox.h	/^	void trimr();$/;"	p	class:REditBox	access:public	signature:()
REditBox::updateCursorRect	/home/viper/projects/RBit/reditbox.cpp	/^void REditBox::updateCursorRect()$/;"	f	class:REditBox	signature:()
REditBox::updateCursorRect	/home/viper/projects/RBit/reditbox.h	/^    void  updateCursorRect();$/;"	p	class:REditBox	access:private	signature:()
REditBox::updateDisplayText	/home/viper/projects/RBit/reditbox.cpp	/^void REditBox::updateDisplayText() const$/;"	f	class:REditBox	signature:() const
REditBox::updateDisplayText	/home/viper/projects/RBit/reditbox.h	/^    void updateDisplayText() const;$/;"	p	class:REditBox	access:private	signature:() const
REditBox::visualRect	/home/viper/projects/RBit/reditbox.cpp	/^RRect REditBox::visualRect() const$/;"	f	class:REditBox	signature:() const
REditBox::visualRect	/home/viper/projects/RBit/reditbox.h	/^    RRect visualRect() const;$/;"	p	class:REditBox	access:protected	signature:() const
RFONT_H	/home/viper/projects/RBit/rfont.h	2;"	d
RFRAME_PAINTER_H_	/home/viper/projects/RBit/rframepainter.h	2;"	d
RFont	/home/viper/projects/RBit/rfont.h	/^    RFont(const RFont& right)$/;"	f	class:RFont	access:public	signature:(const RFont& right)
RFont	/home/viper/projects/RBit/rfont.h	/^    explicit RFont(TTF_Font* ptr = 0) $/;"	f	class:RFont	access:public	signature:(TTF_Font* ptr = 0)
RFont	/home/viper/projects/RBit/rfont.h	/^class RFont : private RTTFQuiter,$/;"	c	inherits:RTTFQuiter,RSharedPtr
RFont::Base	/home/viper/projects/RBit/rfont.h	/^    typedef RSharedPtr<TTF_Font> Base;$/;"	t	class:RFont	access:private
RFont::RFont	/home/viper/projects/RBit/rfont.h	/^    RFont(const RFont& right)$/;"	f	class:RFont	access:public	signature:(const RFont& right)
RFont::RFont	/home/viper/projects/RBit/rfont.h	/^    explicit RFont(TTF_Font* ptr = 0) $/;"	f	class:RFont	access:public	signature:(TTF_Font* ptr = 0)
RFont::ascent	/home/viper/projects/RBit/rfont.h	/^    Uint8 ascent() const$/;"	f	class:RFont	access:public	signature:() const
RFont::free	/home/viper/projects/RBit/rfont.h	/^    void free()  \/\/ obsolete, exists for compatibility$/;"	f	class:RFont	access:public	signature:()
RFont::height	/home/viper/projects/RBit/rfont.h	/^    Uint8 height() const    $/;"	f	class:RFont	access:public	signature:() const
RFont::lineskip	/home/viper/projects/RBit/rfont.h	/^    Uint8 lineskip() const$/;"	f	class:RFont	access:public	signature:() const
RFont::operator =	/home/viper/projects/RBit/rfont.h	/^    RFont& operator= (TTF_Font* ptr) \/\/ obsolete, exists for compatibility$/;"	f	class:RFont	access:public	signature:(TTF_Font* ptr)
RFont::ttfFont	/home/viper/projects/RBit/rfont.h	/^    TTF_Font* ttfFont() const \/\/ obsolete, exists for compatibility$/;"	f	class:RFont	access:public	signature:() const
RFont::~RFont	/home/viper/projects/RBit/rfont.h	/^    ~RFont()$/;"	f	class:RFont	access:public	signature:()
RFramePainter	/home/viper/projects/RBit/rframepainter.h	/^    RFramePainter();$/;"	p	class:RFramePainter	access:public	signature:()
RFramePainter	/home/viper/projects/RBit/rframepainter.h	/^class RBIT_CORE_EXPORT RFramePainter$/;"	c
RFramePainter	/home/viper/projects/RBit/rframepainter.h	/^inline RFramePainter::RFramePainter()$/;"	f	class:RFramePainter	signature:()
RFramePainter::RFramePainter	/home/viper/projects/RBit/rframepainter.h	/^    RFramePainter();$/;"	p	class:RFramePainter	access:public	signature:()
RFramePainter::RFramePainter	/home/viper/projects/RBit/rframepainter.h	/^inline RFramePainter::RFramePainter()$/;"	f	class:RFramePainter	signature:()
RFramePainter::contentsRect	/home/viper/projects/RBit/rframepainter.cpp	/^RRect RFramePainter::contentsRect(const RRect& frame) const$/;"	f	class:RFramePainter	signature:(const RRect& frame) const
RFramePainter::contentsRect	/home/viper/projects/RBit/rframepainter.h	/^    RRect contentsRect(const RRect& frame) const;$/;"	p	class:RFramePainter	access:protected	signature:(const RRect& frame) const
RFramePainter::drawFrame	/home/viper/projects/RBit/rframepainter.h	/^    void drawFrame(SDL_Surface* surf, const RRect& frame, const RRect& clip, $/;"	p	class:RFramePainter	access:protected	signature:(SDL_Surface* surf, const RRect& frame, const RRect& clip, const RPalette& pal, RPalette::ColorRole foregroundRole)
RFramePainter::drawFrame	/home/viper/projects/RBit/rframepainter.h	/^inline void RFramePainter::drawFrame(SDL_Surface* dst, const RRect& frame, $/;"	f	class:RFramePainter	signature:(SDL_Surface* dst, const RRect& frame, const RRect& clip, const RPalette& pal, RPalette::ColorRole fgRole)
RFramePainter::frameLineWidth	/home/viper/projects/RBit/rframepainter.h	/^    Uint8 frameLineWidth() const;   $/;"	p	class:RFramePainter	access:public	signature:() const
RFramePainter::frameLineWidth	/home/viper/projects/RBit/rframepainter.h	/^inline Uint8 RFramePainter::frameLineWidth() const$/;"	f	class:RFramePainter	signature:() const
RFramePainter::frameMidLineWidth	/home/viper/projects/RBit/rframepainter.h	/^    Uint8 frameMidLineWidth() const;$/;"	p	class:RFramePainter	access:public	signature:() const
RFramePainter::frameMidLineWidth	/home/viper/projects/RBit/rframepainter.h	/^inline Uint8 RFramePainter::frameMidLineWidth() const$/;"	f	class:RFramePainter	signature:() const
RFramePainter::frameShadow	/home/viper/projects/RBit/rframepainter.h	/^    RFrameShadowFlags frameShadow() const;$/;"	p	class:RFramePainter	access:public	signature:() const
RFramePainter::frameShadow	/home/viper/projects/RBit/rframepainter.h	/^inline RFrameShadowFlags RFramePainter::frameShadow() const$/;"	f	class:RFramePainter	signature:() const
RFramePainter::frameShape	/home/viper/projects/RBit/rframepainter.h	/^    RFrameShapeFlags frameShape() const;$/;"	p	class:RFramePainter	access:public	signature:() const
RFramePainter::frameShape	/home/viper/projects/RBit/rframepainter.h	/^inline RFrameShapeFlags RFramePainter::frameShape() const$/;"	f	class:RFramePainter	signature:() const
RFramePainter::frameStyle	/home/viper/projects/RBit/rframepainter.h	/^    int frameStyle() const;$/;"	p	class:RFramePainter	access:public	signature:() const
RFramePainter::frameStyle	/home/viper/projects/RBit/rframepainter.h	/^inline int RFramePainter::frameStyle() const$/;"	f	class:RFramePainter	signature:() const
RFramePainter::frameWidth	/home/viper/projects/RBit/rframepainter.h	/^    Uint8 frameWidth() const;$/;"	p	class:RFramePainter	access:public	signature:() const
RFramePainter::frameWidth	/home/viper/projects/RBit/rframepainter.h	/^inline Uint8 RFramePainter::frameWidth() const$/;"	f	class:RFramePainter	signature:() const
RFramePainter::frameWidthChanged	/home/viper/projects/RBit/rframepainter.cpp	/^void RFramePainter::frameWidthChanged()$/;"	f	class:RFramePainter	signature:()
RFramePainter::frameWidthChanged	/home/viper/projects/RBit/rframepainter.h	/^    virtual void frameWidthChanged();$/;"	p	class:RFramePainter	access:protected	signature:()
RFramePainter::m_frameStyle	/home/viper/projects/RBit/rframepainter.h	/^    int     m_frameStyle;$/;"	m	class:RFramePainter	access:private
RFramePainter::m_frameWidth	/home/viper/projects/RBit/rframepainter.h	/^    Uint8   m_frameWidth;    $/;"	m	class:RFramePainter	access:private
RFramePainter::m_lineWidth	/home/viper/projects/RBit/rframepainter.h	/^    Uint8   m_lineWidth;$/;"	m	class:RFramePainter	access:private
RFramePainter::m_midLineWidth	/home/viper/projects/RBit/rframepainter.h	/^    Uint8   m_midLineWidth;$/;"	m	class:RFramePainter	access:private
RFramePainter::setFrameLineWidth	/home/viper/projects/RBit/rframepainter.h	/^    void setFrameLineWidth(Uint8 w);$/;"	p	class:RFramePainter	access:public	signature:(Uint8 w)
RFramePainter::setFrameLineWidth	/home/viper/projects/RBit/rframepainter.h	/^inline void RFramePainter::setFrameLineWidth(Uint8 w)$/;"	f	class:RFramePainter	signature:(Uint8 w)
RFramePainter::setFrameMidLineWidth	/home/viper/projects/RBit/rframepainter.h	/^    void setFrameMidLineWidth(Uint8 w);$/;"	p	class:RFramePainter	access:public	signature:(Uint8 w)
RFramePainter::setFrameMidLineWidth	/home/viper/projects/RBit/rframepainter.h	/^inline void RFramePainter::setFrameMidLineWidth(Uint8 w)$/;"	f	class:RFramePainter	signature:(Uint8 w)
RFramePainter::setFrameShadow	/home/viper/projects/RBit/rframepainter.h	/^    void setFrameShadow(RFrameShadowFlags s);$/;"	p	class:RFramePainter	access:public	signature:(RFrameShadowFlags s)
RFramePainter::setFrameShadow	/home/viper/projects/RBit/rframepainter.h	/^inline void RFramePainter::setFrameShadow(RFrameShadowFlags s)$/;"	f	class:RFramePainter	signature:(RFrameShadowFlags s)
RFramePainter::setFrameShape	/home/viper/projects/RBit/rframepainter.h	/^    void setFrameShape(RFrameShapeFlags s);$/;"	p	class:RFramePainter	access:public	signature:(RFrameShapeFlags s)
RFramePainter::setFrameShape	/home/viper/projects/RBit/rframepainter.h	/^inline void RFramePainter::setFrameShape(RFrameShapeFlags s)$/;"	f	class:RFramePainter	signature:(RFrameShapeFlags s)
RFramePainter::setFrameStyle	/home/viper/projects/RBit/rframepainter.h	/^    void setFrameStyle(int s);$/;"	p	class:RFramePainter	access:public	signature:(int s)
RFramePainter::setFrameStyle	/home/viper/projects/RBit/rframepainter.h	/^inline void RFramePainter::setFrameStyle(int s)$/;"	f	class:RFramePainter	signature:(int s)
RFramePainter::updateFrameWidth	/home/viper/projects/RBit/rframepainter.cpp	/^void RFramePainter::updateFrameWidth()$/;"	f	class:RFramePainter	signature:()
RFramePainter::updateFrameWidth	/home/viper/projects/RBit/rframepainter.h	/^    void updateFrameWidth();$/;"	p	class:RFramePainter	access:protected	signature:()
RFrameShadowFlags	/home/viper/projects/RBit/rdrawutil.h	/^enum RFrameShadowFlags$/;"	g
RFrameShapeFlags	/home/viper/projects/RBit/rdrawutil.h	/^enum RFrameShapeFlags$/;"	g
RGLOBAL_H	/home/viper/projects/RBit/rglobal.h	2;"	d
RGRID_MODEL_DATA_TYPE	/home/viper/projects/RBit/rgridmodeldatatype.h	2;"	d
RGRID_MODEL_H	/home/viper/projects/RBit/rgridmodel.h	2;"	d
RGRID_VIEW_H	/home/viper/projects/RBit/rgridview.h	2;"	d
RGridModel	/home/viper/projects/RBit/rgridmodel.h	/^class RBIT_CORE_EXPORT RGridModel : public RSubject<RGridModel>$/;"	c	inherits:RSubject
RGridModel::ItemFlags	/home/viper/projects/RBit/rgridmodel.h	/^    enum ItemFlags {$/;"	g	class:RGridModel	access:public
RGridModel::ItemIsEditable	/home/viper/projects/RBit/rgridmodel.h	/^        ItemIsEditable   = 0x02$/;"	e	enum:RGridModel::ItemFlags
RGridModel::ItemIsSelectable	/home/viper/projects/RBit/rgridmodel.h	/^        ItemIsSelectable = 0x01,$/;"	e	enum:RGridModel::ItemFlags
RGridModel::RowSeparator	/home/viper/projects/RBit/rgridmodel.h	/^		RowSeparator = 0x02,$/;"	e	enum:RGridModel::RowType
RGridModel::RowSimple	/home/viper/projects/RBit/rgridmodel.h	/^		RowSimple = 0x01,$/;"	e	enum:RGridModel::RowType
RGridModel::RowType	/home/viper/projects/RBit/rgridmodel.h	/^	enum RowType {$/;"	g	class:RGridModel	access:public
RGridModel::backgroundColor	/home/viper/projects/RBit/rgridmodel.h	/^    virtual const RColor* backgroundColor(Sint32 row, Sint32 column) const$/;"	f	class:RGridModel	access:public	signature:(Sint32 row, Sint32 column) const
RGridModel::columnCount	/home/viper/projects/RBit/rgridmodel.h	/^    virtual Uint32 columnCount() const = 0;$/;"	p	class:RGridModel	access:public	signature:() const
RGridModel::dataType	/home/viper/projects/RBit/rgridmodel.h	/^    virtual RModelDataTypeBase* dataType(Sint32 column) $/;"	f	class:RGridModel	access:public	signature:(Sint32 column)
RGridModel::emitColumnsAboutToBeInserted	/home/viper/projects/RBit/rgridmodel.cpp	/^void RGridModel::emitColumnsAboutToBeInserted(Sint32 firstColumn, Sint32 lastColumn)$/;"	f	class:RGridModel	signature:(Sint32 firstColumn, Sint32 lastColumn)
RGridModel::emitColumnsAboutToBeInserted	/home/viper/projects/RBit/rgridmodel.h	/^    void emitColumnsAboutToBeInserted(Sint32 firstColumn, Sint32 lastColumn);$/;"	p	class:RGridModel	access:protected	signature:(Sint32 firstColumn, Sint32 lastColumn)
RGridModel::emitColumnsAboutToBeRemoved	/home/viper/projects/RBit/rgridmodel.cpp	/^void RGridModel::emitColumnsAboutToBeRemoved(Sint32 firstColumn, Sint32 lastColumn)$/;"	f	class:RGridModel	signature:(Sint32 firstColumn, Sint32 lastColumn)
RGridModel::emitColumnsAboutToBeRemoved	/home/viper/projects/RBit/rgridmodel.h	/^    void emitColumnsAboutToBeRemoved(Sint32 firstColumn, Sint32 lastColumn);$/;"	p	class:RGridModel	access:protected	signature:(Sint32 firstColumn, Sint32 lastColumn)
RGridModel::emitColumnsInserted	/home/viper/projects/RBit/rgridmodel.cpp	/^void RGridModel::emitColumnsInserted(Sint32 firstColumn, Sint32 lastColumn)$/;"	f	class:RGridModel	signature:(Sint32 firstColumn, Sint32 lastColumn)
RGridModel::emitColumnsInserted	/home/viper/projects/RBit/rgridmodel.h	/^    void emitColumnsInserted(Sint32 firstColumn, Sint32 lastColumn);$/;"	p	class:RGridModel	access:protected	signature:(Sint32 firstColumn, Sint32 lastColumn)
RGridModel::emitColumnsRemoved	/home/viper/projects/RBit/rgridmodel.cpp	/^void RGridModel::emitColumnsRemoved(Sint32 firstColumn, Sint32 lastColumn)$/;"	f	class:RGridModel	signature:(Sint32 firstColumn, Sint32 lastColumn)
RGridModel::emitColumnsRemoved	/home/viper/projects/RBit/rgridmodel.h	/^    void emitColumnsRemoved(Sint32 firstColumn, Sint32 lastColumn);$/;"	p	class:RGridModel	access:protected	signature:(Sint32 firstColumn, Sint32 lastColumn)
RGridModel::emitDataChanged	/home/viper/projects/RBit/rgridmodel.cpp	/^void RGridModel::emitDataChanged(Sint32 topLeftRow, Sint32 topLeftColumn, Sint32 bottomRightRow, Sint32 bottomRightColumn)$/;"	f	class:RGridModel	signature:(Sint32 topLeftRow, Sint32 topLeftColumn, Sint32 bottomRightRow, Sint32 bottomRightColumn)
RGridModel::emitDataChanged	/home/viper/projects/RBit/rgridmodel.h	/^    void emitDataChanged(Sint32 topLeftRow, Sint32 topLeftColumn, Sint32 bottomRightRow, Sint32 bottomRightColumn);$/;"	p	class:RGridModel	access:protected	signature:(Sint32 topLeftRow, Sint32 topLeftColumn, Sint32 bottomRightRow, Sint32 bottomRightColumn)
RGridModel::emitLayoutAboutToBeChanged	/home/viper/projects/RBit/rgridmodel.cpp	/^void RGridModel::emitLayoutAboutToBeChanged()$/;"	f	class:RGridModel	signature:()
RGridModel::emitLayoutAboutToBeChanged	/home/viper/projects/RBit/rgridmodel.h	/^    void emitLayoutAboutToBeChanged();$/;"	p	class:RGridModel	access:protected	signature:()
RGridModel::emitLayoutChanged	/home/viper/projects/RBit/rgridmodel.cpp	/^void RGridModel::emitLayoutChanged()$/;"	f	class:RGridModel	signature:()
RGridModel::emitLayoutChanged	/home/viper/projects/RBit/rgridmodel.h	/^    void emitLayoutChanged();$/;"	p	class:RGridModel	access:protected	signature:()
RGridModel::emitModelReset	/home/viper/projects/RBit/rgridmodel.cpp	/^void RGridModel::emitModelReset()$/;"	f	class:RGridModel	signature:()
RGridModel::emitModelReset	/home/viper/projects/RBit/rgridmodel.h	/^    void emitModelReset();$/;"	p	class:RGridModel	access:protected	signature:()
RGridModel::emitRowsAboutToBeInserted	/home/viper/projects/RBit/rgridmodel.cpp	/^void RGridModel::emitRowsAboutToBeInserted(Sint32 firstRow, Sint32 lastRow)$/;"	f	class:RGridModel	signature:(Sint32 firstRow, Sint32 lastRow)
RGridModel::emitRowsAboutToBeInserted	/home/viper/projects/RBit/rgridmodel.h	/^    void emitRowsAboutToBeInserted(Sint32 firstRow, Sint32 lastRow);$/;"	p	class:RGridModel	access:protected	signature:(Sint32 firstRow, Sint32 lastRow)
RGridModel::emitRowsAboutToBeRemoved	/home/viper/projects/RBit/rgridmodel.cpp	/^void RGridModel::emitRowsAboutToBeRemoved(Sint32 firstRow, Sint32 lastRow)$/;"	f	class:RGridModel	signature:(Sint32 firstRow, Sint32 lastRow)
RGridModel::emitRowsAboutToBeRemoved	/home/viper/projects/RBit/rgridmodel.h	/^    void emitRowsAboutToBeRemoved(Sint32 firstRow, Sint32 lastRow);$/;"	p	class:RGridModel	access:protected	signature:(Sint32 firstRow, Sint32 lastRow)
RGridModel::emitRowsInserted	/home/viper/projects/RBit/rgridmodel.cpp	/^void RGridModel::emitRowsInserted(Sint32 firstRow, Sint32 lastRow)$/;"	f	class:RGridModel	signature:(Sint32 firstRow, Sint32 lastRow)
RGridModel::emitRowsInserted	/home/viper/projects/RBit/rgridmodel.h	/^    void emitRowsInserted(Sint32 firstRow, Sint32 lastRow);$/;"	p	class:RGridModel	access:protected	signature:(Sint32 firstRow, Sint32 lastRow)
RGridModel::emitRowsRemoved	/home/viper/projects/RBit/rgridmodel.cpp	/^void RGridModel::emitRowsRemoved(Sint32 firstRow, Sint32 lastRow)$/;"	f	class:RGridModel	signature:(Sint32 firstRow, Sint32 lastRow)
RGridModel::emitRowsRemoved	/home/viper/projects/RBit/rgridmodel.h	/^    void emitRowsRemoved(Sint32 firstRow, Sint32 lastRow);$/;"	p	class:RGridModel	access:protected	signature:(Sint32 firstRow, Sint32 lastRow)
RGridModel::flags	/home/viper/projects/RBit/rgridmodel.h	/^    virtual int flags() { return ItemIsSelectable | ItemIsEditable; }$/;"	f	class:RGridModel	access:public	signature:()
RGridModel::font	/home/viper/projects/RBit/rgridmodel.h	/^    virtual const RFont& font(Sint32 row, Sint32 column) const $/;"	f	class:RGridModel	access:public	signature:(Sint32 row, Sint32 column) const
RGridModel::foregroundColor	/home/viper/projects/RBit/rgridmodel.h	/^    virtual const RColor* foregroundColor(Sint32 row, Sint32 column) const$/;"	f	class:RGridModel	access:public	signature:(Sint32 row, Sint32 column) const
RGridModel::insertColumn	/home/viper/projects/RBit/rgridmodel.h	/^    bool insertColumn(Sint32 column) { return insertColumns(column, 1); }$/;"	f	class:RGridModel	access:public	signature:(Sint32 column)
RGridModel::insertColumns	/home/viper/projects/RBit/rgridmodel.h	/^    virtual bool insertColumns(Sint32 column, Uint32 count)$/;"	f	class:RGridModel	access:public	signature:(Sint32 column, Uint32 count)
RGridModel::insertRow	/home/viper/projects/RBit/rgridmodel.h	/^    bool insertRow(Sint32 row) { return insertRows(row, 1); }$/;"	f	class:RGridModel	access:public	signature:(Sint32 row)
RGridModel::insertRows	/home/viper/projects/RBit/rgridmodel.h	/^    virtual bool insertRows(Sint32 row, Uint32 count) $/;"	f	class:RGridModel	access:public	signature:(Sint32 row, Uint32 count)
RGridModel::isValidIndex	/home/viper/projects/RBit/rgridmodel.h	/^    bool isValidIndex(Sint32 row, Sint32 column) const;$/;"	p	class:RGridModel	access:public	signature:(Sint32 row, Sint32 column) const
RGridModel::isValidIndex	/home/viper/projects/RBit/rgridmodel.h	/^inline bool RGridModel::isValidIndex(Sint32 row, Sint32 column) const$/;"	f	class:RGridModel	signature:(Sint32 row, Sint32 column) const
RGridModel::removeColumn	/home/viper/projects/RBit/rgridmodel.h	/^    bool removeColumn(Sint32 column) $/;"	f	class:RGridModel	access:public	signature:(Sint32 column)
RGridModel::removeColumns	/home/viper/projects/RBit/rgridmodel.h	/^    virtual bool removeColumns(Sint32 column, Uint32 count) $/;"	f	class:RGridModel	access:public	signature:(Sint32 column, Uint32 count)
RGridModel::removeRow	/home/viper/projects/RBit/rgridmodel.h	/^    bool removeRow(Sint32 row) $/;"	f	class:RGridModel	access:public	signature:(Sint32 row)
RGridModel::removeRows	/home/viper/projects/RBit/rgridmodel.h	/^    virtual bool removeRows(Sint32 row, Uint32 count) $/;"	f	class:RGridModel	access:public	signature:(Sint32 row, Uint32 count)
RGridModel::rowCount	/home/viper/projects/RBit/rgridmodel.h	/^    virtual Uint32 rowCount() const = 0;$/;"	p	class:RGridModel	access:public	signature:() const
RGridModel::rowType	/home/viper/projects/RBit/rgridmodel.h	/^	virtual int rowType(Sint32 row)$/;"	f	class:RGridModel	access:public	signature:(Sint32 row)
RGridModel::setBackgroundColor	/home/viper/projects/RBit/rgridmodel.h	/^    virtual bool setBackgroundColor(Sint32 row, Sint32 column, const RColor& color) $/;"	f	class:RGridModel	access:public	signature:(Sint32 row, Sint32 column, const RColor& color)
RGridModel::setDataType	/home/viper/projects/RBit/rgridmodel.h	/^    virtual bool setDataType(Sint32 column, RModelDataTypeBase* type) $/;"	f	class:RGridModel	access:public	signature:(Sint32 column, RModelDataTypeBase* type)
RGridModel::setFlags	/home/viper/projects/RBit/rgridmodel.h	/^    virtual bool setFlags(Sint32 row, Sint32 column) $/;"	f	class:RGridModel	access:public	signature:(Sint32 row, Sint32 column)
RGridModel::setFont	/home/viper/projects/RBit/rgridmodel.h	/^    virtual bool setFont(Sint32 row, Sint32 column, const RFont& font)$/;"	f	class:RGridModel	access:public	signature:(Sint32 row, Sint32 column, const RFont& font)
RGridModel::setForegroundColor	/home/viper/projects/RBit/rgridmodel.h	/^    virtual bool setForegroundColor(Sint32 row, Sint32 column, const RColor& color) $/;"	f	class:RGridModel	access:public	signature:(Sint32 row, Sint32 column, const RColor& color)
RGridModel::setText	/home/viper/projects/RBit/rgridmodel.h	/^    virtual bool setText(Sint32 row, Sint32 column, const char* data) $/;"	f	class:RGridModel	access:public	signature:(Sint32 row, Sint32 column, const char* data)
RGridModel::setTextAlignment	/home/viper/projects/RBit/rgridmodel.h	/^    virtual bool setTextAlignment(Sint32 row, Sint32 column, int alignment) $/;"	f	class:RGridModel	access:public	signature:(Sint32 row, Sint32 column, int alignment)
RGridModel::sort	/home/viper/projects/RBit/rgridmodel.h	/^    virtual void sort(Sint32 column, RBit::SortOrder = RBit::AscendingOrder)$/;"	f	class:RGridModel	access:public	signature:(Sint32 column, RBit::SortOrder = RBit::AscendingOrder)
RGridModel::text	/home/viper/projects/RBit/rgridmodel.h	/^    virtual const char* text(Sint32 row, Sint32 column) const = 0;$/;"	p	class:RGridModel	access:public	signature:(Sint32 row, Sint32 column) const
RGridModel::textAlignment	/home/viper/projects/RBit/rgridmodel.h	/^    virtual int textAlignment(Sint32 row, Sint32 column) const $/;"	f	class:RGridModel	access:public	signature:(Sint32 row, Sint32 column) const
RGridModel::~RGridModel	/home/viper/projects/RBit/rgridmodel.h	/^    virtual ~RGridModel() {};$/;"	f	class:RGridModel	access:public	signature:()
RGridModelObserver	/home/viper/projects/RBit/rgridmodel.h	/^class RGridModelObserver : public RGridModelObserverBase$/;"	c	inherits:RGridModelObserverBase
RGridModelObserverBase	/home/viper/projects/RBit/rgridmodel.h	/^class RGridModelObserverBase : public RObserver<RGridModel>$/;"	c	inherits:RObserver
RGridModelObserverBase::columnsAboutToBeInserted	/home/viper/projects/RBit/rgridmodel.h	/^    virtual void columnsAboutToBeInserted(Sint32 firstColumn, Sint32 lastColumn)$/;"	f	class:RGridModelObserverBase	access:protected	signature:(Sint32 firstColumn, Sint32 lastColumn)
RGridModelObserverBase::columnsAboutToBeRemoved	/home/viper/projects/RBit/rgridmodel.h	/^    virtual void columnsAboutToBeRemoved(Sint32 firstColumn, Sint32 lastColumn)$/;"	f	class:RGridModelObserverBase	access:protected	signature:(Sint32 firstColumn, Sint32 lastColumn)
RGridModelObserverBase::columnsInserted	/home/viper/projects/RBit/rgridmodel.h	/^    virtual void columnsInserted(Sint32 firstColumn, Sint32 lastColumn)$/;"	f	class:RGridModelObserverBase	access:protected	signature:(Sint32 firstColumn, Sint32 lastColumn)
RGridModelObserverBase::columnsRemoved	/home/viper/projects/RBit/rgridmodel.h	/^    virtual void columnsRemoved(Sint32 firstColumn, Sint32 lastColumn)$/;"	f	class:RGridModelObserverBase	access:protected	signature:(Sint32 firstColumn, Sint32 lastColumn)
RGridModelObserverBase::dataChanged	/home/viper/projects/RBit/rgridmodel.h	/^    virtual void dataChanged(Sint32 topRow, Sint32 topColumn, Sint32 bottomRow, Sint32 bottomColumn) $/;"	f	class:RGridModelObserverBase	access:protected	signature:(Sint32 topRow, Sint32 topColumn, Sint32 bottomRow, Sint32 bottomColumn)
RGridModelObserverBase::layoutAboutToBeChanged	/home/viper/projects/RBit/rgridmodel.h	/^    virtual void layoutAboutToBeChanged() {}$/;"	f	class:RGridModelObserverBase	access:protected	signature:()
RGridModelObserverBase::layoutChanged	/home/viper/projects/RBit/rgridmodel.h	/^    virtual void layoutChanged() {}$/;"	f	class:RGridModelObserverBase	access:protected	signature:()
RGridModelObserverBase::modelReset	/home/viper/projects/RBit/rgridmodel.h	/^    virtual void modelReset() {}$/;"	f	class:RGridModelObserverBase	access:protected	signature:()
RGridModelObserverBase::rowsAboutToBeInserted	/home/viper/projects/RBit/rgridmodel.h	/^    virtual void rowsAboutToBeInserted(Sint32 firstRow, Sint32 lastRow) $/;"	f	class:RGridModelObserverBase	access:protected	signature:(Sint32 firstRow, Sint32 lastRow)
RGridModelObserverBase::rowsAboutToBeRemoved	/home/viper/projects/RBit/rgridmodel.h	/^    virtual void rowsAboutToBeRemoved(Sint32 firstRow, Sint32 lastRow)$/;"	f	class:RGridModelObserverBase	access:protected	signature:(Sint32 firstRow, Sint32 lastRow)
RGridModelObserverBase::rowsInserted	/home/viper/projects/RBit/rgridmodel.h	/^    virtual void rowsInserted(Sint32 firstRow, Sint32 lastRow)$/;"	f	class:RGridModelObserverBase	access:protected	signature:(Sint32 firstRow, Sint32 lastRow)
RGridModelObserverBase::rowsRemoved	/home/viper/projects/RBit/rgridmodel.h	/^    virtual void rowsRemoved(Sint32 firstRow, Sint32 lastRow)$/;"	f	class:RGridModelObserverBase	access:protected	signature:(Sint32 firstRow, Sint32 lastRow)
RGridView	/home/viper/projects/RBit/rgridview.cpp	/^RGridView::RGridView(RWidget* parent, RWFlags flags)$/;"	f	class:RGridView	signature:(RWidget* parent, RWFlags flags)
RGridView	/home/viper/projects/RBit/rgridview.h	/^    RGridView(RWidget* parent = 0, RWFlags flags = 0);$/;"	p	class:RGridView	access:public	signature:(RWidget* parent = 0, RWFlags flags = 0)
RGridView	/home/viper/projects/RBit/rgridview.h	/^    RGridView(const RGridView&);$/;"	p	class:RGridView	access:private	signature:(const RGridView&)
RGridView	/home/viper/projects/RBit/rgridview.h	/^class RBIT_CORE_EXPORT RGridView : public RScrollArea,$/;"	c	inherits:RScrollArea,RSubject,RGridModel::Observer
RGridView::BottomLine	/home/viper/projects/RBit/rgridview.h	/^        BottomLine              = 0x10,$/;"	e	enum:RGridView::LineDecorationFlags
RGridView::CursorAction	/home/viper/projects/RBit/rgridview.h	/^    enum CursorAction { $/;"	g	class:RGridView	access:protected
RGridView::ExtendedHorizontalLines	/home/viper/projects/RBit/rgridview.h	/^        ExtendedHorizontalLines = 0x08,$/;"	e	enum:RGridView::LineDecorationFlags
RGridView::ExtendedVerticalLines	/home/viper/projects/RBit/rgridview.h	/^        ExtendedVerticalLines   = 0x04,$/;"	e	enum:RGridView::LineDecorationFlags
RGridView::HeaderObserver	/home/viper/projects/RBit/rgridview.h	/^    class HeaderObserver : public RHeaderView::Observer,$/;"	c	class:RGridView	inherits:RHeaderView::Observer,RHeaderModel::Observer	access:private
RGridView::HeaderObserver::HeaderObserver	/home/viper/projects/RBit/rgridview.h	/^        HeaderObserver() : m_grid(0) {}$/;"	f	class:RGridView::HeaderObserver	access:public	signature:()
RGridView::HeaderObserver::m_grid	/home/viper/projects/RBit/rgridview.h	/^        RGridView* m_grid;$/;"	m	class:RGridView::HeaderObserver	access:private
RGridView::HeaderObserver::modelReplaced	/home/viper/projects/RBit/rgridview.cpp	/^void RGridView::HeaderObserver::modelReplaced(RHeaderModel* newModel)$/;"	f	class:RGridView::HeaderObserver	signature:(RHeaderModel* newModel)
RGridView::HeaderObserver::modelReplaced	/home/viper/projects/RBit/rgridview.h	/^        virtual void modelReplaced(RHeaderModel* newModel);        $/;"	p	class:RGridView::HeaderObserver	access:protected	signature:(RHeaderModel* newModel)
RGridView::HeaderObserver::sectionCountChanged	/home/viper/projects/RBit/rgridview.cpp	/^void RGridView::HeaderObserver::sectionCountChanged(Uint32 oldCount, Uint32 newCount)$/;"	f	class:RGridView::HeaderObserver	signature:(Uint32 oldCount, Uint32 newCount)
RGridView::HeaderObserver::sectionCountChanged	/home/viper/projects/RBit/rgridview.h	/^        virtual void sectionCountChanged(Uint32 oldCount, Uint32 newCount);        $/;"	p	class:RGridView::HeaderObserver	access:protected	signature:(Uint32 oldCount, Uint32 newCount)
RGridView::HeaderObserver::sectionPressed	/home/viper/projects/RBit/rgridview.cpp	/^void RGridView::HeaderObserver::sectionPressed(Sint32 section)$/;"	f	class:RGridView::HeaderObserver	signature:(Sint32 section)
RGridView::HeaderObserver::sectionPressed	/home/viper/projects/RBit/rgridview.h	/^        virtual void sectionPressed(Sint32 section);$/;"	p	class:RGridView::HeaderObserver	access:protected	signature:(Sint32 section)
RGridView::HeaderObserver::sectionResized	/home/viper/projects/RBit/rgridview.cpp	/^void RGridView::HeaderObserver::sectionResized(Sint32 section, Sint32 oldSize, Sint32 newSize)$/;"	f	class:RGridView::HeaderObserver	signature:(Sint32 section, Sint32 oldSize, Sint32 newSize)
RGridView::HeaderObserver::sectionResized	/home/viper/projects/RBit/rgridview.h	/^        virtual void sectionResized(Sint32 section, Sint32 oldSize, Sint32 newSize);$/;"	p	class:RGridView::HeaderObserver	access:protected	signature:(Sint32 section, Sint32 oldSize, Sint32 newSize)
RGridView::HeaderObserver::sectionsInserted	/home/viper/projects/RBit/rgridview.cpp	/^void RGridView::HeaderObserver::sectionsInserted(Sint32 firstSection, Sint32 lastSection)$/;"	f	class:RGridView::HeaderObserver	signature:(Sint32 firstSection, Sint32 lastSection)
RGridView::HeaderObserver::sectionsInserted	/home/viper/projects/RBit/rgridview.h	/^        virtual void sectionsInserted(Sint32 firstSection, Sint32 lastSection);$/;"	p	class:RGridView::HeaderObserver	access:protected	signature:(Sint32 firstSection, Sint32 lastSection)
RGridView::HeaderObserver::sectionsRemoved	/home/viper/projects/RBit/rgridview.cpp	/^void RGridView::HeaderObserver::sectionsRemoved(Sint32 firstSection, Sint32 lastSection)$/;"	f	class:RGridView::HeaderObserver	signature:(Sint32 firstSection, Sint32 lastSection)
RGridView::HeaderObserver::sectionsRemoved	/home/viper/projects/RBit/rgridview.h	/^        virtual void sectionsRemoved(Sint32 firstSection, Sint32 lastSection);$/;"	p	class:RGridView::HeaderObserver	access:protected	signature:(Sint32 firstSection, Sint32 lastSection)
RGridView::HeaderObserver::setGrid	/home/viper/projects/RBit/rgridview.h	/^        inline void setGrid(RGridView* grid) { m_grid = grid; }$/;"	f	class:RGridView::HeaderObserver	access:public	signature:(RGridView* grid)
RGridView::HorizontalLines	/home/viper/projects/RBit/rgridview.h	/^        HorizontalLines         = 0x02,        $/;"	e	enum:RGridView::LineDecorationFlags
RGridView::LineDecorationFlags	/home/viper/projects/RBit/rgridview.h	/^    enum LineDecorationFlags {$/;"	g	class:RGridView	access:public
RGridView::MoveDown	/home/viper/projects/RBit/rgridview.h	/^        MoveDown, $/;"	e	enum:RGridView::CursorAction
RGridView::MoveEnd	/home/viper/projects/RBit/rgridview.h	/^        MoveEnd, $/;"	e	enum:RGridView::CursorAction
RGridView::MoveHome	/home/viper/projects/RBit/rgridview.h	/^        MoveHome, $/;"	e	enum:RGridView::CursorAction
RGridView::MoveLeft	/home/viper/projects/RBit/rgridview.h	/^        MoveLeft, $/;"	e	enum:RGridView::CursorAction
RGridView::MoveNext	/home/viper/projects/RBit/rgridview.h	/^        MoveNext, $/;"	e	enum:RGridView::CursorAction
RGridView::MovePageDown	/home/viper/projects/RBit/rgridview.h	/^        MovePageDown,$/;"	e	enum:RGridView::CursorAction
RGridView::MovePageUp	/home/viper/projects/RBit/rgridview.h	/^        MovePageUp, $/;"	e	enum:RGridView::CursorAction
RGridView::MovePrevious	/home/viper/projects/RBit/rgridview.h	/^        MovePrevious $/;"	e	enum:RGridView::CursorAction
RGridView::MoveRight	/home/viper/projects/RBit/rgridview.h	/^        MoveRight,$/;"	e	enum:RGridView::CursorAction
RGridView::MoveUp	/home/viper/projects/RBit/rgridview.h	/^        MoveUp, $/;"	e	enum:RGridView::CursorAction
RGridView::NoLines	/home/viper/projects/RBit/rgridview.h	/^        NoLines = 0$/;"	e	enum:RGridView::LineDecorationFlags
RGridView::NoSelection	/home/viper/projects/RBit/rgridview.h	/^        NoSelection$/;"	e	enum:RGridView::SelectionPolicy
RGridView::RGridView	/home/viper/projects/RBit/rgridview.cpp	/^RGridView::RGridView(RWidget* parent, RWFlags flags)$/;"	f	class:RGridView	signature:(RWidget* parent, RWFlags flags)
RGridView::RGridView	/home/viper/projects/RBit/rgridview.h	/^    RGridView(RWidget* parent = 0, RWFlags flags = 0);$/;"	p	class:RGridView	access:public	signature:(RWidget* parent = 0, RWFlags flags = 0)
RGridView::RGridView	/home/viper/projects/RBit/rgridview.h	/^    RGridView(const RGridView&);$/;"	p	class:RGridView	access:private	signature:(const RGridView&)
RGridView::SelectSingleItem	/home/viper/projects/RBit/rgridview.h	/^        SelectSingleItem,$/;"	e	enum:RGridView::SelectionPolicy
RGridView::SelectSingleRow	/home/viper/projects/RBit/rgridview.h	/^        SelectSingleRow,$/;"	e	enum:RGridView::SelectionPolicy
RGridView::SelectionPolicy	/home/viper/projects/RBit/rgridview.h	/^    enum SelectionPolicy {$/;"	g	class:RGridView	access:public
RGridView::VerticalLines	/home/viper/projects/RBit/rgridview.h	/^        VerticalLines           = 0x01,$/;"	e	enum:RGridView::LineDecorationFlags
RGridView::Viewport	/home/viper/projects/RBit/rgridview.h	/^    class Viewport : public RWidget$/;"	c	class:RGridView	inherits:RWidget	access:protected
RGridView::Viewport::Viewport	/home/viper/projects/RBit/rgridview.h	/^        Viewport(RWidget* parent, RWFlags flags);$/;"	p	class:RGridView::Viewport	access:public	signature:(RWidget* parent, RWFlags flags)
RGridView::Viewport::Viewport	/home/viper/projects/RBit/rgridview.h	/^inline RGridView::Viewport::Viewport(RWidget* parent, RWFlags flags)$/;"	f	class:RGridView::Viewport	signature:(RWidget* parent, RWFlags flags)
RGridView::Viewport::eventMouseDown	/home/viper/projects/RBit/rgridview.cpp	/^void RGridView::Viewport::eventMouseDown(const SDL_MouseButtonEvent& m)$/;"	f	class:RGridView::Viewport	signature:(const SDL_MouseButtonEvent& m)
RGridView::Viewport::eventMouseDown	/home/viper/projects/RBit/rgridview.h	/^        virtual void eventMouseDown(const SDL_MouseButtonEvent&);$/;"	p	class:RGridView::Viewport	access:protected	signature:(const SDL_MouseButtonEvent&)
RGridView::Viewport::eventMouseUp	/home/viper/projects/RBit/rgridview.cpp	/^void RGridView::Viewport::eventMouseUp(const SDL_MouseButtonEvent& m)$/;"	f	class:RGridView::Viewport	signature:(const SDL_MouseButtonEvent& m)
RGridView::Viewport::eventMouseUp	/home/viper/projects/RBit/rgridview.h	/^        virtual void eventMouseUp(const SDL_MouseButtonEvent&);        $/;"	p	class:RGridView::Viewport	access:protected	signature:(const SDL_MouseButtonEvent&)
RGridView::Viewport::setGeometry	/home/viper/projects/RBit/rgridview.cpp	/^void RGridView::Viewport::setGeometry(const RPoint& p, const RSize& s)$/;"	f	class:RGridView::Viewport	signature:(const RPoint& p, const RSize& s)
RGridView::Viewport::setGeometry	/home/viper/projects/RBit/rgridview.h	/^        virtual void setGeometry(const RPoint&, const RSize&);$/;"	p	class:RGridView::Viewport	access:public	signature:(const RPoint&, const RSize&)
RGridView::bottomTextMargin	/home/viper/projects/RBit/rgridview.h	/^    Sint32 bottomTextMargin() const;$/;"	p	class:RGridView	access:public	signature:() const
RGridView::bottomTextMargin	/home/viper/projects/RBit/rgridview.h	/^inline Sint32 RGridView::bottomTextMargin() const$/;"	f	class:RGridView	signature:() const
RGridView::columnAt	/home/viper/projects/RBit/rgridview.h	/^    Sint32 columnAt(Sint16 x) const;$/;"	p	class:RGridView	access:public	signature:(Sint16 x) const
RGridView::columnAt	/home/viper/projects/RBit/rgridview.h	/^inline Sint32 RGridView::columnAt(Sint16 x) const$/;"	f	class:RGridView	signature:(Sint16 x) const
RGridView::columnCountChanged	/home/viper/projects/RBit/rgridview.cpp	/^void RGridView::columnCountChanged(Sint32, Sint32)$/;"	f	class:RGridView	signature:(Sint32, Sint32)
RGridView::columnCountChanged	/home/viper/projects/RBit/rgridview.h	/^    void columnCountChanged(Sint32 oldCount, Sint32 newCount);$/;"	p	class:RGridView	access:protected	signature:(Sint32 oldCount, Sint32 newCount)
RGridView::columnResized	/home/viper/projects/RBit/rgridview.cpp	/^void RGridView::columnResized(Sint32 column, Sint32, Sint32)$/;"	f	class:RGridView	signature:(Sint32 column, Sint32, Sint32)
RGridView::columnResized	/home/viper/projects/RBit/rgridview.h	/^    void columnResized(Sint32 column, Sint32 oldWidth, Sint32 newWidth);$/;"	p	class:RGridView	access:protected	signature:(Sint32 column, Sint32 oldWidth, Sint32 newWidth)
RGridView::columnViewportPosition	/home/viper/projects/RBit/rgridview.h	/^    Sint32 columnViewportPosition(Sint32 column) const;$/;"	p	class:RGridView	access:public	signature:(Sint32 column) const
RGridView::columnViewportPosition	/home/viper/projects/RBit/rgridview.h	/^inline Sint32 RGridView::columnViewportPosition(Sint32 column) const$/;"	f	class:RGridView	signature:(Sint32 column) const
RGridView::columnWidth	/home/viper/projects/RBit/rgridview.h	/^    Uint16 columnWidth(Sint32 column) const;    $/;"	p	class:RGridView	access:public	signature:(Sint32 column) const
RGridView::columnWidth	/home/viper/projects/RBit/rgridview.h	/^inline Uint16 RGridView::columnWidth(Sint32 column) const$/;"	f	class:RGridView	signature:(Sint32 column) const
RGridView::columnsInserted	/home/viper/projects/RBit/rgridview.cpp	/^void RGridView::columnsInserted(Sint32 firstColumn, Sint32 lastColumn)    $/;"	f	class:RGridView	signature:(Sint32 firstColumn, Sint32 lastColumn)
RGridView::columnsInserted	/home/viper/projects/RBit/rgridview.h	/^    virtual void columnsInserted(Sint32 firstColumn, Sint32 lastColumn);    $/;"	p	class:RGridView	access:protected	signature:(Sint32 firstColumn, Sint32 lastColumn)
RGridView::columnsRemoved	/home/viper/projects/RBit/rgridview.cpp	/^void RGridView::columnsRemoved(Sint32 firstColumn, Sint32 lastColumn)$/;"	f	class:RGridView	signature:(Sint32 firstColumn, Sint32 lastColumn)
RGridView::columnsRemoved	/home/viper/projects/RBit/rgridview.h	/^    virtual void columnsRemoved(Sint32 firstColumn, Sint32 lastColumn);    $/;"	p	class:RGridView	access:protected	signature:(Sint32 firstColumn, Sint32 lastColumn)
RGridView::createViewport	/home/viper/projects/RBit/rgridview.cpp	/^RWidget* RGridView::createViewport(RWidget* parent, RWFlags flags)$/;"	f	class:RGridView	signature:(RWidget* parent, RWFlags flags)
RGridView::createViewport	/home/viper/projects/RBit/rgridview.h	/^    virtual RWidget* createViewport(RWidget* parent, RWFlags flags);$/;"	p	class:RGridView	access:protected	signature:(RWidget* parent, RWFlags flags)
RGridView::currentColumn	/home/viper/projects/RBit/rgridview.h	/^    Sint32 currentColumn() const;    $/;"	p	class:RGridView	access:public	signature:() const
RGridView::currentColumn	/home/viper/projects/RBit/rgridview.h	/^inline Sint32 RGridView::currentColumn() const$/;"	f	class:RGridView	signature:() const
RGridView::currentRow	/home/viper/projects/RBit/rgridview.h	/^    Sint32 currentRow() const;$/;"	p	class:RGridView	access:public	signature:() const
RGridView::currentRow	/home/viper/projects/RBit/rgridview.h	/^inline Sint32 RGridView::currentRow() const$/;"	f	class:RGridView	signature:() const
RGridView::dataChanged	/home/viper/projects/RBit/rgridview.cpp	/^void RGridView::dataChanged(Sint32 topLeftRow, Sint32 topLeftColumn, Sint32 bottomRightRow, Sint32 bottomRightColumn)$/;"	f	class:RGridView	signature:(Sint32 topLeftRow, Sint32 topLeftColumn, Sint32 bottomRightRow, Sint32 bottomRightColumn)
RGridView::dataChanged	/home/viper/projects/RBit/rgridview.h	/^    virtual void dataChanged(Sint32 topLeftRow, Sint32 topLeftColumn, Sint32 bottomRightRow, Sint32 bottomRightColumn);$/;"	p	class:RGridView	access:protected	signature:(Sint32 topLeftRow, Sint32 topLeftColumn, Sint32 bottomRightRow, Sint32 bottomRightColumn)
RGridView::emitActivated	/home/viper/projects/RBit/rgridview.cpp	/^void RGridView::emitActivated(Sint32 row, Sint32 column)$/;"	f	class:RGridView	signature:(Sint32 row, Sint32 column)
RGridView::emitActivated	/home/viper/projects/RBit/rgridview.h	/^    void emitActivated(Sint32 row, Sint32 column);$/;"	p	class:RGridView	access:private	signature:(Sint32 row, Sint32 column)
RGridView::emitClicked	/home/viper/projects/RBit/rgridview.cpp	/^void RGridView::emitClicked(Sint32 row, Sint32 column)$/;"	f	class:RGridView	signature:(Sint32 row, Sint32 column)
RGridView::emitClicked	/home/viper/projects/RBit/rgridview.h	/^    void emitClicked(Sint32 row, Sint32 column);$/;"	p	class:RGridView	access:private	signature:(Sint32 row, Sint32 column)
RGridView::emitCurrentColumnChanged	/home/viper/projects/RBit/rgridview.cpp	/^void RGridView::emitCurrentColumnChanged(Sint32 oldColumn, Sint32 newColumn)$/;"	f	class:RGridView	signature:(Sint32 oldColumn, Sint32 newColumn)
RGridView::emitCurrentColumnChanged	/home/viper/projects/RBit/rgridview.h	/^    void emitCurrentColumnChanged(Sint32 oldColumn, Sint32 newColumn);$/;"	p	class:RGridView	access:private	signature:(Sint32 oldColumn, Sint32 newColumn)
RGridView::emitCurrentRowChanged	/home/viper/projects/RBit/rgridview.cpp	/^void RGridView::emitCurrentRowChanged(Sint32 oldRow, Sint32 newRow)$/;"	f	class:RGridView	signature:(Sint32 oldRow, Sint32 newRow)
RGridView::emitCurrentRowChanged	/home/viper/projects/RBit/rgridview.h	/^    void emitCurrentRowChanged(Sint32 oldRow, Sint32 newRow);$/;"	p	class:RGridView	access:private	signature:(Sint32 oldRow, Sint32 newRow)
RGridView::emitDoubleClicked	/home/viper/projects/RBit/rgridview.cpp	/^void RGridView::emitDoubleClicked(Sint32 row, Sint32 column)$/;"	f	class:RGridView	signature:(Sint32 row, Sint32 column)
RGridView::emitDoubleClicked	/home/viper/projects/RBit/rgridview.h	/^    void emitDoubleClicked(Sint32 row, Sint32 column);$/;"	p	class:RGridView	access:private	signature:(Sint32 row, Sint32 column)
RGridView::emitEntered	/home/viper/projects/RBit/rgridview.cpp	/^void RGridView::emitEntered(Sint32 row, Sint32 column)$/;"	f	class:RGridView	signature:(Sint32 row, Sint32 column)
RGridView::emitEntered	/home/viper/projects/RBit/rgridview.h	/^    void emitEntered(Sint32 row, Sint32 column);$/;"	p	class:RGridView	access:private	signature:(Sint32 row, Sint32 column)
RGridView::emitModelReplaced	/home/viper/projects/RBit/rgridview.cpp	/^void RGridView::emitModelReplaced(RGridModel* model) $/;"	f	class:RGridView	signature:(RGridModel* model)
RGridView::emitModelReplaced	/home/viper/projects/RBit/rgridview.h	/^    void emitModelReplaced(RGridModel* model);$/;"	p	class:RGridView	access:private	signature:(RGridModel* model)
RGridView::emitPressed	/home/viper/projects/RBit/rgridview.cpp	/^void RGridView::emitPressed(Sint32 row, Sint32 column)$/;"	f	class:RGridView	signature:(Sint32 row, Sint32 column)
RGridView::emitPressed	/home/viper/projects/RBit/rgridview.h	/^    void emitPressed(Sint32 row, Sint32 column);$/;"	p	class:RGridView	access:private	signature:(Sint32 row, Sint32 column)
RGridView::eventFocusLost	/home/viper/projects/RBit/rgridview.cpp	/^void RGridView::eventFocusLost()$/;"	f	class:RGridView	signature:()
RGridView::eventFocusLost	/home/viper/projects/RBit/rgridview.h	/^    virtual void eventFocusLost();      $/;"	p	class:RGridView	access:protected	signature:()
RGridView::eventFocusSet	/home/viper/projects/RBit/rgridview.cpp	/^void RGridView::eventFocusSet()$/;"	f	class:RGridView	signature:()
RGridView::eventFocusSet	/home/viper/projects/RBit/rgridview.h	/^    virtual void eventFocusSet();$/;"	p	class:RGridView	access:protected	signature:()
RGridView::eventKeyDown	/home/viper/projects/RBit/rgridview.cpp	/^bool RGridView::eventKeyDown(const SDL_keysym& key, bool autoRepeat)$/;"	f	class:RGridView	signature:(const SDL_keysym& key, bool autoRepeat)
RGridView::eventKeyDown	/home/viper/projects/RBit/rgridview.h	/^    virtual bool eventKeyDown(const SDL_keysym& key, bool autoRepeat);$/;"	p	class:RGridView	access:protected	signature:(const SDL_keysym& key, bool autoRepeat)
RGridView::eventMouseDown	/home/viper/projects/RBit/rgridview.cpp	/^void RGridView::eventMouseDown(const SDL_MouseButtonEvent& m)$/;"	f	class:RGridView	signature:(const SDL_MouseButtonEvent& m)
RGridView::eventMouseDown	/home/viper/projects/RBit/rgridview.h	/^    virtual void eventMouseDown(const SDL_MouseButtonEvent&);$/;"	p	class:RGridView	access:protected	signature:(const SDL_MouseButtonEvent&)
RGridView::eventMouseMove	/home/viper/projects/RBit/rgridview.cpp	/^void RGridView::eventMouseMove(const SDL_MouseMotionEvent& m)$/;"	f	class:RGridView	signature:(const SDL_MouseMotionEvent& m)
RGridView::eventMouseMove	/home/viper/projects/RBit/rgridview.h	/^    virtual void eventMouseMove(const SDL_MouseMotionEvent&);$/;"	p	class:RGridView	access:protected	signature:(const SDL_MouseMotionEvent&)
RGridView::eventMouseUp	/home/viper/projects/RBit/rgridview.cpp	/^void RGridView::eventMouseUp(const SDL_MouseButtonEvent& m)$/;"	f	class:RGridView	signature:(const SDL_MouseButtonEvent& m)
RGridView::eventMouseUp	/home/viper/projects/RBit/rgridview.h	/^    virtual void eventMouseUp(const SDL_MouseButtonEvent&);$/;"	p	class:RGridView	access:protected	signature:(const SDL_MouseButtonEvent&)
RGridView::eventShow	/home/viper/projects/RBit/rgridview.cpp	/^void RGridView::eventShow()$/;"	f	class:RGridView	signature:()
RGridView::eventShow	/home/viper/projects/RBit/rgridview.h	/^    virtual void eventShow();    $/;"	p	class:RGridView	access:protected	signature:()
RGridView::horizontalHeader	/home/viper/projects/RBit/rgridview.h	/^    RHeaderView* horizontalHeader() const;$/;"	p	class:RGridView	access:public	signature:() const
RGridView::horizontalHeader	/home/viper/projects/RBit/rgridview.h	/^inline RHeaderView* RGridView::horizontalHeader() const$/;"	f	class:RGridView	signature:() const
RGridView::horizontalHeaderPressed	/home/viper/projects/RBit/rgridview.cpp	/^void RGridView::horizontalHeaderPressed(Sint32 section)$/;"	f	class:RGridView	signature:(Sint32 section)
RGridView::horizontalHeaderPressed	/home/viper/projects/RBit/rgridview.h	/^    virtual void horizontalHeaderPressed(Sint32);$/;"	p	class:RGridView	access:protected	signature:(Sint32)
RGridView::horizontalOffset	/home/viper/projects/RBit/rgridview.h	/^    Sint32 horizontalOffset() const;$/;"	p	class:RGridView	access:protected	signature:() const
RGridView::horizontalOffset	/home/viper/projects/RBit/rgridview.h	/^inline Sint32 RGridView::horizontalOffset() const$/;"	f	class:RGridView	signature:() const
RGridView::horizontalScrollBarAction	/home/viper/projects/RBit/rgridview.cpp	/^void RGridView::horizontalScrollBarAction(RScrollBar::ScrollAction action)$/;"	f	class:RGridView	signature:(RScrollBar::ScrollAction action)
RGridView::horizontalScrollBarAction	/home/viper/projects/RBit/rgridview.h	/^    virtual void horizontalScrollBarAction(RScrollBar::ScrollAction action);$/;"	p	class:RGridView	access:protected	signature:(RScrollBar::ScrollAction action)
RGridView::horizontalStepsPerItem	/home/viper/projects/RBit/rgridview.h	/^    inline Uint32 horizontalStepsPerItem() const { return 64; }$/;"	f	class:RGridView	access:protected	signature:() const
RGridView::isFocusRectEnabled	/home/viper/projects/RBit/rgridview.h	/^    bool isFocusRectEnabled() const;$/;"	p	class:RGridView	access:public	signature:() const
RGridView::isFocusRectEnabled	/home/viper/projects/RBit/rgridview.h	/^inline bool RGridView::isFocusRectEnabled() const$/;"	f	class:RGridView	signature:() const
RGridView::isValidIndex	/home/viper/projects/RBit/rgridview.h	/^    bool isValidIndex(Sint32 row, Sint32 column) const;        $/;"	p	class:RGridView	access:public	signature:(Sint32 row, Sint32 column) const
RGridView::isValidIndex	/home/viper/projects/RBit/rgridview.h	/^inline bool RGridView::isValidIndex(Sint32 row, Sint32 column) const$/;"	f	class:RGridView	signature:(Sint32 row, Sint32 column) const
RGridView::leftTextMargin	/home/viper/projects/RBit/rgridview.h	/^    Sint32 leftTextMargin() const;$/;"	p	class:RGridView	access:public	signature:() const
RGridView::leftTextMargin	/home/viper/projects/RBit/rgridview.h	/^inline Sint32 RGridView::leftTextMargin() const$/;"	f	class:RGridView	signature:() const
RGridView::lineDecoration	/home/viper/projects/RBit/rgridview.h	/^    int lineDecoration() const;$/;"	p	class:RGridView	access:public	signature:() const
RGridView::lineDecoration	/home/viper/projects/RBit/rgridview.h	/^inline int RGridView::lineDecoration() const$/;"	f	class:RGridView	signature:() const
RGridView::m_bottomTextMargin	/home/viper/projects/RBit/rgridview.h	/^           m_bottomTextMargin;$/;"	m	class:RGridView	access:private
RGridView::m_currentColumn	/home/viper/projects/RBit/rgridview.h	/^    Sint32 m_currentColumn;$/;"	m	class:RGridView	access:private
RGridView::m_currentRow	/home/viper/projects/RBit/rgridview.h	/^    Sint32 m_currentRow;$/;"	m	class:RGridView	access:private
RGridView::m_doubleClickDetector	/home/viper/projects/RBit/rgridview.h	/^    RDoubleClickDetector m_doubleClickDetector;$/;"	m	class:RGridView	access:private
RGridView::m_enteredColumn	/home/viper/projects/RBit/rgridview.h	/^    Sint32 m_enteredColumn;$/;"	m	class:RGridView	access:private
RGridView::m_enteredRow	/home/viper/projects/RBit/rgridview.h	/^    Sint32 m_enteredRow;$/;"	m	class:RGridView	access:private
RGridView::m_horizontalHeader	/home/viper/projects/RBit/rgridview.h	/^    RHeaderView *m_horizontalHeader;$/;"	m	class:RGridView	access:private
RGridView::m_horizontalHeaderObserver	/home/viper/projects/RBit/rgridview.h	/^    } m_horizontalHeaderObserver, m_verticalHeaderObserver;$/;"	m	class:RGridView	typeref:class:RGridView::HeaderObserver	access:private
RGridView::m_horizontalStepsPerItem	/home/viper/projects/RBit/rgridview.h	/^    Uint16 m_horizontalStepsPerItem;$/;"	m	class:RGridView	access:private
RGridView::m_leftTextMargin	/home/viper/projects/RBit/rgridview.h	/^           m_leftTextMargin, $/;"	m	class:RGridView	access:private
RGridView::m_pressedColumn	/home/viper/projects/RBit/rgridview.h	/^    Sint32 m_pressedColumn;$/;"	m	class:RGridView	access:private
RGridView::m_pressedRow	/home/viper/projects/RBit/rgridview.h	/^    Sint32 m_pressedRow;$/;"	m	class:RGridView	access:private
RGridView::m_rightTextMargin	/home/viper/projects/RBit/rgridview.h	/^           m_rightTextMargin, $/;"	m	class:RGridView	access:private
RGridView::m_selectionPolicy	/home/viper/projects/RBit/rgridview.h	/^    SelectionPolicy m_selectionPolicy;$/;"	m	class:RGridView	access:private
RGridView::m_topTextMargin	/home/viper/projects/RBit/rgridview.h	/^    Sint16 m_topTextMargin, $/;"	m	class:RGridView	access:private
RGridView::m_verticalHeader	/home/viper/projects/RBit/rgridview.h	/^    RHeaderView *m_verticalHeader;$/;"	m	class:RGridView	access:private
RGridView::m_verticalHeaderObserver	/home/viper/projects/RBit/rgridview.h	/^    } m_horizontalHeaderObserver, m_verticalHeaderObserver;$/;"	m	class:RGridView	typeref:class:RGridView::HeaderObserver	access:private
RGridView::m_verticalStepsPerItem	/home/viper/projects/RBit/rgridview.h	/^    Uint16 m_verticalStepsPerItem;$/;"	m	class:RGridView	access:private
RGridView::model	/home/viper/projects/RBit/rgridview.h	/^    RGridModel* model() const;$/;"	p	class:RGridView	access:public	signature:() const
RGridView::model	/home/viper/projects/RBit/rgridview.h	/^inline RGridModel* RGridView::model() const$/;"	f	class:RGridView	signature:() const
RGridView::modelReset	/home/viper/projects/RBit/rgridview.cpp	/^void RGridView::modelReset()$/;"	f	class:RGridView	signature:()
RGridView::modelReset	/home/viper/projects/RBit/rgridview.h	/^    virtual void modelReset();$/;"	p	class:RGridView	access:protected	signature:()
RGridView::moveCursor	/home/viper/projects/RBit/rgridview.cpp	/^void RGridView::moveCursor(RGridView::CursorAction cursorAction, SDLMod, Sint32& newRow, Sint32& newColumn)$/;"	f	class:RGridView	signature:(RGridView::CursorAction cursorAction, SDLMod, Sint32& newRow, Sint32& newColumn)
RGridView::moveCursor	/home/viper/projects/RBit/rgridview.h	/^    virtual void moveCursor(CursorAction action, SDLMod modifiers, Sint32& newRow, Sint32& newColumn);$/;"	p	class:RGridView	access:protected	signature:(CursorAction action, SDLMod modifiers, Sint32& newRow, Sint32& newColumn)
RGridView::operator =	/home/viper/projects/RBit/rgridview.h	/^    RGridView& operator=(const RGridView&);$/;"	p	class:RGridView	access:private	signature:(const RGridView&)
RGridView::repaintImpl	/home/viper/projects/RBit/rgridview.cpp	/^void RGridView::repaintImpl(const RRect& r)$/;"	f	class:RGridView	signature:(const RRect& r)
RGridView::repaintImpl	/home/viper/projects/RBit/rgridview.h	/^    virtual void repaintImpl(const RRect& r);    $/;"	p	class:RGridView	access:protected	signature:(const RRect& r)
RGridView::rightTextMargin	/home/viper/projects/RBit/rgridview.h	/^    Sint32 rightTextMargin() const;$/;"	p	class:RGridView	access:public	signature:() const
RGridView::rightTextMargin	/home/viper/projects/RBit/rgridview.h	/^inline Sint32 RGridView::rightTextMargin() const$/;"	f	class:RGridView	signature:() const
RGridView::rowAt	/home/viper/projects/RBit/rgridview.h	/^    Sint32 rowAt(Sint16 y) const;$/;"	p	class:RGridView	access:public	signature:(Sint16 y) const
RGridView::rowAt	/home/viper/projects/RBit/rgridview.h	/^inline Sint32 RGridView::rowAt(Sint16 y) const$/;"	f	class:RGridView	signature:(Sint16 y) const
RGridView::rowCountChanged	/home/viper/projects/RBit/rgridview.cpp	/^void RGridView::rowCountChanged(Sint32, Sint32)$/;"	f	class:RGridView	signature:(Sint32, Sint32)
RGridView::rowCountChanged	/home/viper/projects/RBit/rgridview.h	/^    void rowCountChanged(Sint32 oldCount, Sint32 newCount);$/;"	p	class:RGridView	access:protected	signature:(Sint32 oldCount, Sint32 newCount)
RGridView::rowHeight	/home/viper/projects/RBit/rgridview.h	/^    virtual Uint16 rowHeight(Sint32 row) const;$/;"	p	class:RGridView	access:public	signature:(Sint32 row) const
RGridView::rowHeight	/home/viper/projects/RBit/rgridview.h	/^inline Uint16 RGridView::rowHeight(Sint32 row) const$/;"	f	class:RGridView	signature:(Sint32 row) const
RGridView::rowResized	/home/viper/projects/RBit/rgridview.cpp	/^void RGridView::rowResized(Sint32 row, Sint32, Sint32)$/;"	f	class:RGridView	signature:(Sint32 row, Sint32, Sint32)
RGridView::rowResized	/home/viper/projects/RBit/rgridview.h	/^    void rowResized(Sint32 row, Sint32 oldHeight, Sint32 newHeight);$/;"	p	class:RGridView	access:protected	signature:(Sint32 row, Sint32 oldHeight, Sint32 newHeight)
RGridView::rowViewportPosition	/home/viper/projects/RBit/rgridview.h	/^    Sint32 rowViewportPosition(Sint32 row) const;$/;"	p	class:RGridView	access:public	signature:(Sint32 row) const
RGridView::rowViewportPosition	/home/viper/projects/RBit/rgridview.h	/^inline Sint32 RGridView::rowViewportPosition(Sint32 row) const$/;"	f	class:RGridView	signature:(Sint32 row) const
RGridView::rowsInserted	/home/viper/projects/RBit/rgridview.cpp	/^void RGridView::rowsInserted(Sint32 firstRow, Sint32 lastRow)$/;"	f	class:RGridView	signature:(Sint32 firstRow, Sint32 lastRow)
RGridView::rowsInserted	/home/viper/projects/RBit/rgridview.h	/^    virtual void rowsInserted(Sint32 firstRow, Sint32 lastRow);    $/;"	p	class:RGridView	access:protected	signature:(Sint32 firstRow, Sint32 lastRow)
RGridView::rowsRemoved	/home/viper/projects/RBit/rgridview.cpp	/^void RGridView::rowsRemoved(Sint32 firstRow, Sint32 lastRow)$/;"	f	class:RGridView	signature:(Sint32 firstRow, Sint32 lastRow)
RGridView::rowsRemoved	/home/viper/projects/RBit/rgridview.h	/^    virtual void rowsRemoved(Sint32 firstRow, Sint32 lastRow);    $/;"	p	class:RGridView	access:protected	signature:(Sint32 firstRow, Sint32 lastRow)
RGridView::scrollContentsBy	/home/viper/projects/RBit/rgridview.cpp	/^void RGridView::scrollContentsBy(Sint32 dx, Sint32 dy)$/;"	f	class:RGridView	signature:(Sint32 dx, Sint32 dy)
RGridView::scrollContentsBy	/home/viper/projects/RBit/rgridview.h	/^    void scrollContentsBy(Sint32 dx, Sint32 dy);$/;"	p	class:RGridView	access:protected	signature:(Sint32 dx, Sint32 dy)
RGridView::scrollTo	/home/viper/projects/RBit/rgridview.cpp	/^void RGridView::scrollTo(Sint32 row, Sint32 column)$/;"	f	class:RGridView	signature:(Sint32 row, Sint32 column)
RGridView::scrollTo	/home/viper/projects/RBit/rgridview.h	/^    virtual void scrollTo(Sint32 row, Sint32 column);$/;"	p	class:RGridView	access:public	signature:(Sint32 row, Sint32 column)
RGridView::selectionInvisibleWhenNotInFocus	/home/viper/projects/RBit/rgridview.h	/^    bool selectionInvisibleWhenNotInFocus() const;$/;"	p	class:RGridView	access:public	signature:() const
RGridView::selectionInvisibleWhenNotInFocus	/home/viper/projects/RBit/rgridview.h	/^inline bool RGridView::selectionInvisibleWhenNotInFocus() const$/;"	f	class:RGridView	signature:() const
RGridView::selectionPolicy	/home/viper/projects/RBit/rgridview.h	/^    SelectionPolicy selectionPolicy() const;$/;"	p	class:RGridView	access:public	signature:() const
RGridView::selectionPolicy	/home/viper/projects/RBit/rgridview.h	/^inline RGridView::SelectionPolicy RGridView::selectionPolicy() const$/;"	f	class:RGridView	signature:() const
RGridView::setCurrentColumn	/home/viper/projects/RBit/rgridview.cpp	/^void RGridView::setCurrentColumn(Sint32 column)$/;"	f	class:RGridView	signature:(Sint32 column)
RGridView::setCurrentColumn	/home/viper/projects/RBit/rgridview.h	/^    void setCurrentColumn(Sint32 column);$/;"	p	class:RGridView	access:public	signature:(Sint32 column)
RGridView::setCurrentIndex	/home/viper/projects/RBit/rgridview.h	/^    void setCurrentIndex(Sint32 row, Sint32 column);$/;"	p	class:RGridView	access:protected	signature:(Sint32 row, Sint32 column)
RGridView::setCurrentIndex	/home/viper/projects/RBit/rgridview.h	/^inline void RGridView::setCurrentIndex(Sint32 row, Sint32 column)$/;"	f	class:RGridView	signature:(Sint32 row, Sint32 column)
RGridView::setCurrentRow	/home/viper/projects/RBit/rgridview.cpp	/^void RGridView::setCurrentRow(Sint32 row)$/;"	f	class:RGridView	signature:(Sint32 row)
RGridView::setCurrentRow	/home/viper/projects/RBit/rgridview.h	/^    void setCurrentRow(Sint32 row);$/;"	p	class:RGridView	access:public	signature:(Sint32 row)
RGridView::setFocusRectEnabled	/home/viper/projects/RBit/rgridview.h	/^    void setFocusRectEnabled(bool enabled);$/;"	p	class:RGridView	access:public	signature:(bool enabled)
RGridView::setFocusRectEnabled	/home/viper/projects/RBit/rgridview.h	/^inline void RGridView::setFocusRectEnabled(bool enabled)$/;"	f	class:RGridView	signature:(bool enabled)
RGridView::setGeometry	/home/viper/projects/RBit/rgridview.cpp	/^void RGridView::setGeometry(const RPoint& p, const RSize& s)$/;"	f	class:RGridView	signature:(const RPoint& p, const RSize& s)
RGridView::setGeometry	/home/viper/projects/RBit/rgridview.h	/^    virtual void setGeometry(const RPoint&, const RSize&);$/;"	p	class:RGridView	access:public	signature:(const RPoint&, const RSize&)
RGridView::setHorizontalHeader	/home/viper/projects/RBit/rgridview.cpp	/^void RGridView::setHorizontalHeader(RHeaderView* header)$/;"	f	class:RGridView	signature:(RHeaderView* header)
RGridView::setHorizontalHeader	/home/viper/projects/RBit/rgridview.h	/^    void setHorizontalHeader(RHeaderView* header);$/;"	p	class:RGridView	access:protected	signature:(RHeaderView* header)
RGridView::setHorizontalStepsPerItem	/home/viper/projects/RBit/rgridview.cpp	/^void RGridView::setHorizontalStepsPerItem(Uint32 steps)$/;"	f	class:RGridView	signature:(Uint32 steps)
RGridView::setHorizontalStepsPerItem	/home/viper/projects/RBit/rgridview.h	/^    void setHorizontalStepsPerItem(Uint32 steps);$/;"	p	class:RGridView	access:protected	signature:(Uint32 steps)
RGridView::setLineDecoration	/home/viper/projects/RBit/rgridview.h	/^    void setLineDecoration(int flags);$/;"	p	class:RGridView	access:public	signature:(int flags)
RGridView::setLineDecoration	/home/viper/projects/RBit/rgridview.h	/^inline void RGridView::setLineDecoration(int flags)$/;"	f	class:RGridView	signature:(int flags)
RGridView::setModel	/home/viper/projects/RBit/rgridview.cpp	/^void RGridView::setModel(RGridModel* m)$/;"	f	class:RGridView	signature:(RGridModel* m)
RGridView::setModel	/home/viper/projects/RBit/rgridview.h	/^    virtual void setModel(RGridModel* model);$/;"	p	class:RGridView	access:public	signature:(RGridModel* model)
RGridView::setSelectionInvisibleWhenNotInFocus	/home/viper/projects/RBit/rgridview.h	/^    void setSelectionInvisibleWhenNotInFocus(bool invisible);$/;"	p	class:RGridView	access:public	signature:(bool invisible)
RGridView::setSelectionInvisibleWhenNotInFocus	/home/viper/projects/RBit/rgridview.h	/^inline void RGridView::setSelectionInvisibleWhenNotInFocus(bool invisible)$/;"	f	class:RGridView	signature:(bool invisible)
RGridView::setSelectionPolicy	/home/viper/projects/RBit/rgridview.h	/^    void setSelectionPolicy(SelectionPolicy policy);$/;"	p	class:RGridView	access:public	signature:(SelectionPolicy policy)
RGridView::setSelectionPolicy	/home/viper/projects/RBit/rgridview.h	/^inline void RGridView::setSelectionPolicy(RGridView::SelectionPolicy policy)$/;"	f	class:RGridView	signature:(RGridView::SelectionPolicy policy)
RGridView::setTabKeyNavigation	/home/viper/projects/RBit/rgridview.h	/^    void setTabKeyNavigation(bool enable);$/;"	p	class:RGridView	access:public	signature:(bool enable)
RGridView::setTabKeyNavigation	/home/viper/projects/RBit/rgridview.h	/^inline void RGridView::setTabKeyNavigation(bool enable)$/;"	f	class:RGridView	signature:(bool enable)
RGridView::setTextMargins	/home/viper/projects/RBit/rgridview.h	/^    void setTextMargins(Sint16 left, Sint16 top, Sint16 right, Sint16 bottom);$/;"	p	class:RGridView	access:public	signature:(Sint16 left, Sint16 top, Sint16 right, Sint16 bottom)
RGridView::setTextMargins	/home/viper/projects/RBit/rgridview.h	/^inline void RGridView::setTextMargins(Sint16 left, Sint16 top, Sint16 right, Sint16 bottom)$/;"	f	class:RGridView	signature:(Sint16 left, Sint16 top, Sint16 right, Sint16 bottom)
RGridView::setVerticalHeader	/home/viper/projects/RBit/rgridview.cpp	/^void RGridView::setVerticalHeader(RHeaderView* header)$/;"	f	class:RGridView	signature:(RHeaderView* header)
RGridView::setVerticalHeader	/home/viper/projects/RBit/rgridview.h	/^    void setVerticalHeader(RHeaderView* header);$/;"	p	class:RGridView	access:protected	signature:(RHeaderView* header)
RGridView::setVerticalStepsPerItem	/home/viper/projects/RBit/rgridview.cpp	/^void RGridView::setVerticalStepsPerItem(Uint32 steps)$/;"	f	class:RGridView	signature:(Uint32 steps)
RGridView::setVerticalStepsPerItem	/home/viper/projects/RBit/rgridview.h	/^    void setVerticalStepsPerItem(Uint32 steps);$/;"	p	class:RGridView	access:protected	signature:(Uint32 steps)
RGridView::sortByColumn	/home/viper/projects/RBit/rgridview.cpp	/^void RGridView::sortByColumn(Sint32 column)$/;"	f	class:RGridView	signature:(Sint32 column)
RGridView::sortByColumn	/home/viper/projects/RBit/rgridview.h	/^    void sortByColumn(Sint32 column);$/;"	p	class:RGridView	access:public	signature:(Sint32 column)
RGridView::tabKeyNavigation	/home/viper/projects/RBit/rgridview.h	/^    bool tabKeyNavigation() const;$/;"	p	class:RGridView	access:public	signature:() const
RGridView::tabKeyNavigation	/home/viper/projects/RBit/rgridview.h	/^inline bool RGridView::tabKeyNavigation() const$/;"	f	class:RGridView	signature:() const
RGridView::topTextMargin	/home/viper/projects/RBit/rgridview.h	/^    Sint32 topTextMargin() const;$/;"	p	class:RGridView	access:public	signature:() const
RGridView::topTextMargin	/home/viper/projects/RBit/rgridview.h	/^inline Sint32 RGridView::topTextMargin() const$/;"	f	class:RGridView	signature:() const
RGridView::updateGeometries	/home/viper/projects/RBit/rgridview.cpp	/^void RGridView::updateGeometries()$/;"	f	class:RGridView	signature:()
RGridView::updateGeometries	/home/viper/projects/RBit/rgridview.h	/^    void updateGeometries();$/;"	p	class:RGridView	access:protected	signature:()
RGridView::updateHorizontalScrollbar	/home/viper/projects/RBit/rgridview.cpp	/^void RGridView::updateHorizontalScrollbar()$/;"	f	class:RGridView	signature:()
RGridView::updateHorizontalScrollbar	/home/viper/projects/RBit/rgridview.h	/^    void updateHorizontalScrollbar();$/;"	p	class:RGridView	access:private	signature:()
RGridView::updateVerticalScrollbar	/home/viper/projects/RBit/rgridview.cpp	/^void RGridView::updateVerticalScrollbar()$/;"	f	class:RGridView	signature:()
RGridView::updateVerticalScrollbar	/home/viper/projects/RBit/rgridview.h	/^    void updateVerticalScrollbar();$/;"	p	class:RGridView	access:private	signature:()
RGridView::verticalHeader	/home/viper/projects/RBit/rgridview.h	/^    RHeaderView* verticalHeader() const;$/;"	p	class:RGridView	access:public	signature:() const
RGridView::verticalHeader	/home/viper/projects/RBit/rgridview.h	/^inline RHeaderView* RGridView::verticalHeader() const$/;"	f	class:RGridView	signature:() const
RGridView::verticalHeaderPressed	/home/viper/projects/RBit/rgridview.cpp	/^void RGridView::verticalHeaderPressed(Sint32 section)$/;"	f	class:RGridView	signature:(Sint32 section)
RGridView::verticalHeaderPressed	/home/viper/projects/RBit/rgridview.h	/^    virtual void verticalHeaderPressed(Sint32);$/;"	p	class:RGridView	access:protected	signature:(Sint32)
RGridView::verticalOffset	/home/viper/projects/RBit/rgridview.h	/^    Sint32 verticalOffset() const;$/;"	p	class:RGridView	access:protected	signature:() const
RGridView::verticalOffset	/home/viper/projects/RBit/rgridview.h	/^inline Sint32 RGridView::verticalOffset() const$/;"	f	class:RGridView	signature:() const
RGridView::verticalScrollBarAction	/home/viper/projects/RBit/rgridview.cpp	/^void RGridView::verticalScrollBarAction(RScrollBar::ScrollAction action)$/;"	f	class:RGridView	signature:(RScrollBar::ScrollAction action)
RGridView::verticalScrollBarAction	/home/viper/projects/RBit/rgridview.h	/^    virtual void verticalScrollBarAction(RScrollBar::ScrollAction action);$/;"	p	class:RGridView	access:protected	signature:(RScrollBar::ScrollAction action)
RGridView::verticalStepsPerItem	/home/viper/projects/RBit/rgridview.h	/^    inline Uint32 verticalStepsPerItem() const { return 64; }$/;"	f	class:RGridView	access:protected	signature:() const
RGridView::visualRect	/home/viper/projects/RBit/rgridview.cpp	/^RRect RGridView::visualRect(Sint32 row, Sint32 column) const$/;"	f	class:RGridView	signature:(Sint32 row, Sint32 column) const
RGridView::visualRect	/home/viper/projects/RBit/rgridview.h	/^    RRect visualRect(Sint32 row, Sint32 column) const;$/;"	p	class:RGridView	access:public	signature:(Sint32 row, Sint32 column) const
RGridViewObserver	/home/viper/projects/RBit/rgridview.h	/^class RGridViewObserver : public RObserver<RGridView>$/;"	c	inherits:RObserver
RGridViewObserver::activated	/home/viper/projects/RBit/rgridview.h	/^    virtual void activated(Sint32 row, Sint32 column)$/;"	f	class:RGridViewObserver	access:public	signature:(Sint32 row, Sint32 column)
RGridViewObserver::clicked	/home/viper/projects/RBit/rgridview.h	/^    virtual void clicked(Sint32 row, Sint32 column)$/;"	f	class:RGridViewObserver	access:public	signature:(Sint32 row, Sint32 column)
RGridViewObserver::currentColumnChanged	/home/viper/projects/RBit/rgridview.h	/^    virtual void currentColumnChanged(Sint32 oldColumn, Sint32 newColumn)$/;"	f	class:RGridViewObserver	access:public	signature:(Sint32 oldColumn, Sint32 newColumn)
RGridViewObserver::currentRowChanged	/home/viper/projects/RBit/rgridview.h	/^    virtual void currentRowChanged(Sint32 oldRow, Sint32 newRow) $/;"	f	class:RGridViewObserver	access:public	signature:(Sint32 oldRow, Sint32 newRow)
RGridViewObserver::doubleClicked	/home/viper/projects/RBit/rgridview.h	/^    virtual void doubleClicked(Sint32 row, Sint32 column)$/;"	f	class:RGridViewObserver	access:public	signature:(Sint32 row, Sint32 column)
RGridViewObserver::entered	/home/viper/projects/RBit/rgridview.h	/^    virtual void entered(Sint32 row, Sint32 column)$/;"	f	class:RGridViewObserver	access:public	signature:(Sint32 row, Sint32 column)
RGridViewObserver::modelReplaced	/home/viper/projects/RBit/rgridview.h	/^    virtual void modelReplaced(RGridModel* model) $/;"	f	class:RGridViewObserver	access:public	signature:(RGridModel* model)
RGridViewObserver::pressed	/home/viper/projects/RBit/rgridview.h	/^    virtual void pressed(Sint32 row, Sint32 column)$/;"	f	class:RGridViewObserver	access:public	signature:(Sint32 row, Sint32 column)
RHEADER_MODEL	/home/viper/projects/RBit/rheadermodel.h	2;"	d
RHEADER_VIEW	/home/viper/projects/RBit/rheaderview.h	2;"	d
RHeaderModel	/home/viper/projects/RBit/rheadermodel.h	/^class RBIT_CORE_EXPORT RHeaderModel : public RSubject<RHeaderModel>$/;"	c	inherits:RSubject
RHeaderModel::backgroundColor	/home/viper/projects/RBit/rheadermodel.h	/^    virtual const RColor* backgroundColor(Sint32 section) const$/;"	f	class:RHeaderModel	access:public	signature:(Sint32 section) const
RHeaderModel::darkColor	/home/viper/projects/RBit/rheadermodel.h	/^    virtual const RColor* darkColor(Sint32 section) const$/;"	f	class:RHeaderModel	access:public	signature:(Sint32 section) const
RHeaderModel::emitDataChanged	/home/viper/projects/RBit/rheadermodel.cpp	/^void RHeaderModel::emitDataChanged(Sint32 firstSection, Sint32 lastSection)$/;"	f	class:RHeaderModel	signature:(Sint32 firstSection, Sint32 lastSection)
RHeaderModel::emitDataChanged	/home/viper/projects/RBit/rheadermodel.h	/^    void emitDataChanged(Sint32 firstSection, Sint32 lastSection);$/;"	p	class:RHeaderModel	access:protected	signature:(Sint32 firstSection, Sint32 lastSection)
RHeaderModel::emitModelReset	/home/viper/projects/RBit/rheadermodel.cpp	/^void RHeaderModel::emitModelReset()$/;"	f	class:RHeaderModel	signature:()
RHeaderModel::emitModelReset	/home/viper/projects/RBit/rheadermodel.h	/^    void emitModelReset();$/;"	p	class:RHeaderModel	access:protected	signature:()
RHeaderModel::emitSectionsAboutToBeInserted	/home/viper/projects/RBit/rheadermodel.cpp	/^void RHeaderModel::emitSectionsAboutToBeInserted(Sint32 logicalFirst, Sint32 logicalLast)$/;"	f	class:RHeaderModel	signature:(Sint32 logicalFirst, Sint32 logicalLast)
RHeaderModel::emitSectionsAboutToBeInserted	/home/viper/projects/RBit/rheadermodel.h	/^    void emitSectionsAboutToBeInserted(Sint32 firstSection, Sint32 lastSection);$/;"	p	class:RHeaderModel	access:protected	signature:(Sint32 firstSection, Sint32 lastSection)
RHeaderModel::emitSectionsAboutToBeRemoved	/home/viper/projects/RBit/rheadermodel.cpp	/^void RHeaderModel::emitSectionsAboutToBeRemoved(Sint32 first, Sint32 last)$/;"	f	class:RHeaderModel	signature:(Sint32 first, Sint32 last)
RHeaderModel::emitSectionsAboutToBeRemoved	/home/viper/projects/RBit/rheadermodel.h	/^    void emitSectionsAboutToBeRemoved(Sint32 firstSection, Sint32 lastSection);$/;"	p	class:RHeaderModel	access:protected	signature:(Sint32 firstSection, Sint32 lastSection)
RHeaderModel::emitSectionsInserted	/home/viper/projects/RBit/rheadermodel.cpp	/^void RHeaderModel::emitSectionsInserted(Sint32 logicalFirst, Sint32 logicalLast)$/;"	f	class:RHeaderModel	signature:(Sint32 logicalFirst, Sint32 logicalLast)
RHeaderModel::emitSectionsInserted	/home/viper/projects/RBit/rheadermodel.h	/^    void emitSectionsInserted(Sint32 firstSection, Sint32 lastSection);$/;"	p	class:RHeaderModel	access:protected	signature:(Sint32 firstSection, Sint32 lastSection)
RHeaderModel::emitSectionsRemoved	/home/viper/projects/RBit/rheadermodel.cpp	/^void RHeaderModel::emitSectionsRemoved(Sint32 first, Sint32 last)$/;"	f	class:RHeaderModel	signature:(Sint32 first, Sint32 last)
RHeaderModel::emitSectionsRemoved	/home/viper/projects/RBit/rheadermodel.h	/^    void emitSectionsRemoved(Sint32 firstSection, Sint32 lastSection);$/;"	p	class:RHeaderModel	access:protected	signature:(Sint32 firstSection, Sint32 lastSection)
RHeaderModel::font	/home/viper/projects/RBit/rheadermodel.h	/^    virtual const RFont& font(Sint32 section) const $/;"	f	class:RHeaderModel	access:public	signature:(Sint32 section) const
RHeaderModel::foregroundColor	/home/viper/projects/RBit/rheadermodel.h	/^    virtual const RColor* foregroundColor(Sint32 section) const$/;"	f	class:RHeaderModel	access:public	signature:(Sint32 section) const
RHeaderModel::insertSection	/home/viper/projects/RBit/rheadermodel.h	/^    bool insertSection(Sint32 section) $/;"	f	class:RHeaderModel	access:public	signature:(Sint32 section)
RHeaderModel::insertSections	/home/viper/projects/RBit/rheadermodel.h	/^    virtual bool insertSections(Sint32 section, Uint32 count) $/;"	f	class:RHeaderModel	access:public	signature:(Sint32 section, Uint32 count)
RHeaderModel::lightColor	/home/viper/projects/RBit/rheadermodel.h	/^    virtual const RColor* lightColor(Sint32 section) const$/;"	f	class:RHeaderModel	access:public	signature:(Sint32 section) const
RHeaderModel::removeSection	/home/viper/projects/RBit/rheadermodel.h	/^    bool removeSection(Sint32 section) $/;"	f	class:RHeaderModel	access:public	signature:(Sint32 section)
RHeaderModel::removeSections	/home/viper/projects/RBit/rheadermodel.h	/^    virtual bool removeSections(Sint32 section, Uint32 count) $/;"	f	class:RHeaderModel	access:public	signature:(Sint32 section, Uint32 count)
RHeaderModel::sectionCount	/home/viper/projects/RBit/rheadermodel.h	/^    virtual Uint32 sectionCount() const = 0;$/;"	p	class:RHeaderModel	access:public	signature:() const
RHeaderModel::setBackgroundColor	/home/viper/projects/RBit/rheadermodel.h	/^    virtual bool setBackgroundColor(Sint32 section, const RColor& color) $/;"	f	class:RHeaderModel	access:public	signature:(Sint32 section, const RColor& color)
RHeaderModel::setDarkColor	/home/viper/projects/RBit/rheadermodel.h	/^    virtual bool setDarkColor(Sint32 section, const RColor& color) $/;"	f	class:RHeaderModel	access:public	signature:(Sint32 section, const RColor& color)
RHeaderModel::setFont	/home/viper/projects/RBit/rheadermodel.h	/^    virtual bool setFont(Sint32 section, const RFont& font) $/;"	f	class:RHeaderModel	access:public	signature:(Sint32 section, const RFont& font)
RHeaderModel::setForegroundColor	/home/viper/projects/RBit/rheadermodel.h	/^    virtual bool setForegroundColor(Sint32 section, const RColor& color) $/;"	f	class:RHeaderModel	access:public	signature:(Sint32 section, const RColor& color)
RHeaderModel::setLightColor	/home/viper/projects/RBit/rheadermodel.h	/^    virtual bool setLightColor(Sint32 section, const RColor& color) $/;"	f	class:RHeaderModel	access:public	signature:(Sint32 section, const RColor& color)
RHeaderModel::setText	/home/viper/projects/RBit/rheadermodel.h	/^    virtual bool setText(Sint32 section, const char* data) $/;"	f	class:RHeaderModel	access:public	signature:(Sint32 section, const char* data)
RHeaderModel::setTextAlignment	/home/viper/projects/RBit/rheadermodel.h	/^    virtual bool setTextAlignment(Sint32 section, int alignment) $/;"	f	class:RHeaderModel	access:public	signature:(Sint32 section, int alignment)
RHeaderModel::text	/home/viper/projects/RBit/rheadermodel.h	/^    virtual const char* text(Sint32 section) const = 0;$/;"	p	class:RHeaderModel	access:public	signature:(Sint32 section) const
RHeaderModel::textAlignment	/home/viper/projects/RBit/rheadermodel.h	/^    virtual int textAlignment(Sint32 section) const $/;"	f	class:RHeaderModel	access:public	signature:(Sint32 section) const
RHeaderModel::~RHeaderModel	/home/viper/projects/RBit/rheadermodel.h	/^    virtual ~RHeaderModel() {}$/;"	f	class:RHeaderModel	access:public	signature:()
RHeaderModelObserver	/home/viper/projects/RBit/rheadermodel.h	/^class RHeaderModelObserver : public RObserver<RHeaderModel>$/;"	c	inherits:RObserver
RHeaderModelObserver::dataChanged	/home/viper/projects/RBit/rheadermodel.h	/^    virtual void dataChanged(Sint32 firstSection, Sint32 lastSection) $/;"	f	class:RHeaderModelObserver	access:protected	signature:(Sint32 firstSection, Sint32 lastSection)
RHeaderModelObserver::modelReset	/home/viper/projects/RBit/rheadermodel.h	/^    virtual void modelReset() {}$/;"	f	class:RHeaderModelObserver	access:protected	signature:()
RHeaderModelObserver::sectionsAboutToBeInserted	/home/viper/projects/RBit/rheadermodel.h	/^    virtual void sectionsAboutToBeInserted(Sint32 firstSection, Sint32 lastSection)$/;"	f	class:RHeaderModelObserver	access:protected	signature:(Sint32 firstSection, Sint32 lastSection)
RHeaderModelObserver::sectionsAboutToBeRemoved	/home/viper/projects/RBit/rheadermodel.h	/^    virtual void sectionsAboutToBeRemoved(Sint32 firstSection, Sint32 lastSection)$/;"	f	class:RHeaderModelObserver	access:protected	signature:(Sint32 firstSection, Sint32 lastSection)
RHeaderModelObserver::sectionsInserted	/home/viper/projects/RBit/rheadermodel.h	/^    virtual void sectionsInserted(Sint32 firstSection, Sint32 lastSection)$/;"	f	class:RHeaderModelObserver	access:protected	signature:(Sint32 firstSection, Sint32 lastSection)
RHeaderModelObserver::sectionsRemoved	/home/viper/projects/RBit/rheadermodel.h	/^    virtual void sectionsRemoved(Sint32 firstSection, Sint32 lastSection)$/;"	f	class:RHeaderModelObserver	access:protected	signature:(Sint32 firstSection, Sint32 lastSection)
RHeaderView	/home/viper/projects/RBit/rheaderview.cpp	/^RHeaderView::RHeaderView(RBit::Orientation orientation, RWidget* parent, RWFlags flags)$/;"	f	class:RHeaderView	signature:(RBit::Orientation orientation, RWidget* parent, RWFlags flags)
RHeaderView	/home/viper/projects/RBit/rheaderview.h	/^    RHeaderView(RBit::Orientation orientation, RWidget* parent = 0, RWFlags flags = 0);$/;"	p	class:RHeaderView	access:public	signature:(RBit::Orientation orientation, RWidget* parent = 0, RWFlags flags = 0)
RHeaderView	/home/viper/projects/RBit/rheaderview.h	/^    RHeaderView(const RHeaderView&);$/;"	p	class:RHeaderView	access:private	signature:(const RHeaderView&)
RHeaderView	/home/viper/projects/RBit/rheaderview.h	/^class RBIT_CORE_EXPORT RHeaderView : public RWidget,                                     $/;"	c	inherits:RWidget,RSubject,RHeaderModel::Observer
RHeaderView::Custom	/home/viper/projects/RBit/rheaderview.h	/^        Custom$/;"	e	enum:RHeaderView::ResizeMode
RHeaderView::HeaderSection	/home/viper/projects/RBit/rheaderview.h	/^    struct HeaderSection {$/;"	s	class:RHeaderView	access:private
RHeaderView::HeaderSection::mode	/home/viper/projects/RBit/rheaderview.h	/^        ResizeMode mode;$/;"	m	struct:RHeaderView::HeaderSection	access:public
RHeaderView::HeaderSection::operator >	/home/viper/projects/RBit/rheaderview.h	/^        inline bool operator>(Sint32 position) const $/;"	f	struct:RHeaderView::HeaderSection	access:public	signature:(Sint32 position) const
RHeaderView::HeaderSection::position	/home/viper/projects/RBit/rheaderview.h	/^        Sint32 position;   $/;"	m	struct:RHeaderView::HeaderSection	access:public
RHeaderView::HeaderSections	/home/viper/projects/RBit/rheaderview.h	/^    typedef std::vector<HeaderSection> HeaderSections;$/;"	t	class:RHeaderView	access:private
RHeaderView::Interactive	/home/viper/projects/RBit/rheaderview.h	/^        Interactive,$/;"	e	enum:RHeaderView::ResizeMode
RHeaderView::NoState	/home/viper/projects/RBit/rheaderview.h	/^    enum State { NoState, ResizeSection } m_state;$/;"	e	enum:RHeaderView::State
RHeaderView::RHeaderView	/home/viper/projects/RBit/rheaderview.cpp	/^RHeaderView::RHeaderView(RBit::Orientation orientation, RWidget* parent, RWFlags flags)$/;"	f	class:RHeaderView	signature:(RBit::Orientation orientation, RWidget* parent, RWFlags flags)
RHeaderView::RHeaderView	/home/viper/projects/RBit/rheaderview.h	/^    RHeaderView(RBit::Orientation orientation, RWidget* parent = 0, RWFlags flags = 0);$/;"	p	class:RHeaderView	access:public	signature:(RBit::Orientation orientation, RWidget* parent = 0, RWFlags flags = 0)
RHeaderView::RHeaderView	/home/viper/projects/RBit/rheaderview.h	/^    RHeaderView(const RHeaderView&);$/;"	p	class:RHeaderView	access:private	signature:(const RHeaderView&)
RHeaderView::ResizeMode	/home/viper/projects/RBit/rheaderview.h	/^    enum ResizeMode$/;"	g	class:RHeaderView	access:public
RHeaderView::ResizeSection	/home/viper/projects/RBit/rheaderview.h	/^    enum State { NoState, ResizeSection } m_state;$/;"	e	enum:RHeaderView::State
RHeaderView::State	/home/viper/projects/RBit/rheaderview.h	/^    enum State { NoState, ResizeSection } m_state;$/;"	g	class:RHeaderView	access:private
RHeaderView::Stretch	/home/viper/projects/RBit/rheaderview.h	/^        Stretch,$/;"	e	enum:RHeaderView::ResizeMode
RHeaderView::count	/home/viper/projects/RBit/rheaderview.cpp	/^Uint32 RHeaderView::count() const$/;"	f	class:RHeaderView	signature:() const
RHeaderView::count	/home/viper/projects/RBit/rheaderview.h	/^    Uint32 count() const;$/;"	p	class:RHeaderView	access:public	signature:() const
RHeaderView::dataChanged	/home/viper/projects/RBit/rheaderview.cpp	/^void RHeaderView::dataChanged(Sint32 first, Sint32 last)$/;"	f	class:RHeaderView	signature:(Sint32 first, Sint32 last)
RHeaderView::dataChanged	/home/viper/projects/RBit/rheaderview.h	/^    virtual void dataChanged(Sint32 firstSection, Sint32 lastSection);$/;"	p	class:RHeaderView	access:public	signature:(Sint32 firstSection, Sint32 lastSection)
RHeaderView::defaultSectionSize	/home/viper/projects/RBit/rheaderview.h	/^    Uint16 defaultSectionSize() const;$/;"	p	class:RHeaderView	access:public	signature:() const
RHeaderView::defaultSectionSize	/home/viper/projects/RBit/rheaderview.h	/^inline Uint16 RHeaderView::defaultSectionSize() const$/;"	f	class:RHeaderView	signature:() const
RHeaderView::emitModelReplaced	/home/viper/projects/RBit/rheaderview.cpp	/^void RHeaderView::emitModelReplaced(RHeaderModel* model) $/;"	f	class:RHeaderView	signature:(RHeaderModel* model)
RHeaderView::emitModelReplaced	/home/viper/projects/RBit/rheaderview.h	/^    void emitModelReplaced(RHeaderModel* newModel);$/;"	p	class:RHeaderView	access:private	signature:(RHeaderModel* newModel)
RHeaderView::emitSectionClicked	/home/viper/projects/RBit/rheaderview.cpp	/^void RHeaderView::emitSectionClicked(Sint32 section) $/;"	f	class:RHeaderView	signature:(Sint32 section)
RHeaderView::emitSectionClicked	/home/viper/projects/RBit/rheaderview.h	/^    void emitSectionClicked(Sint32 section);$/;"	p	class:RHeaderView	access:private	signature:(Sint32 section)
RHeaderView::emitSectionCountChanged	/home/viper/projects/RBit/rheaderview.cpp	/^void RHeaderView::emitSectionCountChanged(Uint32 oldCount, Uint32 newCount) $/;"	f	class:RHeaderView	signature:(Uint32 oldCount, Uint32 newCount)
RHeaderView::emitSectionCountChanged	/home/viper/projects/RBit/rheaderview.h	/^    void emitSectionCountChanged(Uint32 oldCount, Uint32 newCount);$/;"	p	class:RHeaderView	access:private	signature:(Uint32 oldCount, Uint32 newCount)
RHeaderView::emitSectionPressed	/home/viper/projects/RBit/rheaderview.cpp	/^void RHeaderView::emitSectionPressed(Sint32 section) $/;"	f	class:RHeaderView	signature:(Sint32 section)
RHeaderView::emitSectionPressed	/home/viper/projects/RBit/rheaderview.h	/^    void emitSectionPressed(Sint32 section);$/;"	p	class:RHeaderView	access:private	signature:(Sint32 section)
RHeaderView::emitSectionResized	/home/viper/projects/RBit/rheaderview.cpp	/^void RHeaderView::emitSectionResized(Sint32 section, Sint32 oldSize, Sint32 newSize)$/;"	f	class:RHeaderView	signature:(Sint32 section, Sint32 oldSize, Sint32 newSize)
RHeaderView::emitSectionResized	/home/viper/projects/RBit/rheaderview.h	/^    void emitSectionResized(Sint32 section, Sint32 oldSize, Sint32 newSize);$/;"	p	class:RHeaderView	access:private	signature:(Sint32 section, Sint32 oldSize, Sint32 newSize)
RHeaderView::eventHide	/home/viper/projects/RBit/rheaderview.cpp	/^void RHeaderView::eventHide()$/;"	f	class:RHeaderView	signature:()
RHeaderView::eventHide	/home/viper/projects/RBit/rheaderview.h	/^    virtual void eventHide();    $/;"	p	class:RHeaderView	access:protected	signature:()
RHeaderView::eventMouseDown	/home/viper/projects/RBit/rheaderview.cpp	/^void RHeaderView::eventMouseDown(const SDL_MouseButtonEvent& m)$/;"	f	class:RHeaderView	signature:(const SDL_MouseButtonEvent& m)
RHeaderView::eventMouseDown	/home/viper/projects/RBit/rheaderview.h	/^    virtual void eventMouseDown(const SDL_MouseButtonEvent&);$/;"	p	class:RHeaderView	access:protected	signature:(const SDL_MouseButtonEvent&)
RHeaderView::eventMouseMove	/home/viper/projects/RBit/rheaderview.cpp	/^void RHeaderView::eventMouseMove(const SDL_MouseMotionEvent& m)$/;"	f	class:RHeaderView	signature:(const SDL_MouseMotionEvent& m)
RHeaderView::eventMouseMove	/home/viper/projects/RBit/rheaderview.h	/^    virtual void eventMouseMove(const SDL_MouseMotionEvent&);$/;"	p	class:RHeaderView	access:protected	signature:(const SDL_MouseMotionEvent&)
RHeaderView::eventMouseUp	/home/viper/projects/RBit/rheaderview.cpp	/^void RHeaderView::eventMouseUp(const SDL_MouseButtonEvent& m)$/;"	f	class:RHeaderView	signature:(const SDL_MouseButtonEvent& m)
RHeaderView::eventMouseUp	/home/viper/projects/RBit/rheaderview.h	/^    virtual void eventMouseUp(const SDL_MouseButtonEvent&);$/;"	p	class:RHeaderView	access:protected	signature:(const SDL_MouseButtonEvent&)
RHeaderView::eventShow	/home/viper/projects/RBit/rheaderview.cpp	/^void RHeaderView::eventShow()$/;"	f	class:RHeaderView	signature:()
RHeaderView::eventShow	/home/viper/projects/RBit/rheaderview.h	/^    virtual void eventShow();$/;"	p	class:RHeaderView	access:protected	signature:()
RHeaderView::horizontalOffset	/home/viper/projects/RBit/rheaderview.h	/^    Sint32 horizontalOffset() const;$/;"	p	class:RHeaderView	access:protected	signature:() const
RHeaderView::initializeSections	/home/viper/projects/RBit/rheaderview.cpp	/^void RHeaderView::initializeSections()$/;"	f	class:RHeaderView	signature:()
RHeaderView::initializeSections	/home/viper/projects/RBit/rheaderview.cpp	/^void RHeaderView::initializeSections(Sint32 start, Sint32 end)$/;"	f	class:RHeaderView	signature:(Sint32 start, Sint32 end)
RHeaderView::initializeSections	/home/viper/projects/RBit/rheaderview.h	/^    void initializeSections();$/;"	p	class:RHeaderView	access:protected	signature:()
RHeaderView::initializeSections	/home/viper/projects/RBit/rheaderview.h	/^    void initializeSections(Sint32 start, Sint32 end);$/;"	p	class:RHeaderView	access:protected	signature:(Sint32 start, Sint32 end)
RHeaderView::isClickable	/home/viper/projects/RBit/rheaderview.cpp	/^bool RHeaderView::isClickable() const$/;"	f	class:RHeaderView	signature:() const
RHeaderView::isClickable	/home/viper/projects/RBit/rheaderview.h	/^    bool isClickable() const;$/;"	p	class:RHeaderView	access:public	signature:() const
RHeaderView::isSectionSelected	/home/viper/projects/RBit/rheaderview.h	/^    bool isSectionSelected(Sint32 section) const;$/;"	p	class:RHeaderView	access:private	signature:(Sint32 section) const
RHeaderView::isSortIndicatorShown	/home/viper/projects/RBit/rheaderview.cpp	/^bool RHeaderView::isSortIndicatorShown() const$/;"	f	class:RHeaderView	signature:() const
RHeaderView::isSortIndicatorShown	/home/viper/projects/RBit/rheaderview.h	/^    bool isSortIndicatorShown() const;$/;"	p	class:RHeaderView	access:public	signature:() const
RHeaderView::isValidIndex	/home/viper/projects/RBit/rheaderview.h	/^    bool isValidIndex(Sint32 section) const;$/;"	p	class:RHeaderView	access:public	signature:(Sint32 section) const
RHeaderView::isValidIndex	/home/viper/projects/RBit/rheaderview.h	/^inline bool RHeaderView::isValidIndex(Sint32 section) const$/;"	f	class:RHeaderView	signature:(Sint32 section) const
RHeaderView::layoutItems	/home/viper/projects/RBit/rheaderview.cpp	/^void RHeaderView::layoutItems()$/;"	f	class:RHeaderView	signature:()
RHeaderView::layoutItems	/home/viper/projects/RBit/rheaderview.h	/^    void layoutItems();$/;"	p	class:RHeaderView	access:public	signature:()
RHeaderView::length	/home/viper/projects/RBit/rheaderview.cpp	/^Uint32 RHeaderView::length() const$/;"	f	class:RHeaderView	signature:() const
RHeaderView::length	/home/viper/projects/RBit/rheaderview.h	/^    Uint32 length() const;$/;"	p	class:RHeaderView	access:public	signature:() const
RHeaderView::m_arrowCursor	/home/viper/projects/RBit/rheaderview.h	/^    SDL_Cursor* m_arrowCursor;$/;"	m	class:RHeaderView	access:private
RHeaderView::m_bottomTextMargin	/home/viper/projects/RBit/rheaderview.h	/^           m_bottomTextMargin;$/;"	m	class:RHeaderView	access:private
RHeaderView::m_defaultSectionSize	/home/viper/projects/RBit/rheaderview.h	/^    Uint16 m_defaultSectionSize;$/;"	m	class:RHeaderView	access:private
RHeaderView::m_globalResizeMode	/home/viper/projects/RBit/rheaderview.h	/^    RHeaderView::ResizeMode m_globalResizeMode;    $/;"	m	class:RHeaderView	access:private
RHeaderView::m_lastPos	/home/viper/projects/RBit/rheaderview.h	/^    Sint32 m_lastPos;$/;"	m	class:RHeaderView	access:private
RHeaderView::m_leftTextMargin	/home/viper/projects/RBit/rheaderview.h	/^           m_leftTextMargin, $/;"	m	class:RHeaderView	access:private
RHeaderView::m_offset	/home/viper/projects/RBit/rheaderview.h	/^    Sint32 m_offset;    $/;"	m	class:RHeaderView	access:private
RHeaderView::m_orientation	/home/viper/projects/RBit/rheaderview.h	/^    RBit::Orientation m_orientation;$/;"	m	class:RHeaderView	access:private
RHeaderView::m_pressed	/home/viper/projects/RBit/rheaderview.h	/^    Sint32 m_pressed;    $/;"	m	class:RHeaderView	access:private
RHeaderView::m_rightTextMargin	/home/viper/projects/RBit/rheaderview.h	/^           m_rightTextMargin, $/;"	m	class:RHeaderView	access:private
RHeaderView::m_section	/home/viper/projects/RBit/rheaderview.h	/^    Sint32 m_section;$/;"	m	class:RHeaderView	access:private
RHeaderView::m_sections	/home/viper/projects/RBit/rheaderview.h	/^    mutable HeaderSections m_sections;    $/;"	m	class:RHeaderView	access:private
RHeaderView::m_setCursor	/home/viper/projects/RBit/rheaderview.h	/^    SDL_Cursor* m_setCursor;$/;"	m	class:RHeaderView	access:private
RHeaderView::m_sortIndicatorOrder	/home/viper/projects/RBit/rheaderview.h	/^    RBit::SortOrder m_sortIndicatorOrder;$/;"	m	class:RHeaderView	access:private
RHeaderView::m_sortIndicatorSection	/home/viper/projects/RBit/rheaderview.h	/^    Sint32 m_sortIndicatorSection;$/;"	m	class:RHeaderView	access:private
RHeaderView::m_splitHCursor	/home/viper/projects/RBit/rheaderview.h	/^    SDL_Cursor* m_splitHCursor;$/;"	m	class:RHeaderView	access:private
RHeaderView::m_splitVCursor	/home/viper/projects/RBit/rheaderview.h	/^    SDL_Cursor* m_splitVCursor;$/;"	m	class:RHeaderView	access:private
RHeaderView::m_state	/home/viper/projects/RBit/rheaderview.h	/^    enum State { NoState, ResizeSection } m_state;$/;"	m	class:RHeaderView	typeref:enum:RHeaderView::State	access:private
RHeaderView::m_stretchSections	/home/viper/projects/RBit/rheaderview.h	/^    Uint16 m_stretchSections;    $/;"	m	class:RHeaderView	access:private
RHeaderView::m_target	/home/viper/projects/RBit/rheaderview.h	/^    Sint32 m_target;$/;"	m	class:RHeaderView	access:private
RHeaderView::m_thickness	/home/viper/projects/RBit/rheaderview.h	/^    Uint16 m_thickness;    $/;"	m	class:RHeaderView	access:private
RHeaderView::m_topTextMargin	/home/viper/projects/RBit/rheaderview.h	/^    Sint16 m_topTextMargin, $/;"	m	class:RHeaderView	access:private
RHeaderView::model	/home/viper/projects/RBit/rheaderview.h	/^    RHeaderModel* model() const;$/;"	p	class:RHeaderView	access:public	signature:() const
RHeaderView::model	/home/viper/projects/RBit/rheaderview.h	/^inline RHeaderModel* RHeaderView::model() const$/;"	f	class:RHeaderView	signature:() const
RHeaderView::modelReset	/home/viper/projects/RBit/rheaderview.cpp	/^void RHeaderView::modelReset()$/;"	f	class:RHeaderView	signature:()
RHeaderView::modelReset	/home/viper/projects/RBit/rheaderview.h	/^    virtual void modelReset();$/;"	p	class:RHeaderView	access:protected	signature:()
RHeaderView::offset	/home/viper/projects/RBit/rheaderview.h	/^    Sint32 offset() const;$/;"	p	class:RHeaderView	access:public	signature:() const
RHeaderView::offset	/home/viper/projects/RBit/rheaderview.h	/^inline Sint32 RHeaderView::offset() const$/;"	f	class:RHeaderView	signature:() const
RHeaderView::operator =	/home/viper/projects/RBit/rheaderview.h	/^    RHeaderView& operator=(const RHeaderView&);$/;"	p	class:RHeaderView	access:private	signature:(const RHeaderView&)
RHeaderView::orientation	/home/viper/projects/RBit/rheaderview.h	/^    RBit::Orientation orientation() const;$/;"	p	class:RHeaderView	access:public	signature:() const
RHeaderView::orientation	/home/viper/projects/RBit/rheaderview.h	/^inline RBit::Orientation RHeaderView::orientation() const$/;"	f	class:RHeaderView	signature:() const
RHeaderView::repaintImpl	/home/viper/projects/RBit/rheaderview.cpp	/^void RHeaderView::repaintImpl(const RRect& r)$/;"	f	class:RHeaderView	signature:(const RRect& r)
RHeaderView::repaintImpl	/home/viper/projects/RBit/rheaderview.h	/^    virtual void repaintImpl(const RRect& r);$/;"	p	class:RHeaderView	access:protected	signature:(const RRect& r)
RHeaderView::resizeMode	/home/viper/projects/RBit/rheaderview.cpp	/^RHeaderView::ResizeMode RHeaderView::resizeMode(Sint32 section) const$/;"	f	class:RHeaderView	signature:(Sint32 section) const
RHeaderView::resizeMode	/home/viper/projects/RBit/rheaderview.h	/^    ResizeMode resizeMode(Sint32 section) const;$/;"	p	class:RHeaderView	access:public	signature:(Sint32 section) const
RHeaderView::resizeSection	/home/viper/projects/RBit/rheaderview.cpp	/^void RHeaderView::resizeSection(Sint32 section, Uint16 size)$/;"	f	class:RHeaderView	signature:(Sint32 section, Uint16 size)
RHeaderView::resizeSection	/home/viper/projects/RBit/rheaderview.h	/^    void resizeSection(Sint32 section, Uint16 size);$/;"	p	class:RHeaderView	access:public	signature:(Sint32 section, Uint16 size)
RHeaderView::resizeSections	/home/viper/projects/RBit/rheaderview.cpp	/^void RHeaderView::resizeSections()$/;"	f	class:RHeaderView	signature:()
RHeaderView::resizeSections	/home/viper/projects/RBit/rheaderview.h	/^    void resizeSections();$/;"	p	class:RHeaderView	access:public	signature:()
RHeaderView::scrollContentsBy	/home/viper/projects/RBit/rheaderview.h	/^    void scrollContentsBy(Sint32 dx, Sint32 dy);$/;"	p	class:RHeaderView	access:protected	signature:(Sint32 dx, Sint32 dy)
RHeaderView::scrollTo	/home/viper/projects/RBit/rheaderview.h	/^    void scrollTo(Sint32 section);$/;"	p	class:RHeaderView	access:protected	signature:(Sint32 section)
RHeaderView::sectionAt	/home/viper/projects/RBit/rheaderview.cpp	/^Sint32 RHeaderView::sectionAt(Sint32 position) const$/;"	f	class:RHeaderView	signature:(Sint32 position) const
RHeaderView::sectionAt	/home/viper/projects/RBit/rheaderview.h	/^    Sint32 sectionAt(Sint32 position) const;$/;"	p	class:RHeaderView	access:public	signature:(Sint32 position) const
RHeaderView::sectionAt	/home/viper/projects/RBit/rheaderview.h	/^    Sint32 sectionAt(Sint32 x, Sint32 y) const;$/;"	p	class:RHeaderView	access:public	signature:(Sint32 x, Sint32 y) const
RHeaderView::sectionAt	/home/viper/projects/RBit/rheaderview.h	/^    Sint32 sectionAt(const RPoint& pos) const;$/;"	p	class:RHeaderView	access:public	signature:(const RPoint& pos) const
RHeaderView::sectionHandleAt	/home/viper/projects/RBit/rheaderview.cpp	/^Sint32 RHeaderView::sectionHandleAt(Sint32 position)$/;"	f	class:RHeaderView	signature:(Sint32 position)
RHeaderView::sectionHandleAt	/home/viper/projects/RBit/rheaderview.h	/^    Sint32 sectionHandleAt(Sint32 position);$/;"	p	class:RHeaderView	access:private	signature:(Sint32 position)
RHeaderView::sectionPosition	/home/viper/projects/RBit/rheaderview.cpp	/^Sint32 RHeaderView::sectionPosition(Sint32 section) const$/;"	f	class:RHeaderView	signature:(Sint32 section) const
RHeaderView::sectionPosition	/home/viper/projects/RBit/rheaderview.h	/^    Sint32 sectionPosition(Sint32 section) const;$/;"	p	class:RHeaderView	access:public	signature:(Sint32 section) const
RHeaderView::sectionSize	/home/viper/projects/RBit/rheaderview.cpp	/^Uint16 RHeaderView::sectionSize(Sint32 section) const$/;"	f	class:RHeaderView	signature:(Sint32 section) const
RHeaderView::sectionSize	/home/viper/projects/RBit/rheaderview.h	/^    Uint16 sectionSize(Sint32 section) const;$/;"	p	class:RHeaderView	access:public	signature:(Sint32 section) const
RHeaderView::sectionViewportPosition	/home/viper/projects/RBit/rheaderview.cpp	/^Sint16 RHeaderView::sectionViewportPosition(Sint32 section) const$/;"	f	class:RHeaderView	signature:(Sint32 section) const
RHeaderView::sectionViewportPosition	/home/viper/projects/RBit/rheaderview.h	/^    Sint16 sectionViewportPosition(Sint32 section) const;$/;"	p	class:RHeaderView	access:public	signature:(Sint32 section) const
RHeaderView::sectionsAboutToBeRemoved	/home/viper/projects/RBit/rheaderview.cpp	/^void RHeaderView::sectionsAboutToBeRemoved(Sint32 first, Sint32 last)$/;"	f	class:RHeaderView	signature:(Sint32 first, Sint32 last)
RHeaderView::sectionsAboutToBeRemoved	/home/viper/projects/RBit/rheaderview.h	/^    virtual void sectionsAboutToBeRemoved(Sint32 firstSection, Sint32 lastSection);    $/;"	p	class:RHeaderView	access:protected	signature:(Sint32 firstSection, Sint32 lastSection)
RHeaderView::sectionsInserted	/home/viper/projects/RBit/rheaderview.cpp	/^void RHeaderView::sectionsInserted(Sint32 first, Sint32)$/;"	f	class:RHeaderView	signature:(Sint32 first, Sint32)
RHeaderView::sectionsInserted	/home/viper/projects/RBit/rheaderview.h	/^    virtual void sectionsInserted(Sint32 firstSection, Sint32 lastSection);$/;"	p	class:RHeaderView	access:protected	signature:(Sint32 firstSection, Sint32 lastSection)
RHeaderView::setClickable	/home/viper/projects/RBit/rheaderview.cpp	/^void RHeaderView::setClickable(bool clickable)$/;"	f	class:RHeaderView	signature:(bool clickable)
RHeaderView::setClickable	/home/viper/projects/RBit/rheaderview.h	/^    void setClickable(bool clickable);$/;"	p	class:RHeaderView	access:public	signature:(bool clickable)
RHeaderView::setDefaultSectionSize	/home/viper/projects/RBit/rheaderview.h	/^    void setDefaultSectionSize(Uint16 size);$/;"	p	class:RHeaderView	access:public	signature:(Uint16 size)
RHeaderView::setDefaultSectionSize	/home/viper/projects/RBit/rheaderview.h	/^inline void RHeaderView::setDefaultSectionSize(Uint16 size)$/;"	f	class:RHeaderView	signature:(Uint16 size)
RHeaderView::setGeometry	/home/viper/projects/RBit/rheaderview.cpp	/^void RHeaderView::setGeometry(const RPoint& p, const RSize& s)$/;"	f	class:RHeaderView	signature:(const RPoint& p, const RSize& s)
RHeaderView::setGeometry	/home/viper/projects/RBit/rheaderview.h	/^    virtual void setGeometry(const RPoint& p, const RSize& s);    $/;"	p	class:RHeaderView	access:public	signature:(const RPoint& p, const RSize& s)
RHeaderView::setModel	/home/viper/projects/RBit/rheaderview.cpp	/^void RHeaderView::setModel(RHeaderModel* m)$/;"	f	class:RHeaderView	signature:(RHeaderModel* m)
RHeaderView::setModel	/home/viper/projects/RBit/rheaderview.h	/^    virtual void setModel(RHeaderModel*);$/;"	p	class:RHeaderView	access:public	signature:(RHeaderModel*)
RHeaderView::setOffset	/home/viper/projects/RBit/rheaderview.cpp	/^void RHeaderView::setOffset(int o)$/;"	f	class:RHeaderView	signature:(int o)
RHeaderView::setOffset	/home/viper/projects/RBit/rheaderview.h	/^    virtual void setOffset(Sint32 offset);$/;"	p	class:RHeaderView	access:public	signature:(Sint32 offset)
RHeaderView::setResizeMode	/home/viper/projects/RBit/rheaderview.cpp	/^void RHeaderView::setResizeMode(RHeaderView::ResizeMode mode)$/;"	f	class:RHeaderView	signature:(RHeaderView::ResizeMode mode)
RHeaderView::setResizeMode	/home/viper/projects/RBit/rheaderview.cpp	/^void RHeaderView::setResizeMode(Sint32 section, ResizeMode mode)$/;"	f	class:RHeaderView	signature:(Sint32 section, ResizeMode mode)
RHeaderView::setResizeMode	/home/viper/projects/RBit/rheaderview.h	/^    void setResizeMode(ResizeMode mode);$/;"	p	class:RHeaderView	access:public	signature:(ResizeMode mode)
RHeaderView::setResizeMode	/home/viper/projects/RBit/rheaderview.h	/^    void setResizeMode(Sint32 section, ResizeMode mode);$/;"	p	class:RHeaderView	access:public	signature:(Sint32 section, ResizeMode mode)
RHeaderView::setSortIndicator	/home/viper/projects/RBit/rheaderview.cpp	/^void RHeaderView::setSortIndicator(Sint32 section, RBit::SortOrder order)$/;"	f	class:RHeaderView	signature:(Sint32 section, RBit::SortOrder order)
RHeaderView::setSortIndicator	/home/viper/projects/RBit/rheaderview.h	/^    void setSortIndicator(Sint32 section, RBit::SortOrder order);$/;"	p	class:RHeaderView	access:public	signature:(Sint32 section, RBit::SortOrder order)
RHeaderView::setSortIndicatorShown	/home/viper/projects/RBit/rheaderview.cpp	/^void RHeaderView::setSortIndicatorShown(bool show)$/;"	f	class:RHeaderView	signature:(bool show)
RHeaderView::setSortIndicatorShown	/home/viper/projects/RBit/rheaderview.h	/^    void setSortIndicatorShown(bool show);$/;"	p	class:RHeaderView	access:public	signature:(bool show)
RHeaderView::setStretchLastSection	/home/viper/projects/RBit/rheaderview.cpp	/^void RHeaderView::setStretchLastSection(bool stretch)$/;"	f	class:RHeaderView	signature:(bool stretch)
RHeaderView::setStretchLastSection	/home/viper/projects/RBit/rheaderview.h	/^    void setStretchLastSection(bool stretch);$/;"	p	class:RHeaderView	access:public	signature:(bool stretch)
RHeaderView::setTextMargins	/home/viper/projects/RBit/rheaderview.h	/^    void setTextMargins(Sint16 left, Sint16 top, Sint16 right, Sint16 bottom);$/;"	p	class:RHeaderView	access:public	signature:(Sint16 left, Sint16 top, Sint16 right, Sint16 bottom)
RHeaderView::setTextMargins	/home/viper/projects/RBit/rheaderview.h	/^inline void RHeaderView::setTextMargins(Sint16 left, Sint16 top, Sint16 right, Sint16 bottom)$/;"	f	class:RHeaderView	signature:(Sint16 left, Sint16 top, Sint16 right, Sint16 bottom)
RHeaderView::setupSectionIndicator	/home/viper/projects/RBit/rheaderview.h	/^    void setupSectionIndicator(Sint32 section, Sint32 position);$/;"	p	class:RHeaderView	access:private	signature:(Sint32 section, Sint32 position)
RHeaderView::sizeHint	/home/viper/projects/RBit/rheaderview.cpp	/^RSize RHeaderView::sizeHint() const$/;"	f	class:RHeaderView	signature:() const
RHeaderView::sizeHint	/home/viper/projects/RBit/rheaderview.h	/^    RSize sizeHint() const;$/;"	p	class:RHeaderView	access:public	signature:() const
RHeaderView::sortIndicatorOrder	/home/viper/projects/RBit/rheaderview.cpp	/^RBit::SortOrder RHeaderView::sortIndicatorOrder() const$/;"	f	class:RHeaderView	signature:() const
RHeaderView::sortIndicatorOrder	/home/viper/projects/RBit/rheaderview.h	/^    RBit::SortOrder sortIndicatorOrder() const;$/;"	p	class:RHeaderView	access:public	signature:() const
RHeaderView::sortIndicatorSection	/home/viper/projects/RBit/rheaderview.cpp	/^Sint32 RHeaderView::sortIndicatorSection() const$/;"	f	class:RHeaderView	signature:() const
RHeaderView::sortIndicatorSection	/home/viper/projects/RBit/rheaderview.h	/^    Sint32 sortIndicatorSection() const;$/;"	p	class:RHeaderView	access:public	signature:() const
RHeaderView::stretchLastSection	/home/viper/projects/RBit/rheaderview.cpp	/^bool RHeaderView::stretchLastSection() const$/;"	f	class:RHeaderView	signature:() const
RHeaderView::stretchLastSection	/home/viper/projects/RBit/rheaderview.h	/^    bool stretchLastSection() const;$/;"	p	class:RHeaderView	access:public	signature:() const
RHeaderView::stretchSectionCount	/home/viper/projects/RBit/rheaderview.cpp	/^Uint32 RHeaderView::stretchSectionCount() const$/;"	f	class:RHeaderView	signature:() const
RHeaderView::stretchSectionCount	/home/viper/projects/RBit/rheaderview.h	/^    Uint32 stretchSectionCount() const;$/;"	p	class:RHeaderView	access:public	signature:() const
RHeaderView::subjectRemoved	/home/viper/projects/RBit/rheaderview.cpp	/^void RHeaderView::subjectRemoved(RHeaderModel* s)$/;"	f	class:RHeaderView	signature:(RHeaderModel* s)
RHeaderView::subjectRemoved	/home/viper/projects/RBit/rheaderview.h	/^    void subjectRemoved(Subject* s);$/;"	p	class:RHeaderView	access:protected	signature:(Subject* s)
RHeaderView::updateSection	/home/viper/projects/RBit/rheaderview.cpp	/^void RHeaderView::updateSection(Sint32 section)$/;"	f	class:RHeaderView	signature:(Sint32 section)
RHeaderView::updateSection	/home/viper/projects/RBit/rheaderview.h	/^    virtual void updateSection(Sint32 section);    $/;"	p	class:RHeaderView	access:protected	signature:(Sint32 section)
RHeaderView::updateSectionIndicator	/home/viper/projects/RBit/rheaderview.h	/^    void updateSectionIndicator(Sint32 section, Sint32 position);$/;"	p	class:RHeaderView	access:private	signature:(Sint32 section, Sint32 position)
RHeaderView::verticalOffset	/home/viper/projects/RBit/rheaderview.h	/^    Sint32 verticalOffset() const;    $/;"	p	class:RHeaderView	access:protected	signature:() const
RHeaderViewObserver	/home/viper/projects/RBit/rheaderview.h	/^class RHeaderViewObserver : public RObserver<RHeaderView>$/;"	c	inherits:RObserver
RHeaderViewObserver::modelReplaced	/home/viper/projects/RBit/rheaderview.h	/^    virtual void modelReplaced(RHeaderModel* model) $/;"	f	class:RHeaderViewObserver	access:public	signature:(RHeaderModel* model)
RHeaderViewObserver::sectionClicked	/home/viper/projects/RBit/rheaderview.h	/^    virtual void sectionClicked(Sint32 section)$/;"	f	class:RHeaderViewObserver	access:public	signature:(Sint32 section)
RHeaderViewObserver::sectionCountChanged	/home/viper/projects/RBit/rheaderview.h	/^    virtual void sectionCountChanged(Uint32 oldCount, Uint32 newCount) $/;"	f	class:RHeaderViewObserver	access:public	signature:(Uint32 oldCount, Uint32 newCount)
RHeaderViewObserver::sectionPressed	/home/viper/projects/RBit/rheaderview.h	/^    virtual void sectionPressed(Sint32 section)$/;"	f	class:RHeaderViewObserver	access:public	signature:(Sint32 section)
RHeaderViewObserver::sectionResized	/home/viper/projects/RBit/rheaderview.h	/^    virtual void sectionResized(Sint32 section, Sint32 oldSize, Sint32 newSize) $/;"	f	class:RHeaderViewObserver	access:public	signature:(Sint32 section, Sint32 oldSize, Sint32 newSize)
RIDENTITY_H	/home/viper/projects/RBit/ridentity.h	2;"	d
RIMAGE_H	/home/viper/projects/RBit/rimage.h	2;"	d
RIdentity	/home/viper/projects/RBit/ridentity.h	/^	RIdentity(int id = 0);$/;"	p	class:RIdentity	access:public	signature:(int id = 0)
RIdentity	/home/viper/projects/RBit/ridentity.h	/^class RIdentity $/;"	c
RIdentity	/home/viper/projects/RBit/ridentity.h	/^inline RIdentity::RIdentity(int id)$/;"	f	class:RIdentity	signature:(int id)
RIdentity::RIdentity	/home/viper/projects/RBit/ridentity.h	/^	RIdentity(int id = 0);$/;"	p	class:RIdentity	access:public	signature:(int id = 0)
RIdentity::RIdentity	/home/viper/projects/RBit/ridentity.h	/^inline RIdentity::RIdentity(int id)$/;"	f	class:RIdentity	signature:(int id)
RIdentity::id	/home/viper/projects/RBit/ridentity.h	/^	int id() const;$/;"	p	class:RIdentity	access:public	signature:() const
RIdentity::id	/home/viper/projects/RBit/ridentity.h	/^inline int RIdentity::id() const$/;"	f	class:RIdentity	signature:() const
RIdentity::m_id	/home/viper/projects/RBit/ridentity.h	/^	int m_id;$/;"	m	class:RIdentity	access:private
RIdentity::setId	/home/viper/projects/RBit/ridentity.h	/^	void setId(int id);$/;"	p	class:RIdentity	access:protected	signature:(int id)
RIdentity::setId	/home/viper/projects/RBit/ridentity.h	/^inline void RIdentity::setId(int id)$/;"	f	class:RIdentity	signature:(int id)
RImage	/home/viper/projects/RBit/rimage.cpp	/^RImage::RImage(RSurface surface)$/;"	f	class:RImage	signature:(RSurface surface)
RImage	/home/viper/projects/RBit/rimage.h	/^    RImage(RSurface surface = RSurface());$/;"	p	class:RImage	access:public	signature:(RSurface surface = RSurface())
RImage	/home/viper/projects/RBit/rimage.h	/^class RBIT_CORE_EXPORT RImage$/;"	c
RImage::RImage	/home/viper/projects/RBit/rimage.cpp	/^RImage::RImage(RSurface surface)$/;"	f	class:RImage	signature:(RSurface surface)
RImage::RImage	/home/viper/projects/RBit/rimage.h	/^    RImage(RSurface surface = RSurface());$/;"	p	class:RImage	access:public	signature:(RSurface surface = RSurface())
RImage::m_d	/home/viper/projects/RBit/rimage.h	/^    RSharedPtr<RImagePrivate> m_d;$/;"	m	class:RImage	access:private
RImage::rDrawImage	/home/viper/projects/RBit/rimage.h	/^    friend void RBIT_CORE_EXPORT rDrawImage(SDL_Surface* screen, const RPoint& topleft, const RRect& clip, const RImage& image, bool grayed);$/;"	p	class:RImage	access:friend	signature:(SDL_Surface* screen, const RPoint& topleft, const RRect& clip, const RImage& image, bool grayed)
RImage::size	/home/viper/projects/RBit/rimage.cpp	/^RSize RImage::size() const$/;"	f	class:RImage	signature:() const
RImage::size	/home/viper/projects/RBit/rimage.h	/^    RSize size() const;$/;"	p	class:RImage	access:public	signature:() const
RImagePrivate	/home/viper/projects/RBit/rimage.cpp	/^    RImagePrivate(RSurface src)$/;"	f	class:RImagePrivate	access:public	signature:(RSurface src)
RImagePrivate	/home/viper/projects/RBit/rimage.cpp	/^    RImagePrivate(RSurface surface) : texture(0), maxx(0), maxy(0)$/;"	f	class:RImagePrivate	access:public	signature:(RSurface surface)
RImagePrivate	/home/viper/projects/RBit/rimage.cpp	/^class RImagePrivate$/;"	c	file:
RImagePrivate::RImagePrivate	/home/viper/projects/RBit/rimage.cpp	/^    RImagePrivate(RSurface src)$/;"	f	class:RImagePrivate	access:public	signature:(RSurface src)
RImagePrivate::RImagePrivate	/home/viper/projects/RBit/rimage.cpp	/^    RImagePrivate(RSurface surface) : texture(0), maxx(0), maxy(0)$/;"	f	class:RImagePrivate	access:public	signature:(RSurface surface)
RImagePrivate::image	/home/viper/projects/RBit/rimage.cpp	/^    RSurface image;$/;"	m	class:RImagePrivate	file:	access:public
RImagePrivate::maxx	/home/viper/projects/RBit/rimage.cpp	/^    GLfloat maxx;$/;"	m	class:RImagePrivate	file:	access:public
RImagePrivate::maxy	/home/viper/projects/RBit/rimage.cpp	/^    GLfloat maxy;$/;"	m	class:RImagePrivate	file:	access:public
RImagePrivate::size	/home/viper/projects/RBit/rimage.cpp	/^    RSize size;$/;"	m	class:RImagePrivate	file:	access:public
RImagePrivate::texture	/home/viper/projects/RBit/rimage.cpp	/^    GLuint texture;$/;"	m	class:RImagePrivate	file:	access:public
RImagePrivate::~RImagePrivate	/home/viper/projects/RBit/rimage.cpp	/^    ~RImagePrivate()$/;"	f	class:RImagePrivate	access:public	signature:()
RLABEL_H	/home/viper/projects/RBit/rlabel.h	2;"	d
RLIBRARY_H	/home/viper/projects/RBit/rlibrary.h	2;"	d
RLabel	/home/viper/projects/RBit/rlabel.cpp	/^RLabel::RLabel(RWidget* parent, RWFlags f, const char* text, int alignment) $/;"	f	class:RLabel	signature:(RWidget* parent, RWFlags f, const char* text, int alignment)
RLabel	/home/viper/projects/RBit/rlabel.h	/^    RLabel(const RLabel&);$/;"	p	class:RLabel	access:private	signature:(const RLabel&)
RLabel	/home/viper/projects/RBit/rlabel.h	/^    explicit RLabel(RWidget* parent=0, RWFlags f=0, const char* text = "", int alignment = AlignTop | AlignLeft);$/;"	p	class:RLabel	access:public	signature:(RWidget* parent=0, RWFlags f=0, const char* text = ”, int alignment = AlignTop | AlignLeft)
RLabel	/home/viper/projects/RBit/rlabel.h	/^class RBIT_CORE_EXPORT RLabel : public RWidget,               $/;"	c	inherits:RWidget,RTextPainter
RLabel::RLabel	/home/viper/projects/RBit/rlabel.cpp	/^RLabel::RLabel(RWidget* parent, RWFlags f, const char* text, int alignment) $/;"	f	class:RLabel	signature:(RWidget* parent, RWFlags f, const char* text, int alignment)
RLabel::RLabel	/home/viper/projects/RBit/rlabel.h	/^    RLabel(const RLabel&);$/;"	p	class:RLabel	access:private	signature:(const RLabel&)
RLabel::RLabel	/home/viper/projects/RBit/rlabel.h	/^    explicit RLabel(RWidget* parent=0, RWFlags f=0, const char* text = "", int alignment = AlignTop | AlignLeft);$/;"	p	class:RLabel	access:public	signature:(RWidget* parent=0, RWFlags f=0, const char* text = ”, int alignment = AlignTop | AlignLeft)
RLabel::m_buff	/home/viper/projects/RBit/rlabel.h	/^    RString      m_buff;$/;"	m	class:RLabel	access:private
RLabel::m_text	/home/viper/projects/RBit/rlabel.h	/^    const char*  m_text;$/;"	m	class:RLabel	access:private
RLabel::operator =	/home/viper/projects/RBit/rlabel.h	/^    RLabel& operator=(const RLabel&);$/;"	p	class:RLabel	access:private	signature:(const RLabel&)
RLabel::repaintImpl	/home/viper/projects/RBit/rlabel.cpp	/^void RLabel::repaintImpl(const RRect& r)$/;"	f	class:RLabel	signature:(const RRect& r)
RLabel::repaintImpl	/home/viper/projects/RBit/rlabel.h	/^    virtual void repaintImpl(const RRect& r);    $/;"	p	class:RLabel	access:protected	signature:(const RRect& r)
RLabel::setText	/home/viper/projects/RBit/rlabel.h	/^    virtual void setText(const char* str);$/;"	p	class:RLabel	access:public	signature:(const char* str)
RLabel::setText	/home/viper/projects/RBit/rlabel.h	/^inline void RLabel::setText(const char* str)$/;"	f	class:RLabel	signature:(const char* str)
RLabel::setTextRef	/home/viper/projects/RBit/rlabel.h	/^    virtual void setTextRef(const char* str);$/;"	p	class:RLabel	access:public	signature:(const char* str)
RLabel::setTextRef	/home/viper/projects/RBit/rlabel.h	/^inline void RLabel::setTextRef(const char* str)$/;"	f	class:RLabel	signature:(const char* str)
RLabel::text	/home/viper/projects/RBit/rlabel.h	/^    const char* text() const;$/;"	p	class:RLabel	access:public	signature:() const
RLabel::text	/home/viper/projects/RBit/rlabel.h	/^inline const char* RLabel::text() const$/;"	f	class:RLabel	signature:() const
RLabel::textSize	/home/viper/projects/RBit/rlabel.h	/^    RSize textSize() const;$/;"	p	class:RLabel	access:public	signature:() const
RLabel::textSize	/home/viper/projects/RBit/rlabel.h	/^inline RSize RLabel::textSize() const$/;"	f	class:RLabel	signature:() const
RLibrary	/home/viper/projects/RBit/rlibrary.h	/^    RLibrary(const RLibrary& lib)$/;"	f	class:RLibrary	access:public	signature:(const RLibrary& lib)
RLibrary	/home/viper/projects/RBit/rlibrary.h	/^    explicit RLibrary(void* ptr = 0)$/;"	f	class:RLibrary	access:public	signature:(void* ptr = 0)
RLibrary	/home/viper/projects/RBit/rlibrary.h	/^class RLibrary : public RSharedPtr<void, RLibraryDeleter>$/;"	c	inherits:RSharedPtr
RLibrary::Base	/home/viper/projects/RBit/rlibrary.h	/^    typedef RSharedPtr<void, RLibraryDeleter> Base;$/;"	t	class:RLibrary	access:private
RLibrary::RLibrary	/home/viper/projects/RBit/rlibrary.h	/^    RLibrary(const RLibrary& lib)$/;"	f	class:RLibrary	access:public	signature:(const RLibrary& lib)
RLibrary::RLibrary	/home/viper/projects/RBit/rlibrary.h	/^    explicit RLibrary(void* ptr = 0)$/;"	f	class:RLibrary	access:public	signature:(void* ptr = 0)
RLibrary::free	/home/viper/projects/RBit/rlibrary.h	/^    void free() \/\/ obsolete, exists for compatibility$/;"	f	class:RLibrary	access:public	signature:()
RLibrary::handle	/home/viper/projects/RBit/rlibrary.h	/^    void* handle() const \/\/ obsolete, exists for compatibility$/;"	f	class:RLibrary	access:public	signature:() const
RLibrary::operator =	/home/viper/projects/RBit/rlibrary.h	/^    RLibrary& operator= (void* ptr) \/\/ obsolete, exists for compatibility$/;"	f	class:RLibrary	access:public	signature:(void* ptr)
RLibrary::~RLibrary	/home/viper/projects/RBit/rlibrary.h	/^    ~RLibrary()$/;"	f	class:RLibrary	access:public	signature:()
RLibraryDeleter	/home/viper/projects/RBit/rlibrary.h	/^struct RLibraryDeleter$/;"	s
RLibraryDeleter::operator ()	/home/viper/projects/RBit/rlibrary.h	/^    void operator()(void* ptr) const$/;"	f	struct:RLibraryDeleter	access:public	signature:(void* ptr) const
RMESSAGEBOX_H_	/home/viper/projects/RBit/rmessagebox.h	2;"	d
RMULTILINELABEL_H	/home/viper/projects/RBit/rmultilinelabel.h	2;"	d
RMessageBox	/home/viper/projects/RBit/rmessagebox.cpp	/^RMessageBox::RMessageBox(const char* caption, const char* text, Icon icon, int button0, $/;"	f	class:RMessageBox	signature:(const char* caption, const char* text, Icon icon, int button0, int button1, int button2, RWidget* parent, RWFlags f)
RMessageBox	/home/viper/projects/RBit/rmessagebox.h	/^    RMessageBox(const RMessageBox&);$/;"	p	class:RMessageBox	access:private	signature:(const RMessageBox&)
RMessageBox	/home/viper/projects/RBit/rmessagebox.h	/^    RMessageBox(const char* caption, const char* text, Icon icon, int button0, $/;"	p	class:RMessageBox	access:public	signature:(const char* caption, const char* text, Icon icon, int button0, int button1, int button2, RWidget* parent = 0, RWFlags f = RWFlags(0))
RMessageBox	/home/viper/projects/RBit/rmessagebox.h	/^class RBIT_CORE_EXPORT RMessageBox : public RDialog                 $/;"	c	inherits:RDialog
RMessageBox::Abort	/home/viper/projects/RBit/rmessagebox.h	/^    enum Button { NoButton = 0, Ok = 1, Cancel = 2, Yes = 3, No = 4, Abort = 5, Retry = 6, Ignore = 7,$/;"	e	enum:RMessageBox::Button
RMessageBox::Button	/home/viper/projects/RBit/rmessagebox.h	/^    enum Button { NoButton = 0, Ok = 1, Cancel = 2, Yes = 3, No = 4, Abort = 5, Retry = 6, Ignore = 7,$/;"	g	class:RMessageBox	access:public
RMessageBox::ButtonMask	/home/viper/projects/RBit/rmessagebox.h	/^                  ButtonMask = 0xff, Default = 0x100, Escape = 0x200, FlagMask = 0x300 };$/;"	e	enum:RMessageBox::Button
RMessageBox::Cancel	/home/viper/projects/RBit/rmessagebox.h	/^    enum Button { NoButton = 0, Ok = 1, Cancel = 2, Yes = 3, No = 4, Abort = 5, Retry = 6, Ignore = 7,$/;"	e	enum:RMessageBox::Button
RMessageBox::Critical	/home/viper/projects/RBit/rmessagebox.h	/^    enum Icon { NoIcon = 0, Information = 1, Warning = 2, Critical = 3 };$/;"	e	enum:RMessageBox::Icon
RMessageBox::Default	/home/viper/projects/RBit/rmessagebox.h	/^                  ButtonMask = 0xff, Default = 0x100, Escape = 0x200, FlagMask = 0x300 };$/;"	e	enum:RMessageBox::Button
RMessageBox::Escape	/home/viper/projects/RBit/rmessagebox.h	/^                  ButtonMask = 0xff, Default = 0x100, Escape = 0x200, FlagMask = 0x300 };$/;"	e	enum:RMessageBox::Button
RMessageBox::FlagMask	/home/viper/projects/RBit/rmessagebox.h	/^                  ButtonMask = 0xff, Default = 0x100, Escape = 0x200, FlagMask = 0x300 };$/;"	e	enum:RMessageBox::Button
RMessageBox::Icon	/home/viper/projects/RBit/rmessagebox.h	/^    enum Icon { NoIcon = 0, Information = 1, Warning = 2, Critical = 3 };$/;"	g	class:RMessageBox	access:public
RMessageBox::Ignore	/home/viper/projects/RBit/rmessagebox.h	/^    enum Button { NoButton = 0, Ok = 1, Cancel = 2, Yes = 3, No = 4, Abort = 5, Retry = 6, Ignore = 7,$/;"	e	enum:RMessageBox::Button
RMessageBox::Information	/home/viper/projects/RBit/rmessagebox.h	/^    enum Icon { NoIcon = 0, Information = 1, Warning = 2, Critical = 3 };$/;"	e	enum:RMessageBox::Icon
RMessageBox::No	/home/viper/projects/RBit/rmessagebox.h	/^    enum Button { NoButton = 0, Ok = 1, Cancel = 2, Yes = 3, No = 4, Abort = 5, Retry = 6, Ignore = 7,$/;"	e	enum:RMessageBox::Button
RMessageBox::NoButton	/home/viper/projects/RBit/rmessagebox.h	/^    enum Button { NoButton = 0, Ok = 1, Cancel = 2, Yes = 3, No = 4, Abort = 5, Retry = 6, Ignore = 7,$/;"	e	enum:RMessageBox::Button
RMessageBox::NoIcon	/home/viper/projects/RBit/rmessagebox.h	/^    enum Icon { NoIcon = 0, Information = 1, Warning = 2, Critical = 3 };$/;"	e	enum:RMessageBox::Icon
RMessageBox::Ok	/home/viper/projects/RBit/rmessagebox.h	/^    enum Button { NoButton = 0, Ok = 1, Cancel = 2, Yes = 3, No = 4, Abort = 5, Retry = 6, Ignore = 7,$/;"	e	enum:RMessageBox::Button
RMessageBox::PrivateButton	/home/viper/projects/RBit/rmessagebox.h	/^    class PrivateButton : public RButton,$/;"	c	class:RMessageBox	inherits:RButton,RIdentity	access:private
RMessageBox::PrivateButton::PrivateButton	/home/viper/projects/RBit/rmessagebox.h	/^        PrivateButton(int id, RMessageBox* parent, RWFlags flags)$/;"	f	class:RMessageBox::PrivateButton	access:public	signature:(int id, RMessageBox* parent, RWFlags flags)
RMessageBox::PrivateButton::click	/home/viper/projects/RBit/rmessagebox.h	/^        virtual void click()$/;"	f	class:RMessageBox::PrivateButton	access:public	signature:()
RMessageBox::RMessageBox	/home/viper/projects/RBit/rmessagebox.cpp	/^RMessageBox::RMessageBox(const char* caption, const char* text, Icon icon, int button0, $/;"	f	class:RMessageBox	signature:(const char* caption, const char* text, Icon icon, int button0, int button1, int button2, RWidget* parent, RWFlags f)
RMessageBox::RMessageBox	/home/viper/projects/RBit/rmessagebox.h	/^    RMessageBox(const RMessageBox&);$/;"	p	class:RMessageBox	access:private	signature:(const RMessageBox&)
RMessageBox::RMessageBox	/home/viper/projects/RBit/rmessagebox.h	/^    RMessageBox(const char* caption, const char* text, Icon icon, int button0, $/;"	p	class:RMessageBox	access:public	signature:(const char* caption, const char* text, Icon icon, int button0, int button1, int button2, RWidget* parent = 0, RWFlags f = RWFlags(0))
RMessageBox::Retry	/home/viper/projects/RBit/rmessagebox.h	/^    enum Button { NoButton = 0, Ok = 1, Cancel = 2, Yes = 3, No = 4, Abort = 5, Retry = 6, Ignore = 7,$/;"	e	enum:RMessageBox::Button
RMessageBox::Warning	/home/viper/projects/RBit/rmessagebox.h	/^    enum Icon { NoIcon = 0, Information = 1, Warning = 2, Critical = 3 };$/;"	e	enum:RMessageBox::Icon
RMessageBox::Yes	/home/viper/projects/RBit/rmessagebox.h	/^    enum Button { NoButton = 0, Ok = 1, Cancel = 2, Yes = 3, No = 4, Abort = 5, Retry = 6, Ignore = 7,$/;"	e	enum:RMessageBox::Button
RMessageBox::accept	/home/viper/projects/RBit/rmessagebox.cpp	/^void RMessageBox::accept()$/;"	f	class:RMessageBox	signature:()
RMessageBox::accept	/home/viper/projects/RBit/rmessagebox.h	/^    virtual void accept();$/;"	p	class:RMessageBox	access:public	signature:()
RMessageBox::adjustLayout	/home/viper/projects/RBit/rmessagebox.cpp	/^void RMessageBox::adjustLayout()$/;"	f	class:RMessageBox	signature:()
RMessageBox::adjustLayout	/home/viper/projects/RBit/rmessagebox.h	/^    void adjustLayout();$/;"	p	class:RMessageBox	access:private	signature:()
RMessageBox::buttonSize	/home/viper/projects/RBit/rmessagebox.h	/^    const RSize& buttonSize() const;$/;"	p	class:RMessageBox	access:public	signature:() const
RMessageBox::buttonSize	/home/viper/projects/RBit/rmessagebox.h	/^inline const RSize& RMessageBox::buttonSize() const$/;"	f	class:RMessageBox	signature:() const
RMessageBox::caption	/home/viper/projects/RBit/rmessagebox.h	/^    const char* caption() const;$/;"	p	class:RMessageBox	access:public	signature:() const
RMessageBox::createButton	/home/viper/projects/RBit/rmessagebox.cpp	/^RButton* RMessageBox::createButton(int button)$/;"	f	class:RMessageBox	signature:(int button)
RMessageBox::createButton	/home/viper/projects/RBit/rmessagebox.h	/^    RButton* createButton(int button);   $/;"	p	class:RMessageBox	access:private	signature:(int button)
RMessageBox::critical	/home/viper/projects/RBit/rmessagebox.cpp	/^int RMessageBox::critical(RWidget* parent, const char* caption, const char* text, $/;"	f	class:RMessageBox	signature:(RWidget* parent, const char* caption, const char* text, int button0, int button1, int button2)
RMessageBox::critical	/home/viper/projects/RBit/rmessagebox.h	/^    static int critical(RWidget* parent, const char* caption, const char* text, $/;"	p	class:RMessageBox	access:public	signature:(RWidget* parent, const char* caption, const char* text, int button0 = Ok | Default | Escape, int button1 = NoButton, int button2 = NoButton)
RMessageBox::eventShow	/home/viper/projects/RBit/rmessagebox.cpp	/^void RMessageBox::eventShow()$/;"	f	class:RMessageBox	signature:()
RMessageBox::eventShow	/home/viper/projects/RBit/rmessagebox.h	/^    virtual void eventShow();    $/;"	p	class:RMessageBox	access:protected	signature:()
RMessageBox::handleClick	/home/viper/projects/RBit/rmessagebox.cpp	/^void RMessageBox::handleClick(int button)$/;"	f	class:RMessageBox	signature:(int button)
RMessageBox::handleClick	/home/viper/projects/RBit/rmessagebox.h	/^    void handleClick(int button);$/;"	p	class:RMessageBox	access:protected	signature:(int button)
RMessageBox::icon	/home/viper/projects/RBit/rmessagebox.h	/^    Icon icon()const;$/;"	p	class:RMessageBox	access:public	signature:() const
RMessageBox::icon	/home/viper/projects/RBit/rmessagebox.h	/^inline RMessageBox::Icon RMessageBox::icon() const$/;"	f	class:RMessageBox	signature:() const
RMessageBox::information	/home/viper/projects/RBit/rmessagebox.cpp	/^int RMessageBox::information(RWidget* parent, const char* caption, const char* text, $/;"	f	class:RMessageBox	signature:(RWidget* parent, const char* caption, const char* text, int button0, int button1, int button2)
RMessageBox::information	/home/viper/projects/RBit/rmessagebox.h	/^    static int information(RWidget* parent, const char* caption, const char* text, $/;"	p	class:RMessageBox	access:public	signature:(RWidget* parent, const char* caption, const char* text, int button0 = Ok | Default | Escape, int button1 = NoButton, int button2 = NoButton)
RMessageBox::invoke	/home/viper/projects/RBit/rmessagebox.cpp	/^int RMessageBox::invoke()$/;"	f	class:RMessageBox	signature:()
RMessageBox::invoke	/home/viper/projects/RBit/rmessagebox.h	/^    int invoke();$/;"	p	class:RMessageBox	access:protected	signature:()
RMessageBox::m_accept	/home/viper/projects/RBit/rmessagebox.h	/^    int       m_accept;$/;"	m	class:RMessageBox	access:private
RMessageBox::m_button0	/home/viper/projects/RBit/rmessagebox.h	/^    RButton*  m_button0;$/;"	m	class:RMessageBox	access:private
RMessageBox::m_button1	/home/viper/projects/RBit/rmessagebox.h	/^    RButton*  m_button1;$/;"	m	class:RMessageBox	access:private
RMessageBox::m_button2	/home/viper/projects/RBit/rmessagebox.h	/^    RButton*  m_button2;$/;"	m	class:RMessageBox	access:private
RMessageBox::m_buttonSize	/home/viper/projects/RBit/rmessagebox.h	/^    RSize     m_buttonSize;    $/;"	m	class:RMessageBox	access:private
RMessageBox::m_captionAlignment	/home/viper/projects/RBit/rmessagebox.h	/^    int       m_captionAlignment;    $/;"	m	class:RMessageBox	access:private
RMessageBox::m_defaultButton	/home/viper/projects/RBit/rmessagebox.h	/^    RButton*  m_defaultButton;$/;"	m	class:RMessageBox	access:private
RMessageBox::m_icon	/home/viper/projects/RBit/rmessagebox.h	/^    RImage    m_icon;    $/;"	m	class:RMessageBox	access:private
RMessageBox::m_iconRect	/home/viper/projects/RBit/rmessagebox.h	/^    RRect     m_iconRect;$/;"	m	class:RMessageBox	access:private
RMessageBox::m_iconType	/home/viper/projects/RBit/rmessagebox.h	/^    Icon      m_iconType;$/;"	m	class:RMessageBox	access:private
RMessageBox::m_label	/home/viper/projects/RBit/rmessagebox.h	/^    RMultilineLabel* m_label;$/;"	m	class:RMessageBox	access:private
RMessageBox::m_reject	/home/viper/projects/RBit/rmessagebox.h	/^    int       m_reject;$/;"	m	class:RMessageBox	access:private
RMessageBox::m_text	/home/viper/projects/RBit/rmessagebox.h	/^    RString   m_text;$/;"	m	class:RMessageBox	access:private
RMessageBox::operator =	/home/viper/projects/RBit/rmessagebox.h	/^    RMessageBox& operator=(const RMessageBox&);$/;"	p	class:RMessageBox	access:private	signature:(const RMessageBox&)
RMessageBox::pCaption	/home/viper/projects/RBit/rmessagebox.h	/^	CCaptionWidget *pCaption;	\/\/Á‡„ÎÓ‚ÓÍ ÓÍÌ‡$/;"	m	class:RMessageBox	access:private
RMessageBox::pFocus	/home/viper/projects/RBit/rmessagebox.h	/^	RWidget*	pFocus;			\/\/ÍÓÌÚÓÎ, ÍÓÚÓÓÏÛ ·Û‰ÂÚ ‚ÓÁ‚‡˘ÂÌ ÙÓÍÛÒ ÔÓÒÎÂ Á‡Í˚ÚËˇ ‰Ë‡ÎÓ„‡$/;"	m	class:RMessageBox	access:private
RMessageBox::reject	/home/viper/projects/RBit/rmessagebox.cpp	/^void RMessageBox::reject()$/;"	f	class:RMessageBox	signature:()
RMessageBox::reject	/home/viper/projects/RBit/rmessagebox.h	/^    virtual void reject();       $/;"	p	class:RMessageBox	access:public	signature:()
RMessageBox::repaintImpl	/home/viper/projects/RBit/rmessagebox.cpp	/^void RMessageBox::repaintImpl(const RRect& r)$/;"	f	class:RMessageBox	signature:(const RRect& r)
RMessageBox::repaintImpl	/home/viper/projects/RBit/rmessagebox.h	/^    virtual void repaintImpl(const RRect& r);$/;"	p	class:RMessageBox	access:protected	signature:(const RRect& r)
RMessageBox::setButtonSize	/home/viper/projects/RBit/rmessagebox.h	/^    void setButtonSize(const RSize& s);$/;"	p	class:RMessageBox	access:public	signature:(const RSize& s)
RMessageBox::setButtonSize	/home/viper/projects/RBit/rmessagebox.h	/^inline void RMessageBox::setButtonSize(const RSize& s)$/;"	f	class:RMessageBox	signature:(const RSize& s)
RMessageBox::setCaption	/home/viper/projects/RBit/rmessagebox.h	/^    void setCaption(const char* text);   $/;"	p	class:RMessageBox	access:public	signature:(const char* text)
RMessageBox::setGeometry	/home/viper/projects/RBit/rmessagebox.cpp	/^void RMessageBox::setGeometry(const RPoint& p, const RSize& s)$/;"	f	class:RMessageBox	signature:(const RPoint& p, const RSize& s)
RMessageBox::setGeometry	/home/viper/projects/RBit/rmessagebox.h	/^    virtual void setGeometry(const RPoint& p, const RSize& s);$/;"	p	class:RMessageBox	access:public	signature:(const RPoint& p, const RSize& s)
RMessageBox::setIcon	/home/viper/projects/RBit/rmessagebox.h	/^    void setIcon (Icon);$/;"	p	class:RMessageBox	access:public	signature:(Icon)
RMessageBox::setIcon	/home/viper/projects/RBit/rmessagebox.h	/^inline void RMessageBox::setIcon(Icon i)$/;"	f	class:RMessageBox	signature:(Icon i)
RMessageBox::setText	/home/viper/projects/RBit/rmessagebox.h	/^    void setText(const char* text);  $/;"	p	class:RMessageBox	access:public	signature:(const char* text)
RMessageBox::setText	/home/viper/projects/RBit/rmessagebox.h	/^inline void RMessageBox::setText(const char* str)$/;"	f	class:RMessageBox	signature:(const char* str)
RMessageBox::text	/home/viper/projects/RBit/rmessagebox.h	/^    const char* text() const;$/;"	p	class:RMessageBox	access:public	signature:() const
RMessageBox::text	/home/viper/projects/RBit/rmessagebox.h	/^inline const char* RMessageBox::text() const$/;"	f	class:RMessageBox	signature:() const
RMessageBox::warning	/home/viper/projects/RBit/rmessagebox.cpp	/^int RMessageBox::warning(RWidget* parent, const char* caption, const char* text, $/;"	f	class:RMessageBox	signature:(RWidget* parent, const char* caption, const char* text, int button0, int button1, int button2)
RMessageBox::warning	/home/viper/projects/RBit/rmessagebox.h	/^    static int warning(RWidget* parent, const char* caption, const char* text, $/;"	p	class:RMessageBox	access:public	signature:(RWidget* parent, const char* caption, const char* text, int button0 = Ok | Default | Escape, int button1 = NoButton, int button2 = NoButton)
RMetaObject	/home/viper/projects/RBit/rwidget.cpp	/^RMetaObject::RMetaObject(const char* classname, const char* superclassname)$/;"	f	class:RMetaObject	signature:(const char* classname, const char* superclassname)
RMetaObject	/home/viper/projects/RBit/rwidget.h	/^    RMetaObject(const char* classname, const char* superclassname);$/;"	p	class:RMetaObject	access:private	signature:(const char* classname, const char* superclassname)
RMetaObject	/home/viper/projects/RBit/rwidget.h	/^class RBIT_CORE_EXPORT RMetaObject$/;"	c
RMetaObject::RMetaObject	/home/viper/projects/RBit/rwidget.cpp	/^RMetaObject::RMetaObject(const char* classname, const char* superclassname)$/;"	f	class:RMetaObject	signature:(const char* classname, const char* superclassname)
RMetaObject::RMetaObject	/home/viper/projects/RBit/rwidget.h	/^    RMetaObject(const char* classname, const char* superclassname);$/;"	p	class:RMetaObject	access:private	signature:(const char* classname, const char* superclassname)
RMetaObject::className	/home/viper/projects/RBit/rwidget.h	/^    inline const char* className() const$/;"	f	class:RMetaObject	access:public	signature:() const
RMetaObject::inherits	/home/viper/projects/RBit/rwidget.cpp	/^bool RMetaObject::inherits(const char* className)$/;"	f	class:RMetaObject	signature:(const char* className)
RMetaObject::inherits	/home/viper/projects/RBit/rwidget.h	/^    bool inherits(const char* className);$/;"	p	class:RMetaObject	access:public	signature:(const char* className)
RMetaObject::instance	/home/viper/projects/RBit/rwidget.cpp	/^RMetaObject* RMetaObject::instance(const char* classname, const char* superclassname)$/;"	f	class:RMetaObject	signature:(const char* classname, const char* superclassname)
RMetaObject::instance	/home/viper/projects/RBit/rwidget.h	/^    static RMetaObject* instance(const char* classname, const char* superclassname = "");$/;"	p	class:RMetaObject	access:public	signature:(const char* classname, const char* superclassname = ”)
RMetaObject::m_className	/home/viper/projects/RBit/rwidget.h	/^    const char* m_className;$/;"	m	class:RMetaObject	access:private
RMetaObject::m_superClassName	/home/viper/projects/RBit/rwidget.h	/^    const char* m_superClassName;$/;"	m	class:RMetaObject	access:private
RMetaObject::superClassName	/home/viper/projects/RBit/rwidget.h	/^    inline const char* superClassName() const$/;"	f	class:RMetaObject	access:public	signature:() const
RMetaRegistrator	/home/viper/projects/RBit/rwidget.h	/^    RMetaRegistrator() {}$/;"	f	class:RMetaRegistrator	access:private	signature:()
RMetaRegistrator	/home/viper/projects/RBit/rwidget.h	/^class RBIT_CORE_EXPORT RMetaRegistrator$/;"	c
RMetaRegistrator::MetaObjects	/home/viper/projects/RBit/rwidget.h	/^    typedef std::map<const char*, RMetaObject*, StrCmp> MetaObjects;$/;"	t	class:RMetaRegistrator	access:private
RMetaRegistrator::RMetaRegistrator	/home/viper/projects/RBit/rwidget.h	/^    RMetaRegistrator() {}$/;"	f	class:RMetaRegistrator	access:private	signature:()
RMetaRegistrator::StrCmp	/home/viper/projects/RBit/rwidget.h	/^    struct StrCmp$/;"	s	class:RMetaRegistrator	access:private
RMetaRegistrator::StrCmp::operator ()	/home/viper/projects/RBit/rwidget.h	/^        bool operator() (const char* t1, const char* t2) const$/;"	f	struct:RMetaRegistrator::StrCmp	access:public	signature:(const char* t1, const char* t2) const
RMetaRegistrator::instance	/home/viper/projects/RBit/rwidget.cpp	/^RMetaRegistrator* RMetaRegistrator::instance()$/;"	f	class:RMetaRegistrator	signature:()
RMetaRegistrator::instance	/home/viper/projects/RBit/rwidget.h	/^    static RMetaRegistrator* instance();$/;"	p	class:RMetaRegistrator	access:public	signature:()
RMetaRegistrator::metaObject	/home/viper/projects/RBit/rwidget.cpp	/^RMetaObject* RMetaRegistrator::metaObject(const char* className)$/;"	f	class:RMetaRegistrator	signature:(const char* className)
RMetaRegistrator::metaObject	/home/viper/projects/RBit/rwidget.h	/^    RMetaObject* metaObject(const char* className);$/;"	p	class:RMetaRegistrator	access:public	signature:(const char* className)
RMetaRegistrator::metaObjects	/home/viper/projects/RBit/rwidget.h	/^    MetaObjects metaObjects;$/;"	m	class:RMetaRegistrator	access:private
RMetaRegistrator::operator =	/home/viper/projects/RBit/rwidget.h	/^    RMetaRegistrator& operator=(const RMetaRegistrator&);$/;"	p	class:RMetaRegistrator	access:private	signature:(const RMetaRegistrator&)
RMetaRegistrator::registerMetaObject	/home/viper/projects/RBit/rwidget.cpp	/^void RMetaRegistrator::registerMetaObject(const char* className, RMetaObject* obj)$/;"	f	class:RMetaRegistrator	signature:(const char* className, RMetaObject* obj)
RMetaRegistrator::registerMetaObject	/home/viper/projects/RBit/rwidget.h	/^    void registerMetaObject(const char* className, RMetaObject* obj);$/;"	p	class:RMetaRegistrator	access:public	signature:(const char* className, RMetaObject* obj)
RMetaRegistrator::~RMetaRegistrator	/home/viper/projects/RBit/rwidget.cpp	/^RMetaRegistrator::~RMetaRegistrator()$/;"	f	class:RMetaRegistrator	signature:()
RMetaRegistrator::~RMetaRegistrator	/home/viper/projects/RBit/rwidget.h	/^    ~RMetaRegistrator();$/;"	p	class:RMetaRegistrator	access:private	signature:()
RModelDataType	/home/viper/projects/RBit/rgridmodeldatatype.h	/^    RModelDataType<MDT_Number>() {}$/;"	f	class:RModelDataType	access:private	signature:()
RModelDataType	/home/viper/projects/RBit/rgridmodeldatatype.h	/^    RModelDataType<MDT_Text>() {}$/;"	f	class:RModelDataType	access:private	signature:()
RModelDataType	/home/viper/projects/RBit/rgridmodeldatatype.h	/^class RModelDataType : public RModelDataTypeBase$/;"	c	inherits:RModelDataTypeBase
RModelDataType	/home/viper/projects/RBit/rgridmodeldatatype.h	/^class RModelDataType<MDT_Number> : public RModelDataTypeBase$/;"	c	inherits:RModelDataTypeBase
RModelDataType	/home/viper/projects/RBit/rgridmodeldatatype.h	/^class RModelDataType<MDT_Text> : public RModelDataTypeBase$/;"	c	inherits:RModelDataTypeBase
RModelDataType::RModelDataType	/home/viper/projects/RBit/rgridmodeldatatype.h	/^    RModelDataType<MDT_Number>() {}$/;"	f	class:RModelDataType	access:private	signature:()
RModelDataType::RModelDataType	/home/viper/projects/RBit/rgridmodeldatatype.h	/^    RModelDataType<MDT_Text>() {}$/;"	f	class:RModelDataType	access:private	signature:()
RModelDataType::compare	/home/viper/projects/RBit/rgridmodeldatatype.h	/^    virtual int compare(const char* lh, const char* rh) const$/;"	f	class:RModelDataType	access:public	signature:(const char* lh, const char* rh) const
RModelDataType::instance	/home/viper/projects/RBit/rgridmodeldatatype.h	/^    static RModelDataType<MDT_Number>* instance() $/;"	f	class:RModelDataType	access:public	signature:()
RModelDataType::instance	/home/viper/projects/RBit/rgridmodeldatatype.h	/^    static RModelDataType<MDT_Text>* instance() $/;"	f	class:RModelDataType	access:public	signature:()
RModelDataType::rtti	/home/viper/projects/RBit/rgridmodeldatatype.h	/^    virtual int rtti() const$/;"	f	class:RModelDataType	access:public	signature:() const
RModelDataTypeBase	/home/viper/projects/RBit/rgridmodeldatatype.h	/^class RModelDataTypeBase$/;"	c
RModelDataTypeBase::compare	/home/viper/projects/RBit/rgridmodeldatatype.h	/^    virtual int compare(const char* lh, const char* rh) const = 0;$/;"	p	class:RModelDataTypeBase	access:public	signature:(const char* lh, const char* rh) const
RModelDataTypeBase::rtti	/home/viper/projects/RBit/rgridmodeldatatype.h	/^    virtual int rtti() const = 0;$/;"	p	class:RModelDataTypeBase	access:public	signature:() const
RMultilineLabel	/home/viper/projects/RBit/rmultilinelabel.h	/^	RMultilineLabel(const RMultilineLabel&);$/;"	p	class:RMultilineLabel	access:private	signature:(const RMultilineLabel&)
RMultilineLabel	/home/viper/projects/RBit/rmultilinelabel.h	/^    RMultilineLabel(RWidget* parent = 0, RWFlags f = RWFlags(0));$/;"	p	class:RMultilineLabel	access:public	signature:(RWidget* parent = 0, RWFlags f = RWFlags(0))
RMultilineLabel	/home/viper/projects/RBit/rmultilinelabel.h	/^class RBIT_CORE_EXPORT RMultilineLabel : public RLabel$/;"	c	inherits:RLabel
RMultilineLabel	/home/viper/projects/RBit/rmultilinelabel.h	/^inline RMultilineLabel::RMultilineLabel(RWidget* parent, RWFlags f) $/;"	f	class:RMultilineLabel	signature:(RWidget* parent, RWFlags f)
RMultilineLabel::RMultilineLabel	/home/viper/projects/RBit/rmultilinelabel.h	/^	RMultilineLabel(const RMultilineLabel&);$/;"	p	class:RMultilineLabel	access:private	signature:(const RMultilineLabel&)
RMultilineLabel::RMultilineLabel	/home/viper/projects/RBit/rmultilinelabel.h	/^    RMultilineLabel(RWidget* parent = 0, RWFlags f = RWFlags(0));$/;"	p	class:RMultilineLabel	access:public	signature:(RWidget* parent = 0, RWFlags f = RWFlags(0))
RMultilineLabel::RMultilineLabel	/home/viper/projects/RBit/rmultilinelabel.h	/^inline RMultilineLabel::RMultilineLabel(RWidget* parent, RWFlags f) $/;"	f	class:RMultilineLabel	signature:(RWidget* parent, RWFlags f)
RMultilineLabel::clearFormating	/home/viper/projects/RBit/rmultilinelabel.h	/^	void clearFormating();$/;"	p	class:RMultilineLabel	access:private	signature:()
RMultilineLabel::clearFormating	/home/viper/projects/RBit/rmultilinelabel.h	/^inline void RMultilineLabel::clearFormating()$/;"	f	class:RMultilineLabel	signature:()
RMultilineLabel::m_parag	/home/viper/projects/RBit/rmultilinelabel.h	/^	mutable RTextParag* m_parag;$/;"	m	class:RMultilineLabel	access:private
RMultilineLabel::operator =	/home/viper/projects/RBit/rmultilinelabel.h	/^	RMultilineLabel& operator=(const RMultilineLabel&);$/;"	p	class:RMultilineLabel	access:private	signature:(const RMultilineLabel&)
RMultilineLabel::repaintImpl	/home/viper/projects/RBit/rmultilinelabel.cpp	/^void RMultilineLabel::repaintImpl(const RRect& r)$/;"	f	class:RMultilineLabel	signature:(const RRect& r)
RMultilineLabel::repaintImpl	/home/viper/projects/RBit/rmultilinelabel.h	/^    virtual void		repaintImpl(const RRect& r);    $/;"	p	class:RMultilineLabel	access:protected	signature:(const RRect& r)
RMultilineLabel::setGeometry	/home/viper/projects/RBit/rmultilinelabel.cpp	/^void RMultilineLabel::setGeometry(const RPoint& p, const RSize& s)$/;"	f	class:RMultilineLabel	signature:(const RPoint& p, const RSize& s)
RMultilineLabel::setGeometry	/home/viper/projects/RBit/rmultilinelabel.h	/^	virtual void		setGeometry(const RPoint& p, const RSize& s);	$/;"	p	class:RMultilineLabel	access:public	signature:(const RPoint& p, const RSize& s)
RMultilineLabel::setText	/home/viper/projects/RBit/rmultilinelabel.cpp	/^void RMultilineLabel::setText(const char* str)$/;"	f	class:RMultilineLabel	signature:(const char* str)
RMultilineLabel::setText	/home/viper/projects/RBit/rmultilinelabel.h	/^    virtual void		setText(const char* str);$/;"	p	class:RMultilineLabel	access:public	signature:(const char* str)
RMultilineLabel::setTextRef	/home/viper/projects/RBit/rmultilinelabel.cpp	/^void RMultilineLabel::setTextRef(const char* str)$/;"	f	class:RMultilineLabel	signature:(const char* str)
RMultilineLabel::setTextRef	/home/viper/projects/RBit/rmultilinelabel.h	/^	virtual void        setTextRef(const char* str);$/;"	p	class:RMultilineLabel	access:public	signature:(const char* str)
RMultilineLabel::textBoundingRect	/home/viper/projects/RBit/rmultilinelabel.cpp	/^RRect RMultilineLabel::textBoundingRect(Uint16 width) const$/;"	f	class:RMultilineLabel	signature:(Uint16 width) const
RMultilineLabel::textBoundingRect	/home/viper/projects/RBit/rmultilinelabel.h	/^	RRect				textBoundingRect() const;	$/;"	p	class:RMultilineLabel	access:public	signature:() const
RMultilineLabel::textBoundingRect	/home/viper/projects/RBit/rmultilinelabel.h	/^	RRect				textBoundingRect(Uint16 width) const;$/;"	p	class:RMultilineLabel	access:public	signature:(Uint16 width) const
RMultilineLabel::textBoundingRect	/home/viper/projects/RBit/rmultilinelabel.h	/^inline RRect RMultilineLabel::textBoundingRect() const$/;"	f	class:RMultilineLabel	signature:() const
RMultilineLabel::textSize	/home/viper/projects/RBit/rmultilinelabel.h	/^	RSize				textSize() const;$/;"	p	class:RMultilineLabel	access:public	signature:() const
RMultilineLabel::textSize	/home/viper/projects/RBit/rmultilinelabel.h	/^inline RSize RMultilineLabel::textSize() const$/;"	f	class:RMultilineLabel	signature:() const
RMultilineLabel::~RMultilineLabel	/home/viper/projects/RBit/rmultilinelabel.h	/^	virtual ~RMultilineLabel();$/;"	p	class:RMultilineLabel	access:public	signature:()
RMultilineLabel::~RMultilineLabel	/home/viper/projects/RBit/rmultilinelabel.h	/^inline RMultilineLabel::~RMultilineLabel()$/;"	f	class:RMultilineLabel	signature:()
RObserver	/home/viper/projects/RBit/rsubjectobserver.h	/^	RObserver(Subject* subject = 0)$/;"	f	class:RObserver	access:public	signature:(Subject* subject = 0)
RObserver	/home/viper/projects/RBit/rsubjectobserver.h	/^class RObserver : public RSimpleListNode<typename RSubject<S>::Observer> {$/;"	c	inherits:RSimpleListNode
RObserver::RObserver	/home/viper/projects/RBit/rsubjectobserver.h	/^	RObserver(Subject* subject = 0)$/;"	f	class:RObserver	access:public	signature:(Subject* subject = 0)
RObserver::Subject	/home/viper/projects/RBit/rsubjectobserver.h	/^	typedef S Subject;$/;"	t	class:RObserver	access:public
RObserver::SubjectList	/home/viper/projects/RBit/rsubjectobserver.h	/^    typedef RSimpleList<SubjectListNode> SubjectList;$/;"	t	class:RObserver	access:private
RObserver::SubjectListNode	/home/viper/projects/RBit/rsubjectobserver.h	/^    typedef RSimpleListNode<Subject> SubjectListNode;$/;"	t	class:RObserver	access:private
RObserver::firstSubject	/home/viper/projects/RBit/rsubjectobserver.h	/^    Subject* firstSubject() const$/;"	f	class:RObserver	access:public	signature:() const
RObserver::isObserverEnabled	/home/viper/projects/RBit/rsubjectobserver.h	/^	bool isObserverEnabled() const$/;"	f	class:RObserver	access:public	signature:() const
RObserver::m_enabled	/home/viper/projects/RBit/rsubjectobserver.h	/^	bool m_enabled;$/;"	m	class:RObserver	access:private
RObserver::m_subjects	/home/viper/projects/RBit/rsubjectobserver.h	/^    SubjectList m_subjects;$/;"	m	class:RObserver	access:private
RObserver::nextObserver	/home/viper/projects/RBit/rsubjectobserver.h	/^    inline typename RSubject<Subject>::Observer* nextObserver() const$/;"	f	class:RObserver	access:public	signature:() const
RObserver::removeSubject	/home/viper/projects/RBit/rsubjectobserver.h	/^    void removeSubject(Subject* s) $/;"	f	class:RObserver	access:public	signature:(Subject* s)
RObserver::setObserverEnabled	/home/viper/projects/RBit/rsubjectobserver.h	/^	void setObserverEnabled(bool enabled = true)$/;"	f	class:RObserver	access:public	signature:(bool enabled = true)
RObserver::setSubject	/home/viper/projects/RBit/rsubjectobserver.h	/^    void setSubject(Subject* subject)$/;"	f	class:RObserver	access:public	signature:(Subject* subject)
RObserver::subjectAdded	/home/viper/projects/RBit/rsubjectobserver.h	/^	virtual void subjectAdded(Subject* s)$/;"	f	class:RObserver	access:protected	signature:(Subject* s)
RObserver::subjectRemoved	/home/viper/projects/RBit/rsubjectobserver.h	/^	virtual void subjectRemoved(Subject* s)$/;"	f	class:RObserver	access:protected	signature:(Subject* s)
RObserver::~RObserver	/home/viper/projects/RBit/rsubjectobserver.h	/^    ~RObserver()$/;"	f	class:RObserver	access:public	signature:()
RPALETTE_H	/home/viper/projects/RBit/rpalette.h	2;"	d
RPOINT_H	/home/viper/projects/RBit/rpoint.h	2;"	d
RPalette	/home/viper/projects/RBit/rpalette.cpp	/^RPalette::RPalette()$/;"	f	class:RPalette	signature:()
RPalette	/home/viper/projects/RBit/rpalette.cpp	/^RPalette::RPalette(RBit::GlobalColor button)$/;"	f	class:RPalette	signature:(RBit::GlobalColor button)
RPalette	/home/viper/projects/RBit/rpalette.cpp	/^RPalette::RPalette(const RColor& button)$/;"	f	class:RPalette	signature:(const RColor& button)
RPalette	/home/viper/projects/RBit/rpalette.cpp	/^RPalette::RPalette(const RColor& button, const RColor& window)$/;"	f	class:RPalette	signature:(const RColor& button, const RColor& window)
RPalette	/home/viper/projects/RBit/rpalette.cpp	/^RPalette::RPalette(const RColor& windowText, const RColor& button,$/;"	f	class:RPalette	signature:(const RColor& windowText, const RColor& button, const RColor& light, const RColor& dark, const RColor& mid, const RColor& text, const RColor& bright_text, const RColor& base, const RColor& window)
RPalette	/home/viper/projects/RBit/rpalette.cpp	/^RPalette::RPalette(const RPalette& p)$/;"	f	class:RPalette	signature:(const RPalette& p)
RPalette	/home/viper/projects/RBit/rpalette.h	/^    RPalette();$/;"	p	class:RPalette	access:public	signature:()
RPalette	/home/viper/projects/RBit/rpalette.h	/^    RPalette(RBit::GlobalColor button);$/;"	p	class:RPalette	access:public	signature:(RBit::GlobalColor button)
RPalette	/home/viper/projects/RBit/rpalette.h	/^    RPalette(const RColor& button);$/;"	p	class:RPalette	access:public	signature:(const RColor& button)
RPalette	/home/viper/projects/RBit/rpalette.h	/^    RPalette(const RColor& button, const RColor& window);$/;"	p	class:RPalette	access:public	signature:(const RColor& button, const RColor& window)
RPalette	/home/viper/projects/RBit/rpalette.h	/^    RPalette(const RColor& windowText, const RColor& button,$/;"	p	class:RPalette	access:public	signature:(const RColor& windowText, const RColor& button, const RColor& light, const RColor& dark, const RColor& mid, const RColor& text, const RColor& bright_text, const RColor& base, const RColor& window)
RPalette	/home/viper/projects/RBit/rpalette.h	/^    RPalette(const RPalette& palette);$/;"	p	class:RPalette	access:public	signature:(const RPalette& palette)
RPalette	/home/viper/projects/RBit/rpalette.h	/^class RBIT_CORE_EXPORT RPalette$/;"	c
RPalette::AlternateBase	/home/viper/projects/RBit/rpalette.h	/^					AlternateBase,$/;"	e	enum:RPalette::ColorRole
RPalette::Base	/home/viper/projects/RBit/rpalette.h	/^					Base, $/;"	e	enum:RPalette::ColorRole
RPalette::BrightText	/home/viper/projects/RBit/rpalette.h	/^					BrightText, $/;"	e	enum:RPalette::ColorRole
RPalette::Button	/home/viper/projects/RBit/rpalette.h	/^					Button, $/;"	e	enum:RPalette::ColorRole
RPalette::ButtonText	/home/viper/projects/RBit/rpalette.h	/^					ButtonText, $/;"	e	enum:RPalette::ColorRole
RPalette::ColorRole	/home/viper/projects/RBit/rpalette.h	/^    enum ColorRole {WindowText, $/;"	g	class:RPalette	access:public
RPalette::Dark	/home/viper/projects/RBit/rpalette.h	/^					Dark, $/;"	e	enum:RPalette::ColorRole
RPalette::Highlight	/home/viper/projects/RBit/rpalette.h	/^                    Highlight, $/;"	e	enum:RPalette::ColorRole
RPalette::HighlightedText	/home/viper/projects/RBit/rpalette.h	/^					HighlightedText, $/;"	e	enum:RPalette::ColorRole
RPalette::Light	/home/viper/projects/RBit/rpalette.h	/^					Light, $/;"	e	enum:RPalette::ColorRole
RPalette::Mid	/home/viper/projects/RBit/rpalette.h	/^					Mid,$/;"	e	enum:RPalette::ColorRole
RPalette::Midlight	/home/viper/projects/RBit/rpalette.h	/^					Midlight, $/;"	e	enum:RPalette::ColorRole
RPalette::NColorRoles	/home/viper/projects/RBit/rpalette.h	/^					NColorRoles,	\/\/˝Ú‡ ıÂÌ¸ ‡Ì‡ÎÓ„ Count, ÚÓÎ¸ÍÓ Ì‡Á‚‡Ì‡ ÌÂ ÒÚ‡Ì‰‡ÚÌÓ, ÒÓÓÚ‚ÚÒÚ ‰ÓÎÊÌ˚ ·˚Ú¸ ÔÓÒÎÂ‰ÌÂÈ$/;"	e	enum:RPalette::ColorRole
RPalette::NoRole	/home/viper/projects/RBit/rpalette.h	/^					NoRole = NColorRoles };$/;"	e	enum:RPalette::ColorRole
RPalette::RPalette	/home/viper/projects/RBit/rpalette.cpp	/^RPalette::RPalette()$/;"	f	class:RPalette	signature:()
RPalette::RPalette	/home/viper/projects/RBit/rpalette.cpp	/^RPalette::RPalette(RBit::GlobalColor button)$/;"	f	class:RPalette	signature:(RBit::GlobalColor button)
RPalette::RPalette	/home/viper/projects/RBit/rpalette.cpp	/^RPalette::RPalette(const RColor& button)$/;"	f	class:RPalette	signature:(const RColor& button)
RPalette::RPalette	/home/viper/projects/RBit/rpalette.cpp	/^RPalette::RPalette(const RColor& button, const RColor& window)$/;"	f	class:RPalette	signature:(const RColor& button, const RColor& window)
RPalette::RPalette	/home/viper/projects/RBit/rpalette.cpp	/^RPalette::RPalette(const RColor& windowText, const RColor& button,$/;"	f	class:RPalette	signature:(const RColor& windowText, const RColor& button, const RColor& light, const RColor& dark, const RColor& mid, const RColor& text, const RColor& bright_text, const RColor& base, const RColor& window)
RPalette::RPalette	/home/viper/projects/RBit/rpalette.cpp	/^RPalette::RPalette(const RPalette& p)$/;"	f	class:RPalette	signature:(const RPalette& p)
RPalette::RPalette	/home/viper/projects/RBit/rpalette.h	/^    RPalette();$/;"	p	class:RPalette	access:public	signature:()
RPalette::RPalette	/home/viper/projects/RBit/rpalette.h	/^    RPalette(RBit::GlobalColor button);$/;"	p	class:RPalette	access:public	signature:(RBit::GlobalColor button)
RPalette::RPalette	/home/viper/projects/RBit/rpalette.h	/^    RPalette(const RColor& button);$/;"	p	class:RPalette	access:public	signature:(const RColor& button)
RPalette::RPalette	/home/viper/projects/RBit/rpalette.h	/^    RPalette(const RColor& button, const RColor& window);$/;"	p	class:RPalette	access:public	signature:(const RColor& button, const RColor& window)
RPalette::RPalette	/home/viper/projects/RBit/rpalette.h	/^    RPalette(const RColor& windowText, const RColor& button,$/;"	p	class:RPalette	access:public	signature:(const RColor& windowText, const RColor& button, const RColor& light, const RColor& dark, const RColor& mid, const RColor& text, const RColor& bright_text, const RColor& base, const RColor& window)
RPalette::RPalette	/home/viper/projects/RBit/rpalette.h	/^    RPalette(const RPalette& palette);$/;"	p	class:RPalette	access:public	signature:(const RPalette& palette)
RPalette::RPalettePrivate	/home/viper/projects/RBit/rpalette.cpp	/^class RPalette::RPalettePrivate {$/;"	c	class:RPalette	file:
RPalette::RPalettePrivate::RPalettePrivate	/home/viper/projects/RBit/rpalette.cpp	/^    RPalettePrivate() : rc(0) { }$/;"	f	class:RPalette::RPalettePrivate	access:public	signature:()
RPalette::RPalettePrivate::col	/home/viper/projects/RBit/rpalette.cpp	/^    RColor col[RPalette::NColorRoles];$/;"	m	class:RPalette::RPalettePrivate	file:	access:public
RPalette::RPalettePrivate::rc	/home/viper/projects/RBit/rpalette.cpp	/^    mutable Uint32* rc;$/;"	m	class:RPalette::RPalettePrivate	file:	access:public
RPalette::SELECTED_BUTTON	/home/viper/projects/RBit/rpalette.h	/^					SELECTED_BUTTON,			\/\/ÙÓÌ ‚˚·‡ÌÌÓÈ ÍÌÓÔÍË$/;"	e	enum:RPalette::ColorRole
RPalette::SELECTED_BUTTON_TEXT	/home/viper/projects/RBit/rpalette.h	/^					SELECTED_BUTTON_TEXT,		\/\/ÚÂÍÒÚ ‚˚·‡ÌÌÓÈ ÍÌÓÔÍË$/;"	e	enum:RPalette::ColorRole
RPalette::SelectedButton	/home/viper/projects/RBit/rpalette.h	/^	inline const RColor& SelectedButton() const { return color(SELECTED_BUTTON); }$/;"	f	class:RPalette	access:public	signature:() const
RPalette::SelectedButtonText	/home/viper/projects/RBit/rpalette.h	/^	inline const RColor& SelectedButtonText() const { return color(SELECTED_BUTTON_TEXT); }$/;"	f	class:RPalette	access:public	signature:() const
RPalette::Shadow	/home/viper/projects/RBit/rpalette.h	/^					Shadow,$/;"	e	enum:RPalette::ColorRole
RPalette::Text	/home/viper/projects/RBit/rpalette.h	/^                    Text, $/;"	e	enum:RPalette::ColorRole
RPalette::Window	/home/viper/projects/RBit/rpalette.h	/^					Window, $/;"	e	enum:RPalette::ColorRole
RPalette::WindowText	/home/viper/projects/RBit/rpalette.h	/^    enum ColorRole {WindowText, $/;"	e	enum:RPalette::ColorRole
RPalette::alternateBase	/home/viper/projects/RBit/rpalette.h	/^    inline const RColor& alternateBase() const { return color(AlternateBase); }$/;"	f	class:RPalette	access:public	signature:() const
RPalette::base	/home/viper/projects/RBit/rpalette.h	/^    inline const RColor& base() const { return color(Base); }$/;"	f	class:RPalette	access:public	signature:() const
RPalette::brightText	/home/viper/projects/RBit/rpalette.h	/^    inline const RColor& brightText() const { return color(BrightText); }$/;"	f	class:RPalette	access:public	signature:() const
RPalette::button	/home/viper/projects/RBit/rpalette.h	/^    inline const RColor& button() const { return color(Button); }$/;"	f	class:RPalette	access:public	signature:() const
RPalette::buttonText	/home/viper/projects/RBit/rpalette.h	/^    inline const RColor& buttonText() const { return color(ButtonText); }$/;"	f	class:RPalette	access:public	signature:() const
RPalette::color	/home/viper/projects/RBit/rpalette.cpp	/^const RColor& RPalette::color(ColorRole cr) const$/;"	f	class:RPalette	signature:(ColorRole cr) const
RPalette::color	/home/viper/projects/RBit/rpalette.h	/^    const RColor& color(ColorRole cr) const;$/;"	p	class:RPalette	access:public	signature:(ColorRole cr) const
RPalette::dark	/home/viper/projects/RBit/rpalette.h	/^    inline const RColor& dark() const { return color(Dark); }$/;"	f	class:RPalette	access:public	signature:() const
RPalette::detach	/home/viper/projects/RBit/rpalette.cpp	/^void RPalette::detach()$/;"	f	class:RPalette	signature:()
RPalette::detach	/home/viper/projects/RBit/rpalette.h	/^    void detach();$/;"	p	class:RPalette	access:private	signature:()
RPalette::highlight	/home/viper/projects/RBit/rpalette.h	/^    inline const RColor& highlight() const { return color(Highlight); }$/;"	f	class:RPalette	access:public	signature:() const
RPalette::highlightedText	/home/viper/projects/RBit/rpalette.h	/^    inline const RColor& highlightedText() const { return color(HighlightedText); }$/;"	f	class:RPalette	access:public	signature:() const
RPalette::init	/home/viper/projects/RBit/rpalette.cpp	/^void RPalette::init() $/;"	f	class:RPalette	signature:()
RPalette::init	/home/viper/projects/RBit/rpalette.h	/^    void init();$/;"	p	class:RPalette	access:private	signature:()
RPalette::isCopyOf	/home/viper/projects/RBit/rpalette.cpp	/^bool RPalette::isCopyOf(const RPalette& p) const$/;"	f	class:RPalette	signature:(const RPalette& p) const
RPalette::isCopyOf	/home/viper/projects/RBit/rpalette.h	/^    bool isCopyOf(const RPalette& p) const;$/;"	p	class:RPalette	access:public	signature:(const RPalette& p) const
RPalette::light	/home/viper/projects/RBit/rpalette.h	/^    inline const RColor& light() const { return color(Light); }$/;"	f	class:RPalette	access:public	signature:() const
RPalette::m_d	/home/viper/projects/RBit/rpalette.h	/^    RPalettePrivate *m_d;    $/;"	m	class:RPalette	access:private
RPalette::m_resolveMask	/home/viper/projects/RBit/rpalette.h	/^    unsigned int m_resolveMask;$/;"	m	class:RPalette	access:private
RPalette::mid	/home/viper/projects/RBit/rpalette.h	/^    inline const RColor& mid() const { return color(Mid); }$/;"	f	class:RPalette	access:public	signature:() const
RPalette::midlight	/home/viper/projects/RBit/rpalette.h	/^    inline const RColor& midlight() const { return color(Midlight); }$/;"	f	class:RPalette	access:public	signature:() const
RPalette::operator !=	/home/viper/projects/RBit/rpalette.h	/^    inline bool operator!=(const RPalette& p) const { return !(operator==(p)); }$/;"	f	class:RPalette	access:public	signature:(const RPalette& p) const
RPalette::operator =	/home/viper/projects/RBit/rpalette.cpp	/^RPalette& RPalette::operator=(const RPalette& p)$/;"	f	class:RPalette	signature:(const RPalette& p)
RPalette::operator =	/home/viper/projects/RBit/rpalette.h	/^    RPalette& operator=(const RPalette& palette);$/;"	p	class:RPalette	access:public	signature:(const RPalette& palette)
RPalette::operator ==	/home/viper/projects/RBit/rpalette.cpp	/^bool RPalette::operator==(const RPalette& p) const$/;"	f	class:RPalette	signature:(const RPalette& p) const
RPalette::operator ==	/home/viper/projects/RBit/rpalette.h	/^    bool operator==(const RPalette& p) const;$/;"	p	class:RPalette	access:public	signature:(const RPalette& p) const
RPalette::resolve	/home/viper/projects/RBit/rpalette.cpp	/^RPalette RPalette::resolve(const RPalette& other) const$/;"	f	class:RPalette	signature:(const RPalette& other) const
RPalette::resolve	/home/viper/projects/RBit/rpalette.h	/^    RPalette resolve(const RPalette&) const;$/;"	p	class:RPalette	access:public	signature:(const RPalette&) const
RPalette::resolve	/home/viper/projects/RBit/rpalette.h	/^    inline unsigned int resolve() const { return m_resolveMask; }$/;"	f	class:RPalette	access:public	signature:() const
RPalette::resolve	/home/viper/projects/RBit/rpalette.h	/^    inline void resolve(unsigned int mask) { m_resolveMask = mask; }$/;"	f	class:RPalette	access:public	signature:(unsigned int mask)
RPalette::setColor	/home/viper/projects/RBit/rpalette.cpp	/^void RPalette::setColor(ColorRole cr, const RColor& b)$/;"	f	class:RPalette	signature:(ColorRole cr, const RColor& b)
RPalette::setColor	/home/viper/projects/RBit/rpalette.h	/^    void setColor(ColorRole cr, const RColor& color); $/;"	p	class:RPalette	access:public	signature:(ColorRole cr, const RColor& color)
RPalette::setPalette	/home/viper/projects/RBit/rpalette.cpp	/^void RPalette::setPalette(const RColor& windowText, const RColor& button,$/;"	f	class:RPalette	signature:(const RColor& windowText, const RColor& button, const RColor& light, const RColor& dark, const RColor& mid, const RColor& text, const RColor& bright_text, const RColor& base, const RColor& alternate_base, const RColor& window, const RColor& midlight, const RColor& button_text, const RColor& shadow, const RColor& highlight, const RColor& highlighted_text)
RPalette::setPalette	/home/viper/projects/RBit/rpalette.cpp	/^void RPalette::setPalette(const RColor& windowText, const RColor& button,$/;"	f	class:RPalette	signature:(const RColor& windowText, const RColor& button, const RColor& light, const RColor& dark, const RColor& mid, const RColor& text, const RColor& bright_text, const RColor& base, const RColor& window)
RPalette::setPalette	/home/viper/projects/RBit/rpalette.h	/^    void setPalette(const RColor& windowText, const RColor& button,$/;"	p	class:RPalette	access:private	signature:(const RColor& windowText, const RColor& button, const RColor& light, const RColor& dark, const RColor& mid, const RColor& text, const RColor& bright_text, const RColor& base, const RColor& alternate_base, const RColor& window, const RColor& midlight, const RColor& button_text, const RColor& shadow, const RColor& highlight, const RColor& highlighted_text)
RPalette::setPalette	/home/viper/projects/RBit/rpalette.h	/^    void setPalette(const RColor& windowText, const RColor& button,$/;"	p	class:RPalette	access:public	signature:(const RColor& windowText, const RColor& button, const RColor& light, const RColor& dark, const RColor& mid, const RColor& text, const RColor& bright_text, const RColor& base, const RColor& window)
RPalette::shadow	/home/viper/projects/RBit/rpalette.h	/^    inline const RColor& shadow() const { return color(Shadow); }$/;"	f	class:RPalette	access:public	signature:() const
RPalette::text	/home/viper/projects/RBit/rpalette.h	/^    inline const RColor& text() const { return color(Text); }$/;"	f	class:RPalette	access:public	signature:() const
RPalette::window	/home/viper/projects/RBit/rpalette.h	/^    inline const RColor& window() const { return color(Window); }$/;"	f	class:RPalette	access:public	signature:() const
RPalette::windowText	/home/viper/projects/RBit/rpalette.h	/^    inline const RColor& windowText() const { return color(WindowText); }$/;"	f	class:RPalette	access:public	signature:() const
RPalette::~RPalette	/home/viper/projects/RBit/rpalette.cpp	/^RPalette::~RPalette()$/;"	f	class:RPalette	signature:()
RPalette::~RPalette	/home/viper/projects/RBit/rpalette.h	/^    ~RPalette();$/;"	p	class:RPalette	access:public	signature:()
RPalettePrivate	/home/viper/projects/RBit/rpalette.cpp	/^    RPalettePrivate() : rc(0) { }$/;"	f	class:RPalette::RPalettePrivate	access:public	signature:()
RPalettePrivate	/home/viper/projects/RBit/rpalette.cpp	/^class RPalette::RPalettePrivate {$/;"	c	class:RPalette	file:
RPoint	/home/viper/projects/RBit/rpoint.h	/^    RPoint();$/;"	p	class:RPoint	access:public	signature:()
RPoint	/home/viper/projects/RBit/rpoint.h	/^    RPoint(Sint16 x, Sint16 y);$/;"	p	class:RPoint	access:public	signature:(Sint16 x, Sint16 y)
RPoint	/home/viper/projects/RBit/rpoint.h	/^class RPoint$/;"	c
RPoint	/home/viper/projects/RBit/rpoint.h	/^inline RPoint::RPoint() : m_x(0), $/;"	f	class:RPoint	signature:()
RPoint	/home/viper/projects/RBit/rpoint.h	/^inline RPoint::RPoint(Sint16 x, Sint16 y)$/;"	f	class:RPoint	signature:(Sint16 x, Sint16 y)
RPoint::RPoint	/home/viper/projects/RBit/rpoint.h	/^    RPoint();$/;"	p	class:RPoint	access:public	signature:()
RPoint::RPoint	/home/viper/projects/RBit/rpoint.h	/^    RPoint(Sint16 x, Sint16 y);$/;"	p	class:RPoint	access:public	signature:(Sint16 x, Sint16 y)
RPoint::RPoint	/home/viper/projects/RBit/rpoint.h	/^inline RPoint::RPoint() : m_x(0), $/;"	f	class:RPoint	signature:()
RPoint::RPoint	/home/viper/projects/RBit/rpoint.h	/^inline RPoint::RPoint(Sint16 x, Sint16 y)$/;"	f	class:RPoint	signature:(Sint16 x, Sint16 y)
RPoint::m_x	/home/viper/projects/RBit/rpoint.h	/^	Sint16 m_x;$/;"	m	class:RPoint	access:private
RPoint::m_y	/home/viper/projects/RBit/rpoint.h	/^	Sint16 m_y;$/;"	m	class:RPoint	access:private
RPoint::operator !=	/home/viper/projects/RBit/rpoint.h	/^    friend inline bool operator!= (const RPoint &, const RPoint&);$/;"	p	class:RPoint	access:friend	signature:(const RPoint &, const RPoint&)
RPoint::operator *	/home/viper/projects/RBit/rpoint.h	/^    friend inline const RPoint operator* (const RPoint&, double);    $/;"	p	class:RPoint	access:friend	signature:(const RPoint&, double)
RPoint::operator *	/home/viper/projects/RBit/rpoint.h	/^    friend inline const RPoint operator* (const RPoint&, int);$/;"	p	class:RPoint	access:friend	signature:(const RPoint&, int)
RPoint::operator *	/home/viper/projects/RBit/rpoint.h	/^    friend inline const RPoint operator* (int, const RPoint&);$/;"	p	class:RPoint	access:friend	signature:(int, const RPoint&)
RPoint::operator *=	/home/viper/projects/RBit/rpoint.h	/^    RPoint& operator*= (int i);    $/;"	p	class:RPoint	access:public	signature:(int i)
RPoint::operator *=	/home/viper/projects/RBit/rpoint.h	/^inline RPoint &RPoint::operator*= (int i)$/;"	f	class:RPoint	signature:(int i)
RPoint::operator +	/home/viper/projects/RBit/rpoint.h	/^    friend inline const RPoint operator+ (const RPoint&, const RPoint&);$/;"	p	class:RPoint	access:friend	signature:(const RPoint&, const RPoint&)
RPoint::operator +=	/home/viper/projects/RBit/rpoint.h	/^    RPoint& operator+= (const RPoint &p);$/;"	p	class:RPoint	access:public	signature:(const RPoint &p)
RPoint::operator +=	/home/viper/projects/RBit/rpoint.h	/^inline RPoint &RPoint::operator+= (const RPoint &p)$/;"	f	class:RPoint	signature:(const RPoint &p)
RPoint::operator -	/home/viper/projects/RBit/rpoint.h	/^    friend inline const RPoint operator- (const RPoint&);$/;"	p	class:RPoint	access:friend	signature:(const RPoint&)
RPoint::operator -	/home/viper/projects/RBit/rpoint.h	/^    friend inline const RPoint operator- (const RPoint&, const RPoint&);$/;"	p	class:RPoint	access:friend	signature:(const RPoint&, const RPoint&)
RPoint::operator -=	/home/viper/projects/RBit/rpoint.h	/^    RPoint& operator-= (const RPoint &p);$/;"	p	class:RPoint	access:public	signature:(const RPoint &p)
RPoint::operator -=	/home/viper/projects/RBit/rpoint.h	/^inline RPoint &RPoint::operator-= (const RPoint &p)$/;"	f	class:RPoint	signature:(const RPoint &p)
RPoint::operator /	/home/viper/projects/RBit/rpoint.h	/^    friend inline const RPoint operator\/ (const RPoint&, double);$/;"	p	class:RPoint	access:friend	signature:(const RPoint&, double)
RPoint::operator /	/home/viper/projects/RBit/rpoint.h	/^    friend inline const RPoint operator\/ (const RPoint&, int);$/;"	p	class:RPoint	access:friend	signature:(const RPoint&, int)
RPoint::operator /=	/home/viper/projects/RBit/rpoint.h	/^    RPoint& operator\/= (int i);    $/;"	p	class:RPoint	access:public	signature:(int i)
RPoint::operator /=	/home/viper/projects/RBit/rpoint.h	/^inline RPoint &RPoint::operator\/= (int i)$/;"	f	class:RPoint	signature:(int i)
RPoint::operator ==	/home/viper/projects/RBit/rpoint.h	/^    friend inline bool operator== (const RPoint &, const RPoint&);$/;"	p	class:RPoint	access:friend	signature:(const RPoint &, const RPoint&)
RPoint::setX	/home/viper/projects/RBit/rpoint.h	/^    void setX (Sint16 x);$/;"	p	class:RPoint	access:public	signature:(Sint16 x)
RPoint::setX	/home/viper/projects/RBit/rpoint.h	/^inline void RPoint::setX(Sint16 x)$/;"	f	class:RPoint	signature:(Sint16 x)
RPoint::setY	/home/viper/projects/RBit/rpoint.h	/^    void setY (Sint16 y);$/;"	p	class:RPoint	access:public	signature:(Sint16 y)
RPoint::setY	/home/viper/projects/RBit/rpoint.h	/^inline void RPoint::setY(Sint16 y)$/;"	f	class:RPoint	signature:(Sint16 y)
RPoint::x	/home/viper/projects/RBit/rpoint.h	/^    Sint16 x() const;$/;"	p	class:RPoint	access:public	signature:() const
RPoint::x	/home/viper/projects/RBit/rpoint.h	/^inline Sint16 RPoint::x() const$/;"	f	class:RPoint	signature:() const
RPoint::y	/home/viper/projects/RBit/rpoint.h	/^    Sint16 y() const;$/;"	p	class:RPoint	access:public	signature:() const
RPoint::y	/home/viper/projects/RBit/rpoint.h	/^inline Sint16 RPoint::y() const$/;"	f	class:RPoint	signature:() const
RRANDOM_GENERATOR_H	/home/viper/projects/RBit/rrandomgenerator.h	2;"	d
RRECT_H	/home/viper/projects/RBit/rrect.h	2;"	d
RRandomGenerator	/home/viper/projects/RBit/rrandomgenerator.h	/^    RRandomGenerator()$/;"	f	class:RRandomGenerator	access:private	signature:()
RRandomGenerator	/home/viper/projects/RBit/rrandomgenerator.h	/^    RRandomGenerator(const RRandomGenerator&);$/;"	p	class:RRandomGenerator	access:private	signature:(const RRandomGenerator&)
RRandomGenerator	/home/viper/projects/RBit/rrandomgenerator.h	/^class RRandomGenerator$/;"	c
RRandomGenerator::RRandomGenerator	/home/viper/projects/RBit/rrandomgenerator.h	/^    RRandomGenerator()$/;"	f	class:RRandomGenerator	access:private	signature:()
RRandomGenerator::RRandomGenerator	/home/viper/projects/RBit/rrandomgenerator.h	/^    RRandomGenerator(const RRandomGenerator&);$/;"	p	class:RRandomGenerator	access:private	signature:(const RRandomGenerator&)
RRandomGenerator::alnumSequence	/home/viper/projects/RBit/rrandomgenerator.h	/^    const char* alnumSequence(char* dst, Uint32 size) const$/;"	f	class:RRandomGenerator	access:public	signature:(char* dst, Uint32 size) const
RRandomGenerator::ascii	/home/viper/projects/RBit/rrandomgenerator.h	/^    inline char ascii() const$/;"	f	class:RRandomGenerator	access:public	signature:() const
RRandomGenerator::digit	/home/viper/projects/RBit/rrandomgenerator.h	/^    inline char digit() const$/;"	f	class:RRandomGenerator	access:public	signature:() const
RRandomGenerator::instance	/home/viper/projects/RBit/rrandomgenerator.h	/^    static const RRandomGenerator& instance()$/;"	f	class:RRandomGenerator	access:public	signature:()
RRandomGenerator::numSequence	/home/viper/projects/RBit/rrandomgenerator.h	/^    const char* numSequence(char* dst, Uint32 size) const$/;"	f	class:RRandomGenerator	access:public	signature:(char* dst, Uint32 size) const
RRandomGenerator::operator =	/home/viper/projects/RBit/rrandomgenerator.h	/^    RRandomGenerator& operator=(const RRandomGenerator&);$/;"	p	class:RRandomGenerator	access:private	signature:(const RRandomGenerator&)
RRandomGenerator::rand	/home/viper/projects/RBit/rrandomgenerator.h	/^    inline int rand() const$/;"	f	class:RRandomGenerator	access:public	signature:() const
RRandomGenerator::rand	/home/viper/projects/RBit/rrandomgenerator.h	/^    inline int rand(int first, int last) const$/;"	f	class:RRandomGenerator	access:public	signature:(int first, int last) const
RRect	/home/viper/projects/RBit/rrect.h	/^    RRect();$/;"	p	class:RRect	access:public	signature:()
RRect	/home/viper/projects/RBit/rrect.h	/^    RRect(Sint16 left, Sint16 top, Uint16 width, Uint16 height);$/;"	p	class:RRect	access:public	signature:(Sint16 left, Sint16 top, Uint16 width, Uint16 height)
RRect	/home/viper/projects/RBit/rrect.h	/^    RRect(const RPoint &topLeft, const RPoint &bottomRight);$/;"	p	class:RRect	access:public	signature:(const RPoint &topLeft, const RPoint &bottomRight)
RRect	/home/viper/projects/RBit/rrect.h	/^    RRect(const RPoint &topLeft, const RSize &size);$/;"	p	class:RRect	access:public	signature:(const RPoint &topLeft, const RSize &size)
RRect	/home/viper/projects/RBit/rrect.h	/^    RRect(const RRect&);    $/;"	p	class:RRect	access:public	signature:(const RRect&)
RRect	/home/viper/projects/RBit/rrect.h	/^    RRect(const SDL_Rect&);$/;"	p	class:RRect	access:public	signature:(const SDL_Rect&)
RRect	/home/viper/projects/RBit/rrect.h	/^class RRect$/;"	c
RRect	/home/viper/projects/RBit/rrect.h	/^inline RRect::RRect()$/;"	f	class:RRect	signature:()
RRect	/home/viper/projects/RBit/rrect.h	/^inline RRect::RRect(Sint16 x, Sint16 y, Uint16 width, Uint16 height)$/;"	f	class:RRect	signature:(Sint16 x, Sint16 y, Uint16 width, Uint16 height)
RRect	/home/viper/projects/RBit/rrect.h	/^inline RRect::RRect(const RPoint &topLeft, const RPoint &bottomRight) $/;"	f	class:RRect	signature:(const RPoint &topLeft, const RPoint &bottomRight)
RRect	/home/viper/projects/RBit/rrect.h	/^inline RRect::RRect(const RPoint &topLeft, const RSize &size)$/;"	f	class:RRect	signature:(const RPoint &topLeft, const RSize &size)
RRect	/home/viper/projects/RBit/rrect.h	/^inline RRect::RRect(const RRect& r)$/;"	f	class:RRect	signature:(const RRect& r)
RRect	/home/viper/projects/RBit/rrect.h	/^inline RRect::RRect(const SDL_Rect& r)$/;"	f	class:RRect	signature:(const SDL_Rect& r)
RRect::RRect	/home/viper/projects/RBit/rrect.h	/^    RRect();$/;"	p	class:RRect	access:public	signature:()
RRect::RRect	/home/viper/projects/RBit/rrect.h	/^    RRect(Sint16 left, Sint16 top, Uint16 width, Uint16 height);$/;"	p	class:RRect	access:public	signature:(Sint16 left, Sint16 top, Uint16 width, Uint16 height)
RRect::RRect	/home/viper/projects/RBit/rrect.h	/^    RRect(const RPoint &topLeft, const RPoint &bottomRight);$/;"	p	class:RRect	access:public	signature:(const RPoint &topLeft, const RPoint &bottomRight)
RRect::RRect	/home/viper/projects/RBit/rrect.h	/^    RRect(const RPoint &topLeft, const RSize &size);$/;"	p	class:RRect	access:public	signature:(const RPoint &topLeft, const RSize &size)
RRect::RRect	/home/viper/projects/RBit/rrect.h	/^    RRect(const RRect&);    $/;"	p	class:RRect	access:public	signature:(const RRect&)
RRect::RRect	/home/viper/projects/RBit/rrect.h	/^    RRect(const SDL_Rect&);$/;"	p	class:RRect	access:public	signature:(const SDL_Rect&)
RRect::RRect	/home/viper/projects/RBit/rrect.h	/^inline RRect::RRect()$/;"	f	class:RRect	signature:()
RRect::RRect	/home/viper/projects/RBit/rrect.h	/^inline RRect::RRect(Sint16 x, Sint16 y, Uint16 width, Uint16 height)$/;"	f	class:RRect	signature:(Sint16 x, Sint16 y, Uint16 width, Uint16 height)
RRect::RRect	/home/viper/projects/RBit/rrect.h	/^inline RRect::RRect(const RPoint &topLeft, const RPoint &bottomRight) $/;"	f	class:RRect	signature:(const RPoint &topLeft, const RPoint &bottomRight)
RRect::RRect	/home/viper/projects/RBit/rrect.h	/^inline RRect::RRect(const RPoint &topLeft, const RSize &size)$/;"	f	class:RRect	signature:(const RPoint &topLeft, const RSize &size)
RRect::RRect	/home/viper/projects/RBit/rrect.h	/^inline RRect::RRect(const RRect& r)$/;"	f	class:RRect	signature:(const RRect& r)
RRect::RRect	/home/viper/projects/RBit/rrect.h	/^inline RRect::RRect(const SDL_Rect& r)$/;"	f	class:RRect	signature:(const SDL_Rect& r)
RRect::adjust	/home/viper/projects/RBit/rrect.h	/^    void adjust(Sint16 x1, Sint16 y1, Sint16 x2, Sint16 y2);$/;"	p	class:RRect	access:public	signature:(Sint16 x1, Sint16 y1, Sint16 x2, Sint16 y2)
RRect::adjust	/home/viper/projects/RBit/rrect.h	/^inline void RRect::adjust(Sint16 dx1, Sint16 dy1, Sint16 dx2, Sint16 dy2)$/;"	f	class:RRect	signature:(Sint16 dx1, Sint16 dy1, Sint16 dx2, Sint16 dy2)
RRect::adjusted	/home/viper/projects/RBit/rrect.h	/^    RRect adjusted(Sint16 x1, Sint16 y1, Sint16 x2, Sint16 y2) const;$/;"	p	class:RRect	access:public	signature:(Sint16 x1, Sint16 y1, Sint16 x2, Sint16 y2) const
RRect::adjusted	/home/viper/projects/RBit/rrect.h	/^inline RRect RRect::adjusted(Sint16 dx1, Sint16 dy1, Sint16 dx2, Sint16 dy2) const$/;"	f	class:RRect	signature:(Sint16 dx1, Sint16 dy1, Sint16 dx2, Sint16 dy2) const
RRect::bottom	/home/viper/projects/RBit/rrect.h	/^    Sint16 bottom() const;$/;"	p	class:RRect	access:public	signature:() const
RRect::bottom	/home/viper/projects/RBit/rrect.h	/^inline Sint16 RRect::bottom() const$/;"	f	class:RRect	signature:() const
RRect::bottomLeft	/home/viper/projects/RBit/rrect.h	/^    RPoint bottomLeft() const;$/;"	p	class:RRect	access:public	signature:() const
RRect::bottomLeft	/home/viper/projects/RBit/rrect.h	/^inline RPoint RRect::bottomLeft() const$/;"	f	class:RRect	signature:() const
RRect::bottomRight	/home/viper/projects/RBit/rrect.h	/^    RPoint bottomRight() const;$/;"	p	class:RRect	access:public	signature:() const
RRect::bottomRight	/home/viper/projects/RBit/rrect.h	/^inline RPoint RRect::bottomRight() const$/;"	f	class:RRect	signature:() const
RRect::center	/home/viper/projects/RBit/rrect.h	/^    RPoint center() const;$/;"	p	class:RRect	access:public	signature:() const
RRect::center	/home/viper/projects/RBit/rrect.h	/^inline RPoint RRect::center() const$/;"	f	class:RRect	signature:() const
RRect::contains	/home/viper/projects/RBit/rrect.h	/^    bool contains(Sint16 x, Sint16 y, bool proper=false) const;$/;"	p	class:RRect	access:public	signature:(Sint16 x, Sint16 y, bool proper=false) const
RRect::contains	/home/viper/projects/RBit/rrect.h	/^    bool contains(const RPoint& p, bool proper=false) const;    $/;"	p	class:RRect	access:public	signature:(const RPoint& p, bool proper=false) const
RRect::contains	/home/viper/projects/RBit/rrect.h	/^    bool contains(const RRect& r, bool proper=false) const;$/;"	p	class:RRect	access:public	signature:(const RRect& r, bool proper=false) const
RRect::contains	/home/viper/projects/RBit/rrect.h	/^inline bool RRect::contains(Sint16 x, Sint16 y, bool proper) const$/;"	f	class:RRect	signature:(Sint16 x, Sint16 y, bool proper) const
RRect::contains	/home/viper/projects/RBit/rrect.h	/^inline bool RRect::contains(const RPoint &p, bool proper) const$/;"	f	class:RRect	signature:(const RPoint &p, bool proper) const
RRect::contains	/home/viper/projects/RBit/rrect.h	/^inline bool RRect::contains(const RRect& r, bool proper) const$/;"	f	class:RRect	signature:(const RRect& r, bool proper) const
RRect::height	/home/viper/projects/RBit/rrect.h	/^    Uint16 height() const;$/;"	p	class:RRect	access:public	signature:() const
RRect::height	/home/viper/projects/RBit/rrect.h	/^inline Uint16 RRect::height() const $/;"	f	class:RRect	signature:() const
RRect::intersect	/home/viper/projects/RBit/rrect.h	/^    RRect intersect(const RRect& r) const;$/;"	p	class:RRect	access:public	signature:(const RRect& r) const
RRect::intersect	/home/viper/projects/RBit/rrect.h	/^inline RRect RRect::intersect(const RRect& r) const$/;"	f	class:RRect	signature:(const RRect& r) const
RRect::intersects	/home/viper/projects/RBit/rrect.h	/^    bool intersects(const RRect& r) const;  $/;"	p	class:RRect	access:public	signature:(const RRect& r) const
RRect::intersects	/home/viper/projects/RBit/rrect.h	/^inline bool RRect::intersects(const RRect& r) const$/;"	f	class:RRect	signature:(const RRect& r) const
RRect::isEmpty	/home/viper/projects/RBit/rrect.h	/^    bool isEmpty() const;$/;"	p	class:RRect	access:public	signature:() const
RRect::isEmpty	/home/viper/projects/RBit/rrect.h	/^inline bool RRect::isEmpty() const$/;"	f	class:RRect	signature:() const
RRect::left	/home/viper/projects/RBit/rrect.h	/^    Sint16 left() const;$/;"	p	class:RRect	access:public	signature:() const
RRect::left	/home/viper/projects/RBit/rrect.h	/^inline Sint16 RRect::left() const$/;"	f	class:RRect	signature:() const
RRect::m_rect	/home/viper/projects/RBit/rrect.h	/^    SDL_Rect m_rect;$/;"	m	class:RRect	access:private
RRect::moveBottom	/home/viper/projects/RBit/rrect.h	/^    void moveBottom(Sint16 pos );$/;"	p	class:RRect	access:public	signature:(Sint16 pos )
RRect::moveBottom	/home/viper/projects/RBit/rrect.h	/^inline void RRect::moveBottom(Sint16 pos)$/;"	f	class:RRect	signature:(Sint16 pos)
RRect::moveBottomLeft	/home/viper/projects/RBit/rrect.h	/^    void moveBottomLeft(const RPoint &p);    $/;"	p	class:RRect	access:public	signature:(const RPoint &p)
RRect::moveBottomLeft	/home/viper/projects/RBit/rrect.h	/^inline void RRect::moveBottomLeft(const RPoint &p)$/;"	f	class:RRect	signature:(const RPoint &p)
RRect::moveBottomRight	/home/viper/projects/RBit/rrect.h	/^    void moveBottomRight(const RPoint &p);$/;"	p	class:RRect	access:public	signature:(const RPoint &p)
RRect::moveBottomRight	/home/viper/projects/RBit/rrect.h	/^inline void RRect::moveBottomRight(const RPoint &p)$/;"	f	class:RRect	signature:(const RPoint &p)
RRect::moveLeft	/home/viper/projects/RBit/rrect.h	/^    void moveLeft(Sint16 pos);$/;"	p	class:RRect	access:public	signature:(Sint16 pos)
RRect::moveLeft	/home/viper/projects/RBit/rrect.h	/^inline void RRect::moveLeft(Sint16 pos)$/;"	f	class:RRect	signature:(Sint16 pos)
RRect::moveRight	/home/viper/projects/RBit/rrect.h	/^    void moveRight(Sint16 pos );$/;"	p	class:RRect	access:public	signature:(Sint16 pos )
RRect::moveRight	/home/viper/projects/RBit/rrect.h	/^inline void RRect::moveRight(Sint16 pos)$/;"	f	class:RRect	signature:(Sint16 pos)
RRect::moveTop	/home/viper/projects/RBit/rrect.h	/^    void moveTop(Sint16 pos );$/;"	p	class:RRect	access:public	signature:(Sint16 pos )
RRect::moveTop	/home/viper/projects/RBit/rrect.h	/^inline void RRect::moveTop(Sint16 pos)$/;"	f	class:RRect	signature:(Sint16 pos)
RRect::moveTopLeft	/home/viper/projects/RBit/rrect.h	/^    void moveTopLeft(const RPoint &p);$/;"	p	class:RRect	access:public	signature:(const RPoint &p)
RRect::moveTopLeft	/home/viper/projects/RBit/rrect.h	/^inline void RRect::moveTopLeft(const RPoint &p)$/;"	f	class:RRect	signature:(const RPoint &p)
RRect::moveTopRight	/home/viper/projects/RBit/rrect.h	/^    void moveTopRight(const RPoint &p);$/;"	p	class:RRect	access:public	signature:(const RPoint &p)
RRect::moveTopRight	/home/viper/projects/RBit/rrect.h	/^inline void RRect::moveTopRight(const RPoint &p)$/;"	f	class:RRect	signature:(const RPoint &p)
RRect::operator !=	/home/viper/projects/RBit/rrect.h	/^    friend bool operator!= (const RRect&, const RRect&);$/;"	p	class:RRect	access:friend	signature:(const RRect&, const RRect&)
RRect::operator &	/home/viper/projects/RBit/rrect.h	/^    RRect operator& (const RRect& r) const;$/;"	p	class:RRect	access:public	signature:(const RRect& r) const
RRect::operator &	/home/viper/projects/RBit/rrect.h	/^inline RRect RRect::operator& (const RRect& r) const$/;"	f	class:RRect	signature:(const RRect& r) const
RRect::operator &=	/home/viper/projects/RBit/rrect.h	/^    RRect& operator&= (const RRect& r); $/;"	p	class:RRect	access:public	signature:(const RRect& r)
RRect::operator &=	/home/viper/projects/RBit/rrect.h	/^inline RRect& RRect::operator&= (const RRect& r)$/;"	f	class:RRect	signature:(const RRect& r)
RRect::operator ==	/home/viper/projects/RBit/rrect.h	/^    friend bool operator== (const RRect&, const RRect&);$/;"	p	class:RRect	access:friend	signature:(const RRect&, const RRect&)
RRect::operator |	/home/viper/projects/RBit/rrect.h	/^    RRect operator| (const RRect& r) const;$/;"	p	class:RRect	access:public	signature:(const RRect& r) const
RRect::operator |	/home/viper/projects/RBit/rrect.h	/^inline RRect RRect::operator| (const RRect& r) const$/;"	f	class:RRect	signature:(const RRect& r) const
RRect::operator |=	/home/viper/projects/RBit/rrect.h	/^    RRect& operator|= (const RRect& r);$/;"	p	class:RRect	access:public	signature:(const RRect& r)
RRect::operator |=	/home/viper/projects/RBit/rrect.h	/^inline RRect& RRect::operator|= (const RRect& r)$/;"	f	class:RRect	signature:(const RRect& r)
RRect::right	/home/viper/projects/RBit/rrect.h	/^    Sint16 right() const;$/;"	p	class:RRect	access:public	signature:() const
RRect::right	/home/viper/projects/RBit/rrect.h	/^inline Sint16 RRect::right() const$/;"	f	class:RRect	signature:() const
RRect::sdlRect	/home/viper/projects/RBit/rrect.h	/^    SDL_Rect& sdlRect();$/;"	p	class:RRect	access:public	signature:()
RRect::sdlRect	/home/viper/projects/RBit/rrect.h	/^    const SDL_Rect& sdlRect() const;$/;"	p	class:RRect	access:public	signature:() const
RRect::sdlRect	/home/viper/projects/RBit/rrect.h	/^inline SDL_Rect& RRect::sdlRect()$/;"	f	class:RRect	signature:()
RRect::sdlRect	/home/viper/projects/RBit/rrect.h	/^inline const SDL_Rect& RRect::sdlRect() const$/;"	f	class:RRect	signature:() const
RRect::setBottom	/home/viper/projects/RBit/rrect.h	/^    void setBottom(Sint16 pos);$/;"	p	class:RRect	access:public	signature:(Sint16 pos)
RRect::setBottom	/home/viper/projects/RBit/rrect.h	/^inline void RRect::setBottom(Sint16 pos)$/;"	f	class:RRect	signature:(Sint16 pos)
RRect::setBottomLeft	/home/viper/projects/RBit/rrect.h	/^    void setBottomLeft(const RPoint &p);$/;"	p	class:RRect	access:public	signature:(const RPoint &p)
RRect::setBottomRight	/home/viper/projects/RBit/rrect.h	/^    void setBottomRight(const RPoint &p);$/;"	p	class:RRect	access:public	signature:(const RPoint &p)
RRect::setHeight	/home/viper/projects/RBit/rrect.h	/^    void setHeight(Uint16 h);$/;"	p	class:RRect	access:public	signature:(Uint16 h)
RRect::setHeight	/home/viper/projects/RBit/rrect.h	/^inline void RRect::setHeight(Uint16 height)$/;"	f	class:RRect	signature:(Uint16 height)
RRect::setLeft	/home/viper/projects/RBit/rrect.h	/^    void setLeft(Sint16 pos);$/;"	p	class:RRect	access:public	signature:(Sint16 pos)
RRect::setLeft	/home/viper/projects/RBit/rrect.h	/^inline void RRect::setLeft(Sint16 pos)$/;"	f	class:RRect	signature:(Sint16 pos)
RRect::setRect	/home/viper/projects/RBit/rrect.h	/^    void setRect(Sint16 x, Sint16 y, Uint16 w, Uint16 h);$/;"	p	class:RRect	access:public	signature:(Sint16 x, Sint16 y, Uint16 w, Uint16 h)
RRect::setRect	/home/viper/projects/RBit/rrect.h	/^inline void RRect::setRect(Sint16 x, Sint16 y, Uint16 w, Uint16 h)$/;"	f	class:RRect	signature:(Sint16 x, Sint16 y, Uint16 w, Uint16 h)
RRect::setRight	/home/viper/projects/RBit/rrect.h	/^    void setRight(Sint16 pos);$/;"	p	class:RRect	access:public	signature:(Sint16 pos)
RRect::setRight	/home/viper/projects/RBit/rrect.h	/^inline void RRect::setRight(Sint16 pos)$/;"	f	class:RRect	signature:(Sint16 pos)
RRect::setSize	/home/viper/projects/RBit/rrect.h	/^    void setSize(const RSize& s);$/;"	p	class:RRect	access:public	signature:(const RSize& s)
RRect::setSize	/home/viper/projects/RBit/rrect.h	/^inline void RRect::setSize(const RSize& s)$/;"	f	class:RRect	signature:(const RSize& s)
RRect::setTop	/home/viper/projects/RBit/rrect.h	/^    void setTop(Sint16 pos);$/;"	p	class:RRect	access:public	signature:(Sint16 pos)
RRect::setTop	/home/viper/projects/RBit/rrect.h	/^inline void RRect::setTop(Sint16 pos)$/;"	f	class:RRect	signature:(Sint16 pos)
RRect::setTopLeft	/home/viper/projects/RBit/rrect.h	/^    void setTopLeft(const RPoint &p);$/;"	p	class:RRect	access:public	signature:(const RPoint &p)
RRect::setTopLeft	/home/viper/projects/RBit/rrect.h	/^inline void RRect::setTopLeft(const RPoint& p)$/;"	f	class:RRect	signature:(const RPoint& p)
RRect::setTopRight	/home/viper/projects/RBit/rrect.h	/^    void setTopRight(const RPoint &p);$/;"	p	class:RRect	access:public	signature:(const RPoint &p)
RRect::setWidth	/home/viper/projects/RBit/rrect.h	/^    void setWidth(Uint16 w);$/;"	p	class:RRect	access:public	signature:(Uint16 w)
RRect::setWidth	/home/viper/projects/RBit/rrect.h	/^inline void RRect::setWidth(Uint16 width)$/;"	f	class:RRect	signature:(Uint16 width)
RRect::setX	/home/viper/projects/RBit/rrect.h	/^    void setX(Sint16 x);$/;"	p	class:RRect	access:public	signature:(Sint16 x)
RRect::setX	/home/viper/projects/RBit/rrect.h	/^inline void RRect::setX(Sint16 x)$/;"	f	class:RRect	signature:(Sint16 x)
RRect::setY	/home/viper/projects/RBit/rrect.h	/^    void setY(Sint16 y);    $/;"	p	class:RRect	access:public	signature:(Sint16 y)
RRect::setY	/home/viper/projects/RBit/rrect.h	/^inline void RRect::setY(Sint16 y)$/;"	f	class:RRect	signature:(Sint16 y)
RRect::size	/home/viper/projects/RBit/rrect.h	/^    RSize size() const;$/;"	p	class:RRect	access:public	signature:() const
RRect::size	/home/viper/projects/RBit/rrect.h	/^inline RSize RRect::size() const$/;"	f	class:RRect	signature:() const
RRect::top	/home/viper/projects/RBit/rrect.h	/^    Sint16 top() const;$/;"	p	class:RRect	access:public	signature:() const
RRect::top	/home/viper/projects/RBit/rrect.h	/^inline Sint16 RRect::top() const$/;"	f	class:RRect	signature:() const
RRect::topLeft	/home/viper/projects/RBit/rrect.h	/^    RPoint topLeft() const;$/;"	p	class:RRect	access:public	signature:() const
RRect::topLeft	/home/viper/projects/RBit/rrect.h	/^inline RPoint RRect::topLeft() const$/;"	f	class:RRect	signature:() const
RRect::topRight	/home/viper/projects/RBit/rrect.h	/^    RPoint topRight() const;$/;"	p	class:RRect	access:public	signature:() const
RRect::topRight	/home/viper/projects/RBit/rrect.h	/^inline RPoint RRect::topRight() const$/;"	f	class:RRect	signature:() const
RRect::translate	/home/viper/projects/RBit/rrect.h	/^    void translate(Sint16 dx, Sint16 dy);$/;"	p	class:RRect	access:public	signature:(Sint16 dx, Sint16 dy)
RRect::translate	/home/viper/projects/RBit/rrect.h	/^    void translate(const RPoint &p);$/;"	p	class:RRect	access:public	signature:(const RPoint &p)
RRect::translate	/home/viper/projects/RBit/rrect.h	/^inline void RRect::translate(Sint16 dx, Sint16 dy)$/;"	f	class:RRect	signature:(Sint16 dx, Sint16 dy)
RRect::translate	/home/viper/projects/RBit/rrect.h	/^inline void RRect::translate(const RPoint& p)$/;"	f	class:RRect	signature:(const RPoint& p)
RRect::translated	/home/viper/projects/RBit/rrect.h	/^    RRect translated(Sint16 dx, Sint16 dy) const;$/;"	p	class:RRect	access:public	signature:(Sint16 dx, Sint16 dy) const
RRect::translated	/home/viper/projects/RBit/rrect.h	/^    RRect translated(const RPoint &p) const;$/;"	p	class:RRect	access:public	signature:(const RPoint &p) const
RRect::translated	/home/viper/projects/RBit/rrect.h	/^inline RRect RRect::translated(Sint16 dx, Sint16 dy) const$/;"	f	class:RRect	signature:(Sint16 dx, Sint16 dy) const
RRect::translated	/home/viper/projects/RBit/rrect.h	/^inline RRect RRect::translated(const RPoint &p) const$/;"	f	class:RRect	signature:(const RPoint &p) const
RRect::unite	/home/viper/projects/RBit/rrect.h	/^    RRect unite(const RRect& r) const;$/;"	p	class:RRect	access:public	signature:(const RRect& r) const
RRect::unite	/home/viper/projects/RBit/rrect.h	/^inline RRect RRect::unite(const RRect& r) const$/;"	f	class:RRect	signature:(const RRect& r) const
RRect::width	/home/viper/projects/RBit/rrect.h	/^    Uint16 width() const;$/;"	p	class:RRect	access:public	signature:() const
RRect::width	/home/viper/projects/RBit/rrect.h	/^inline Uint16 RRect::width() const $/;"	f	class:RRect	signature:() const
RRect::x	/home/viper/projects/RBit/rrect.h	/^    Sint16 x() const;$/;"	p	class:RRect	access:public	signature:() const
RRect::x	/home/viper/projects/RBit/rrect.h	/^inline Sint16 RRect::x() const$/;"	f	class:RRect	signature:() const
RRect::y	/home/viper/projects/RBit/rrect.h	/^    Sint16 y() const;$/;"	p	class:RRect	access:public	signature:() const
RRect::y	/home/viper/projects/RBit/rrect.h	/^inline Sint16 RRect::y() const$/;"	f	class:RRect	signature:() const
RSCROLL_AREA_H	/home/viper/projects/RBit/rscrollarea.h	2;"	d
RSCROLL_BAR_H	/home/viper/projects/RBit/rscrollbar.h	2;"	d
RSCROLL_WIDGET_AREA_H	/home/viper/projects/RBit/rscrollwidgetarea.h	2;"	d
RSDLTTF_H	/home/viper/projects/RBit/rsdlttf.h	4;"	d
RSHAREDPTR_H	/home/viper/projects/RBit/rsharedptr.h	2;"	d
RSIMPLELIST_H	/home/viper/projects/RBit/rsimplelist.h	2;"	d
RSIMPLE_GRID_MODEL_H	/home/viper/projects/RBit/rsimplegridmodel.h	2;"	d
RSIMPLE_HEADER_MODEL	/home/viper/projects/RBit/rsimpleheadermodel.h	2;"	d
RSIZE_H_	/home/viper/projects/RBit/rsize.h	2;"	d
RSLPolicy_DontTrackSize	/home/viper/projects/RBit/rsimplelist.h	/^class RSLPolicy_DontTrackSize$/;"	c
RSLPolicy_DontTrackSize::decSize	/home/viper/projects/RBit/rsimplelist.h	/^	inline void decSize()$/;"	f	class:RSLPolicy_DontTrackSize	access:protected	signature:()
RSLPolicy_DontTrackSize::incSize	/home/viper/projects/RBit/rsimplelist.h	/^    inline void incSize()$/;"	f	class:RSLPolicy_DontTrackSize	access:protected	signature:()
RSLPolicy_TrackSize	/home/viper/projects/RBit/rsimplelist.h	/^	inline RSLPolicy_TrackSize()$/;"	f	class:RSLPolicy_TrackSize	access:protected	signature:()
RSLPolicy_TrackSize	/home/viper/projects/RBit/rsimplelist.h	/^class RSLPolicy_TrackSize$/;"	c
RSLPolicy_TrackSize::RSLPolicy_TrackSize	/home/viper/projects/RBit/rsimplelist.h	/^	inline RSLPolicy_TrackSize()$/;"	f	class:RSLPolicy_TrackSize	access:protected	signature:()
RSLPolicy_TrackSize::decSize	/home/viper/projects/RBit/rsimplelist.h	/^	inline void decSize()$/;"	f	class:RSLPolicy_TrackSize	access:protected	signature:()
RSLPolicy_TrackSize::incSize	/home/viper/projects/RBit/rsimplelist.h	/^    inline void incSize()$/;"	f	class:RSLPolicy_TrackSize	access:protected	signature:()
RSLPolicy_TrackSize::m_size	/home/viper/projects/RBit/rsimplelist.h	/^    unsigned int m_size;$/;"	m	class:RSLPolicy_TrackSize	access:private
RSLPolicy_TrackSize::size	/home/viper/projects/RBit/rsimplelist.h	/^    inline unsigned int size() const$/;"	f	class:RSLPolicy_TrackSize	access:protected	signature:() const
RSPLITTER_H	/home/viper/projects/RBit/rsplitter.h	2;"	d
RSTRING_H_	/home/viper/projects/RBit/rstring.h	2;"	d
RSUBJECT_OBSERVER_H	/home/viper/projects/RBit/rsubjectobserver.h	2;"	d
RSURFACE_H	/home/viper/projects/RBit/rsurface.h	2;"	d
RScrollArea	/home/viper/projects/RBit/rscrollarea.h	/^    RScrollArea(RWidget* parent=0, RWFlags flags=0);$/;"	p	class:RScrollArea	access:public	signature:(RWidget* parent=0, RWFlags flags=0)
RScrollArea	/home/viper/projects/RBit/rscrollarea.h	/^    RScrollArea(const RScrollArea&);$/;"	p	class:RScrollArea	access:private	signature:(const RScrollArea&)
RScrollArea	/home/viper/projects/RBit/rscrollarea.h	/^class RBIT_CORE_EXPORT RScrollArea : public RScrollAreaBase$/;"	c	inherits:RScrollAreaBase
RScrollArea	/home/viper/projects/RBit/rscrollarea.h	/^inline RScrollArea::RScrollArea(RWidget* parent, RWFlags flags)$/;"	f	class:RScrollArea	signature:(RWidget* parent, RWFlags flags)
RScrollArea::RScrollArea	/home/viper/projects/RBit/rscrollarea.h	/^    RScrollArea(RWidget* parent=0, RWFlags flags=0);$/;"	p	class:RScrollArea	access:public	signature:(RWidget* parent=0, RWFlags flags=0)
RScrollArea::RScrollArea	/home/viper/projects/RBit/rscrollarea.h	/^    RScrollArea(const RScrollArea&);$/;"	p	class:RScrollArea	access:private	signature:(const RScrollArea&)
RScrollArea::RScrollArea	/home/viper/projects/RBit/rscrollarea.h	/^inline RScrollArea::RScrollArea(RWidget* parent, RWFlags flags)$/;"	f	class:RScrollArea	signature:(RWidget* parent, RWFlags flags)
RScrollArea::Viewport	/home/viper/projects/RBit/rscrollarea.h	/^    class Viewport : public RWidget$/;"	c	class:RScrollArea	inherits:RWidget	access:protected
RScrollArea::Viewport::Viewport	/home/viper/projects/RBit/rscrollarea.h	/^        Viewport(RWidget* parent=0, RWFlags flags=0);$/;"	p	class:RScrollArea::Viewport	access:public	signature:(RWidget* parent=0, RWFlags flags=0)
RScrollArea::Viewport::Viewport	/home/viper/projects/RBit/rscrollarea.h	/^inline RScrollArea::Viewport::Viewport(RWidget* parent, RWFlags flags)$/;"	f	class:RScrollArea::Viewport	signature:(RWidget* parent, RWFlags flags)
RScrollArea::Viewport::eventKeyDown	/home/viper/projects/RBit/rscrollarea.cpp	/^bool RScrollArea::Viewport::eventKeyDown(const SDL_keysym& key, bool autoRepeat)$/;"	f	class:RScrollArea::Viewport	signature:(const SDL_keysym& key, bool autoRepeat)
RScrollArea::Viewport::eventKeyDown	/home/viper/projects/RBit/rscrollarea.h	/^        virtual bool eventKeyDown(const SDL_keysym& key, bool autoRepeat);$/;"	p	class:RScrollArea::Viewport	access:protected	signature:(const SDL_keysym& key, bool autoRepeat)
RScrollArea::Viewport::eventKeyUp	/home/viper/projects/RBit/rscrollarea.cpp	/^bool RScrollArea::Viewport::eventKeyUp(const SDL_keysym& key, bool autoRepeat)$/;"	f	class:RScrollArea::Viewport	signature:(const SDL_keysym& key, bool autoRepeat)
RScrollArea::Viewport::eventKeyUp	/home/viper/projects/RBit/rscrollarea.h	/^        virtual bool eventKeyUp(const SDL_keysym& key, bool autoRepeat);$/;"	p	class:RScrollArea::Viewport	access:protected	signature:(const SDL_keysym& key, bool autoRepeat)
RScrollArea::Viewport::eventMouseDown	/home/viper/projects/RBit/rscrollarea.cpp	/^void RScrollArea::Viewport::eventMouseDown(const SDL_MouseButtonEvent& m)$/;"	f	class:RScrollArea::Viewport	signature:(const SDL_MouseButtonEvent& m)
RScrollArea::Viewport::eventMouseDown	/home/viper/projects/RBit/rscrollarea.h	/^        virtual void eventMouseDown(const SDL_MouseButtonEvent&);$/;"	p	class:RScrollArea::Viewport	access:protected	signature:(const SDL_MouseButtonEvent&)
RScrollArea::Viewport::eventMouseMove	/home/viper/projects/RBit/rscrollarea.cpp	/^void RScrollArea::Viewport::eventMouseMove(const SDL_MouseMotionEvent& m)$/;"	f	class:RScrollArea::Viewport	signature:(const SDL_MouseMotionEvent& m)
RScrollArea::Viewport::eventMouseMove	/home/viper/projects/RBit/rscrollarea.h	/^        virtual void eventMouseMove(const SDL_MouseMotionEvent&);        $/;"	p	class:RScrollArea::Viewport	access:protected	signature:(const SDL_MouseMotionEvent&)
RScrollArea::Viewport::eventMouseUp	/home/viper/projects/RBit/rscrollarea.cpp	/^void RScrollArea::Viewport::eventMouseUp(const SDL_MouseButtonEvent& m)$/;"	f	class:RScrollArea::Viewport	signature:(const SDL_MouseButtonEvent& m)
RScrollArea::Viewport::eventMouseUp	/home/viper/projects/RBit/rscrollarea.h	/^        virtual void eventMouseUp(const SDL_MouseButtonEvent&);$/;"	p	class:RScrollArea::Viewport	access:protected	signature:(const SDL_MouseButtonEvent&)
RScrollArea::Viewport::repaintImpl	/home/viper/projects/RBit/rscrollarea.cpp	/^void RScrollArea::Viewport::repaintImpl(const RRect& r)$/;"	f	class:RScrollArea::Viewport	signature:(const RRect& r)
RScrollArea::Viewport::repaintImpl	/home/viper/projects/RBit/rscrollarea.h	/^        virtual void repaintImpl(const RRect&);$/;"	p	class:RScrollArea::Viewport	access:protected	signature:(const RRect&)
RScrollArea::Viewport::scrollArea	/home/viper/projects/RBit/rscrollarea.h	/^        RScrollArea* scrollArea() const;$/;"	p	class:RScrollArea::Viewport	access:protected	signature:() const
RScrollArea::Viewport::scrollArea	/home/viper/projects/RBit/rscrollarea.h	/^inline RScrollArea* RScrollArea::Viewport::scrollArea() const$/;"	f	class:RScrollArea::Viewport	signature:() const
RScrollArea::Viewport::setGeometry	/home/viper/projects/RBit/rscrollarea.cpp	/^void RScrollArea::Viewport::setGeometry(const RPoint& p, const RSize& s)$/;"	f	class:RScrollArea::Viewport	signature:(const RPoint& p, const RSize& s)
RScrollArea::Viewport::setGeometry	/home/viper/projects/RBit/rscrollarea.h	/^        virtual void setGeometry(const RPoint& p, const RSize& s);$/;"	p	class:RScrollArea::Viewport	access:public	signature:(const RPoint& p, const RSize& s)
RScrollArea::createViewport	/home/viper/projects/RBit/rscrollarea.cpp	/^RWidget* RScrollArea::createViewport(RWidget* parent, RWFlags flags)$/;"	f	class:RScrollArea	signature:(RWidget* parent, RWFlags flags)
RScrollArea::createViewport	/home/viper/projects/RBit/rscrollarea.h	/^    virtual RWidget* createViewport(RWidget* parent, RWFlags flags);$/;"	p	class:RScrollArea	access:protected	signature:(RWidget* parent, RWFlags flags)
RScrollArea::operator =	/home/viper/projects/RBit/rscrollarea.h	/^    RScrollArea& operator=(const RScrollArea&);$/;"	p	class:RScrollArea	access:private	signature:(const RScrollArea&)
RScrollArea::viewportRepaintImpl	/home/viper/projects/RBit/rscrollarea.cpp	/^void RScrollArea::viewportRepaintImpl(const RRect&)$/;"	f	class:RScrollArea	signature:(const RRect&)
RScrollArea::viewportRepaintImpl	/home/viper/projects/RBit/rscrollarea.h	/^    virtual void viewportRepaintImpl(const RRect&);$/;"	p	class:RScrollArea	access:protected	signature:(const RRect&)
RScrollArea::viewportSizeChanged	/home/viper/projects/RBit/rscrollarea.cpp	/^void RScrollArea::viewportSizeChanged(const RSize&)$/;"	f	class:RScrollArea	signature:(const RSize&)
RScrollArea::viewportSizeChanged	/home/viper/projects/RBit/rscrollarea.h	/^    virtual void viewportSizeChanged(const RSize& newSize);$/;"	p	class:RScrollArea	access:protected	signature:(const RSize& newSize)
RScrollAreaBase	/home/viper/projects/RBit/rscrollarea.cpp	/^RScrollAreaBase::RScrollAreaBase(RWidget *parent, RWFlags flags)$/;"	f	class:RScrollAreaBase	signature:(RWidget *parent, RWFlags flags)
RScrollAreaBase	/home/viper/projects/RBit/rscrollarea.h	/^    RScrollAreaBase(RWidget* parent=0, RWFlags flags=0);$/;"	p	class:RScrollAreaBase	access:public	signature:(RWidget* parent=0, RWFlags flags=0)
RScrollAreaBase	/home/viper/projects/RBit/rscrollarea.h	/^    RScrollAreaBase(const RScrollAreaBase&);$/;"	p	class:RScrollAreaBase	access:private	signature:(const RScrollAreaBase&)
RScrollAreaBase	/home/viper/projects/RBit/rscrollarea.h	/^class RBIT_CORE_EXPORT RScrollAreaBase : public RWidget, $/;"	c	inherits:RWidget,RFramePainter
RScrollAreaBase::RScrollAreaBase	/home/viper/projects/RBit/rscrollarea.cpp	/^RScrollAreaBase::RScrollAreaBase(RWidget *parent, RWFlags flags)$/;"	f	class:RScrollAreaBase	signature:(RWidget *parent, RWFlags flags)
RScrollAreaBase::RScrollAreaBase	/home/viper/projects/RBit/rscrollarea.h	/^    RScrollAreaBase(RWidget* parent=0, RWFlags flags=0);$/;"	p	class:RScrollAreaBase	access:public	signature:(RWidget* parent=0, RWFlags flags=0)
RScrollAreaBase::RScrollAreaBase	/home/viper/projects/RBit/rscrollarea.h	/^    RScrollAreaBase(const RScrollAreaBase&);$/;"	p	class:RScrollAreaBase	access:private	signature:(const RScrollAreaBase&)
RScrollAreaBase::ScrollBar	/home/viper/projects/RBit/rscrollarea.h	/^    class ScrollBar : public RScrollBar$/;"	c	class:RScrollAreaBase	inherits:RScrollBar	access:protected
RScrollAreaBase::ScrollBar::ScrollBar	/home/viper/projects/RBit/rscrollarea.h	/^        ScrollBar(RBit::Orientation o, RScrollAreaBase* parent, RWFlags flags = 0);         $/;"	p	class:RScrollAreaBase::ScrollBar	access:public	signature:(RBit::Orientation o, RScrollAreaBase* parent, RWFlags flags = 0)
RScrollAreaBase::ScrollBar::ScrollBar	/home/viper/projects/RBit/rscrollarea.h	/^inline RScrollAreaBase::ScrollBar::ScrollBar(RBit::Orientation o, RScrollAreaBase* parent, RWFlags flags)$/;"	f	class:RScrollAreaBase::ScrollBar	signature:(RBit::Orientation o, RScrollAreaBase* parent, RWFlags flags)
RScrollAreaBase::ScrollBar::actionTriggered	/home/viper/projects/RBit/rscrollarea.cpp	/^void RScrollAreaBase::ScrollBar::actionTriggered(ScrollAction action)$/;"	f	class:RScrollAreaBase::ScrollBar	signature:(ScrollAction action)
RScrollAreaBase::ScrollBar::actionTriggered	/home/viper/projects/RBit/rscrollarea.h	/^        virtual void actionTriggered(ScrollAction action);$/;"	p	class:RScrollAreaBase::ScrollBar	access:protected	signature:(ScrollAction action)
RScrollAreaBase::ScrollBar::scrollChange	/home/viper/projects/RBit/rscrollarea.cpp	/^void RScrollAreaBase::ScrollBar::scrollChange(ScrollChange change)$/;"	f	class:RScrollAreaBase::ScrollBar	signature:(ScrollChange change)
RScrollAreaBase::ScrollBar::scrollChange	/home/viper/projects/RBit/rscrollarea.h	/^        virtual void scrollChange(ScrollChange change);$/;"	p	class:RScrollAreaBase::ScrollBar	access:protected	signature:(ScrollChange change)
RScrollAreaBase::ScrollBarAlwaysOff	/home/viper/projects/RBit/rscrollarea.h	/^        ScrollBarAlwaysOff,$/;"	e	enum:RScrollAreaBase::ScrollBarPolicy
RScrollAreaBase::ScrollBarAlwaysOn	/home/viper/projects/RBit/rscrollarea.h	/^        ScrollBarAlwaysOn$/;"	e	enum:RScrollAreaBase::ScrollBarPolicy
RScrollAreaBase::ScrollBarAsNeeded	/home/viper/projects/RBit/rscrollarea.h	/^        ScrollBarAsNeeded,$/;"	e	enum:RScrollAreaBase::ScrollBarPolicy
RScrollAreaBase::ScrollBarPolicy	/home/viper/projects/RBit/rscrollarea.h	/^    enum ScrollBarPolicy {$/;"	g	class:RScrollAreaBase	access:public
RScrollAreaBase::createViewport	/home/viper/projects/RBit/rscrollarea.cpp	/^RWidget* RScrollAreaBase::createViewport(RWidget* parent, RWFlags flags)$/;"	f	class:RScrollAreaBase	signature:(RWidget* parent, RWFlags flags)
RScrollAreaBase::createViewport	/home/viper/projects/RBit/rscrollarea.h	/^    virtual RWidget* createViewport(RWidget* parent, RWFlags flags);$/;"	p	class:RScrollAreaBase	access:protected	signature:(RWidget* parent, RWFlags flags)
RScrollAreaBase::eventKeyDown	/home/viper/projects/RBit/rscrollarea.cpp	/^bool RScrollAreaBase::eventKeyDown(const SDL_keysym& key, bool autoRepeat)$/;"	f	class:RScrollAreaBase	signature:(const SDL_keysym& key, bool autoRepeat)
RScrollAreaBase::eventKeyDown	/home/viper/projects/RBit/rscrollarea.h	/^    virtual bool eventKeyDown(const SDL_keysym& key, bool autoRepeat);    $/;"	p	class:RScrollAreaBase	access:protected	signature:(const SDL_keysym& key, bool autoRepeat)
RScrollAreaBase::eventMouseDown	/home/viper/projects/RBit/rscrollarea.cpp	/^void RScrollAreaBase::eventMouseDown(const SDL_MouseButtonEvent& m)$/;"	f	class:RScrollAreaBase	signature:(const SDL_MouseButtonEvent& m)
RScrollAreaBase::eventMouseDown	/home/viper/projects/RBit/rscrollarea.h	/^    virtual void eventMouseDown(const SDL_MouseButtonEvent&);$/;"	p	class:RScrollAreaBase	access:protected	signature:(const SDL_MouseButtonEvent&)
RScrollAreaBase::horizontalScrollBar	/home/viper/projects/RBit/rscrollarea.h	/^    RScrollBar* horizontalScrollBar() const;$/;"	p	class:RScrollAreaBase	access:public	signature:() const
RScrollAreaBase::horizontalScrollBar	/home/viper/projects/RBit/rscrollarea.h	/^inline RScrollBar* RScrollAreaBase::horizontalScrollBar() const$/;"	f	class:RScrollAreaBase	signature:() const
RScrollAreaBase::horizontalScrollBarAction	/home/viper/projects/RBit/rscrollarea.h	/^    virtual void horizontalScrollBarAction(RScrollBar::ScrollAction action)$/;"	f	class:RScrollAreaBase	access:protected	signature:(RScrollBar::ScrollAction action)
RScrollAreaBase::horizontalScrollBarPolicy	/home/viper/projects/RBit/rscrollarea.h	/^    ScrollBarPolicy horizontalScrollBarPolicy() const;$/;"	p	class:RScrollAreaBase	access:public	signature:() const
RScrollAreaBase::horizontalScrollBarPolicy	/home/viper/projects/RBit/rscrollarea.h	/^inline RScrollAreaBase::ScrollBarPolicy RScrollAreaBase::horizontalScrollBarPolicy() const$/;"	f	class:RScrollAreaBase	signature:() const
RScrollAreaBase::hslide	/home/viper/projects/RBit/rscrollarea.cpp	/^void RScrollAreaBase::hslide(Sint32 x)$/;"	f	class:RScrollAreaBase	signature:(Sint32 x)
RScrollAreaBase::hslide	/home/viper/projects/RBit/rscrollarea.h	/^    void hslide(Sint32);$/;"	p	class:RScrollAreaBase	access:private	signature:(Sint32)
RScrollAreaBase::layoutChildren	/home/viper/projects/RBit/rscrollarea.cpp	/^void RScrollAreaBase::layoutChildren()$/;"	f	class:RScrollAreaBase	signature:()
RScrollAreaBase::layoutChildren	/home/viper/projects/RBit/rscrollarea.h	/^    void layoutChildren();$/;"	p	class:RScrollAreaBase	access:private	signature:()
RScrollAreaBase::m_bottom	/home/viper/projects/RBit/rscrollarea.h	/^    Uint16 m_left, m_top, m_right, m_bottom; \/\/ viewport margin$/;"	m	class:RScrollAreaBase	access:private
RScrollAreaBase::m_frameRect	/home/viper/projects/RBit/rscrollarea.h	/^    RRect m_frameRect;$/;"	m	class:RScrollAreaBase	access:private
RScrollAreaBase::m_hbar	/home/viper/projects/RBit/rscrollarea.h	/^    ScrollBar* m_hbar, *m_vbar;$/;"	m	class:RScrollAreaBase	access:private
RScrollAreaBase::m_hbarpolicy	/home/viper/projects/RBit/rscrollarea.h	/^    ScrollBarPolicy m_vbarpolicy, m_hbarpolicy;$/;"	m	class:RScrollAreaBase	access:private
RScrollAreaBase::m_left	/home/viper/projects/RBit/rscrollarea.h	/^    Uint16 m_left, m_top, m_right, m_bottom; \/\/ viewport margin$/;"	m	class:RScrollAreaBase	access:private
RScrollAreaBase::m_right	/home/viper/projects/RBit/rscrollarea.h	/^    Uint16 m_left, m_top, m_right, m_bottom; \/\/ viewport margin$/;"	m	class:RScrollAreaBase	access:private
RScrollAreaBase::m_top	/home/viper/projects/RBit/rscrollarea.h	/^    Uint16 m_left, m_top, m_right, m_bottom; \/\/ viewport margin$/;"	m	class:RScrollAreaBase	access:private
RScrollAreaBase::m_vbar	/home/viper/projects/RBit/rscrollarea.h	/^    ScrollBar* m_hbar, *m_vbar;$/;"	m	class:RScrollAreaBase	access:private
RScrollAreaBase::m_vbarpolicy	/home/viper/projects/RBit/rscrollarea.h	/^    ScrollBarPolicy m_vbarpolicy, m_hbarpolicy;$/;"	m	class:RScrollAreaBase	access:private
RScrollAreaBase::m_viewport	/home/viper/projects/RBit/rscrollarea.h	/^    mutable RWidget* m_viewport;$/;"	m	class:RScrollAreaBase	access:private
RScrollAreaBase::m_xoffset	/home/viper/projects/RBit/rscrollarea.h	/^    Uint16 m_xoffset, m_yoffset;$/;"	m	class:RScrollAreaBase	access:private
RScrollAreaBase::m_yoffset	/home/viper/projects/RBit/rscrollarea.h	/^    Uint16 m_xoffset, m_yoffset;$/;"	m	class:RScrollAreaBase	access:private
RScrollAreaBase::maximumViewportSize	/home/viper/projects/RBit/rscrollarea.cpp	/^RSize RScrollAreaBase::maximumViewportSize() const$/;"	f	class:RScrollAreaBase	signature:() const
RScrollAreaBase::maximumViewportSize	/home/viper/projects/RBit/rscrollarea.h	/^    RSize maximumViewportSize() const;$/;"	p	class:RScrollAreaBase	access:public	signature:() const
RScrollAreaBase::minimumSizeHint	/home/viper/projects/RBit/rscrollarea.h	/^    RSize minimumSizeHint() const;$/;"	p	class:RScrollAreaBase	access:public	signature:() const
RScrollAreaBase::minimumViewportSize	/home/viper/projects/RBit/rscrollarea.cpp	/^RSize RScrollAreaBase::minimumViewportSize() const$/;"	f	class:RScrollAreaBase	signature:() const
RScrollAreaBase::minimumViewportSize	/home/viper/projects/RBit/rscrollarea.h	/^    RSize minimumViewportSize() const;$/;"	p	class:RScrollAreaBase	access:public	signature:() const
RScrollAreaBase::operator =	/home/viper/projects/RBit/rscrollarea.h	/^    RScrollAreaBase& operator=(const RScrollAreaBase&);$/;"	p	class:RScrollAreaBase	access:private	signature:(const RScrollAreaBase&)
RScrollAreaBase::repaintImpl	/home/viper/projects/RBit/rscrollarea.cpp	/^void RScrollAreaBase::repaintImpl(const RRect& r)$/;"	f	class:RScrollAreaBase	signature:(const RRect& r)
RScrollAreaBase::repaintImpl	/home/viper/projects/RBit/rscrollarea.h	/^    virtual void repaintImpl(const RRect& rect);$/;"	p	class:RScrollAreaBase	access:protected	signature:(const RRect& rect)
RScrollAreaBase::scrollContentsBy	/home/viper/projects/RBit/rscrollarea.cpp	/^void RScrollAreaBase::scrollContentsBy(Sint32, Sint32)$/;"	f	class:RScrollAreaBase	signature:(Sint32, Sint32)
RScrollAreaBase::scrollContentsBy	/home/viper/projects/RBit/rscrollarea.h	/^    virtual void scrollContentsBy(int dx, int dy);$/;"	p	class:RScrollAreaBase	access:protected	signature:(int dx, int dy)
RScrollAreaBase::setGeometry	/home/viper/projects/RBit/rscrollarea.cpp	/^void RScrollAreaBase::setGeometry(const RPoint& p, const RSize& s)$/;"	f	class:RScrollAreaBase	signature:(const RPoint& p, const RSize& s)
RScrollAreaBase::setGeometry	/home/viper/projects/RBit/rscrollarea.h	/^    virtual void setGeometry(const RPoint& p, const RSize& s);$/;"	p	class:RScrollAreaBase	access:public	signature:(const RPoint& p, const RSize& s)
RScrollAreaBase::setHorizontalScrollBarPolicy	/home/viper/projects/RBit/rscrollarea.cpp	/^void RScrollAreaBase::setHorizontalScrollBarPolicy(RScrollAreaBase::ScrollBarPolicy policy)$/;"	f	class:RScrollAreaBase	signature:(RScrollAreaBase::ScrollBarPolicy policy)
RScrollAreaBase::setHorizontalScrollBarPolicy	/home/viper/projects/RBit/rscrollarea.h	/^    void setHorizontalScrollBarPolicy(ScrollBarPolicy);$/;"	p	class:RScrollAreaBase	access:public	signature:(ScrollBarPolicy)
RScrollAreaBase::setVerticalScrollBarPolicy	/home/viper/projects/RBit/rscrollarea.cpp	/^void RScrollAreaBase::setVerticalScrollBarPolicy(RScrollAreaBase::ScrollBarPolicy policy)$/;"	f	class:RScrollAreaBase	signature:(RScrollAreaBase::ScrollBarPolicy policy)
RScrollAreaBase::setVerticalScrollBarPolicy	/home/viper/projects/RBit/rscrollarea.h	/^    void setVerticalScrollBarPolicy(ScrollBarPolicy);$/;"	p	class:RScrollAreaBase	access:public	signature:(ScrollBarPolicy)
RScrollAreaBase::setViewportMargins	/home/viper/projects/RBit/rscrollarea.cpp	/^void RScrollAreaBase::setViewportMargins(int left, int top, int right, int bottom)$/;"	f	class:RScrollAreaBase	signature:(int left, int top, int right, int bottom)
RScrollAreaBase::setViewportMargins	/home/viper/projects/RBit/rscrollarea.h	/^    void setViewportMargins(int left, int top, int right, int bottom);$/;"	p	class:RScrollAreaBase	access:protected	signature:(int left, int top, int right, int bottom)
RScrollAreaBase::showOrHideScrollBars	/home/viper/projects/RBit/rscrollarea.h	/^    void showOrHideScrollBars();    $/;"	p	class:RScrollAreaBase	access:private	signature:()
RScrollAreaBase::showOrHideScrollBars	/home/viper/projects/RBit/rscrollarea.h	/^inline void RScrollAreaBase::showOrHideScrollBars()$/;"	f	class:RScrollAreaBase	signature:()
RScrollAreaBase::sizeHint	/home/viper/projects/RBit/rscrollarea.h	/^    RSize sizeHint() const;$/;"	p	class:RScrollAreaBase	access:public	signature:() const
RScrollAreaBase::sizeHint	/home/viper/projects/RBit/rscrollarea.h	/^inline RSize RScrollAreaBase::sizeHint() const$/;"	f	class:RScrollAreaBase	signature:() const
RScrollAreaBase::verticalScrollBar	/home/viper/projects/RBit/rscrollarea.h	/^    RScrollBar* verticalScrollBar() const;$/;"	p	class:RScrollAreaBase	access:public	signature:() const
RScrollAreaBase::verticalScrollBar	/home/viper/projects/RBit/rscrollarea.h	/^inline RScrollBar* RScrollAreaBase::verticalScrollBar() const$/;"	f	class:RScrollAreaBase	signature:() const
RScrollAreaBase::verticalScrollBarAction	/home/viper/projects/RBit/rscrollarea.h	/^    virtual void verticalScrollBarAction(RScrollBar::ScrollAction action) $/;"	f	class:RScrollAreaBase	access:protected	signature:(RScrollBar::ScrollAction action)
RScrollAreaBase::verticalScrollBarPolicy	/home/viper/projects/RBit/rscrollarea.h	/^    ScrollBarPolicy verticalScrollBarPolicy() const;$/;"	p	class:RScrollAreaBase	access:public	signature:() const
RScrollAreaBase::verticalScrollBarPolicy	/home/viper/projects/RBit/rscrollarea.h	/^inline RScrollAreaBase::ScrollBarPolicy RScrollAreaBase::verticalScrollBarPolicy() const$/;"	f	class:RScrollAreaBase	signature:() const
RScrollAreaBase::viewport	/home/viper/projects/RBit/rscrollarea.h	/^    RWidget* viewport() const;$/;"	p	class:RScrollAreaBase	access:public	signature:() const
RScrollAreaBase::viewport	/home/viper/projects/RBit/rscrollarea.h	/^inline RWidget* RScrollAreaBase::viewport() const$/;"	f	class:RScrollAreaBase	signature:() const
RScrollAreaBase::vslide	/home/viper/projects/RBit/rscrollarea.cpp	/^void RScrollAreaBase::vslide(Sint32 y)$/;"	f	class:RScrollAreaBase	signature:(Sint32 y)
RScrollAreaBase::vslide	/home/viper/projects/RBit/rscrollarea.h	/^    void vslide(Sint32);$/;"	p	class:RScrollAreaBase	access:private	signature:(Sint32)
RScrollBar	/home/viper/projects/RBit/rscrollbar.cpp	/^RScrollBar::RScrollBar(RBit::Orientation orientation, RWidget* parent, RWFlags flags)$/;"	f	class:RScrollBar	signature:(RBit::Orientation orientation, RWidget* parent, RWFlags flags)
RScrollBar	/home/viper/projects/RBit/rscrollbar.h	/^    RScrollBar(RBit::Orientation orientation, RWidget* parent = 0, RWFlags flags = 0);    $/;"	p	class:RScrollBar	access:public	signature:(RBit::Orientation orientation, RWidget* parent = 0, RWFlags flags = 0)
RScrollBar	/home/viper/projects/RBit/rscrollbar.h	/^    RScrollBar(const RScrollBar&);$/;"	p	class:RScrollBar	access:private	signature:(const RScrollBar&)
RScrollBar	/home/viper/projects/RBit/rscrollbar.h	/^class RBIT_CORE_EXPORT RScrollBar : public RWidget                   $/;"	c	inherits:RWidget
RScrollBar::RScrollBar	/home/viper/projects/RBit/rscrollbar.cpp	/^RScrollBar::RScrollBar(RBit::Orientation orientation, RWidget* parent, RWFlags flags)$/;"	f	class:RScrollBar	signature:(RBit::Orientation orientation, RWidget* parent, RWFlags flags)
RScrollBar::RScrollBar	/home/viper/projects/RBit/rscrollbar.h	/^    RScrollBar(RBit::Orientation orientation, RWidget* parent = 0, RWFlags flags = 0);    $/;"	p	class:RScrollBar	access:public	signature:(RBit::Orientation orientation, RWidget* parent = 0, RWFlags flags = 0)
RScrollBar::RScrollBar	/home/viper/projects/RBit/rscrollbar.h	/^    RScrollBar(const RScrollBar&);$/;"	p	class:RScrollBar	access:private	signature:(const RScrollBar&)
RScrollBar::SC_AddLine	/home/viper/projects/RBit/rscrollbar.h	/^        SC_AddLine = 0x01,$/;"	e	enum:RScrollBar::SubControl
RScrollBar::SC_AddPage	/home/viper/projects/RBit/rscrollbar.h	/^        SC_AddPage = 0x04,$/;"	e	enum:RScrollBar::SubControl
RScrollBar::SC_Groove	/home/viper/projects/RBit/rscrollbar.h	/^        SC_Groove  = 0x40$/;"	e	enum:RScrollBar::SubControl
RScrollBar::SC_None	/home/viper/projects/RBit/rscrollbar.h	/^        SC_None    = 0x00,$/;"	e	enum:RScrollBar::SubControl
RScrollBar::SC_Slider	/home/viper/projects/RBit/rscrollbar.h	/^        SC_Slider  = 0x20,$/;"	e	enum:RScrollBar::SubControl
RScrollBar::SC_SubLine	/home/viper/projects/RBit/rscrollbar.h	/^        SC_SubLine = 0x02,$/;"	e	enum:RScrollBar::SubControl
RScrollBar::SC_SubPage	/home/viper/projects/RBit/rscrollbar.h	/^        SC_SubPage = 0x10,$/;"	e	enum:RScrollBar::SubControl
RScrollBar::ScrollAction	/home/viper/projects/RBit/rscrollbar.h	/^    enum ScrollAction {$/;"	g	class:RScrollBar	access:public
RScrollBar::ScrollChange	/home/viper/projects/RBit/rscrollbar.h	/^    enum ScrollChange { $/;"	g	class:RScrollBar	access:protected
RScrollBar::ScrollMove	/home/viper/projects/RBit/rscrollbar.h	/^        ScrollMove$/;"	e	enum:RScrollBar::ScrollAction
RScrollBar::ScrollNoAction	/home/viper/projects/RBit/rscrollbar.h	/^        ScrollNoAction = 0,$/;"	e	enum:RScrollBar::ScrollAction
RScrollBar::ScrollPageStepAdd	/home/viper/projects/RBit/rscrollbar.h	/^        ScrollPageStepAdd,$/;"	e	enum:RScrollBar::ScrollAction
RScrollBar::ScrollPageStepSub	/home/viper/projects/RBit/rscrollbar.h	/^        ScrollPageStepSub,$/;"	e	enum:RScrollBar::ScrollAction
RScrollBar::ScrollRangeChange	/home/viper/projects/RBit/rscrollbar.h	/^        ScrollRangeChange,        $/;"	e	enum:RScrollBar::ScrollChange
RScrollBar::ScrollSingleStepAdd	/home/viper/projects/RBit/rscrollbar.h	/^        ScrollSingleStepAdd,$/;"	e	enum:RScrollBar::ScrollAction
RScrollBar::ScrollSingleStepSub	/home/viper/projects/RBit/rscrollbar.h	/^        ScrollSingleStepSub,$/;"	e	enum:RScrollBar::ScrollAction
RScrollBar::ScrollStepsChange	/home/viper/projects/RBit/rscrollbar.h	/^        ScrollStepsChange, $/;"	e	enum:RScrollBar::ScrollChange
RScrollBar::ScrollToMaximum	/home/viper/projects/RBit/rscrollbar.h	/^        ScrollToMaximum,$/;"	e	enum:RScrollBar::ScrollAction
RScrollBar::ScrollToMinimum	/home/viper/projects/RBit/rscrollbar.h	/^        ScrollToMinimum,$/;"	e	enum:RScrollBar::ScrollAction
RScrollBar::ScrollValueChange	/home/viper/projects/RBit/rscrollbar.h	/^        ScrollValueChange $/;"	e	enum:RScrollBar::ScrollChange
RScrollBar::SubControl	/home/viper/projects/RBit/rscrollbar.h	/^    enum SubControl {$/;"	g	class:RScrollBar	access:protected
RScrollBar::actionTriggered	/home/viper/projects/RBit/rscrollbar.cpp	/^void RScrollBar::actionTriggered(RScrollBar::ScrollAction)$/;"	f	class:RScrollBar	signature:(RScrollBar::ScrollAction)
RScrollBar::actionTriggered	/home/viper/projects/RBit/rscrollbar.h	/^    virtual void actionTriggered(ScrollAction action);$/;"	p	class:RScrollBar	access:protected	signature:(ScrollAction action)
RScrollBar::activateSubControl	/home/viper/projects/RBit/rscrollbar.cpp	/^void RScrollBar::activateSubControl(SubControl control)$/;"	f	class:RScrollBar	signature:(SubControl control)
RScrollBar::activateSubControl	/home/viper/projects/RBit/rscrollbar.h	/^    void activateSubControl(SubControl c);$/;"	p	class:RScrollBar	access:protected	signature:(SubControl c)
RScrollBar::bound	/home/viper/projects/RBit/rscrollbar.h	/^    Sint32 bound(Sint32);$/;"	p	class:RScrollBar	access:private	signature:(Sint32)
RScrollBar::bound	/home/viper/projects/RBit/rscrollbar.h	/^inline Sint32 RScrollBar::bound(Sint32 value)$/;"	f	class:RScrollBar	signature:(Sint32 value)
RScrollBar::eventIdle	/home/viper/projects/RBit/rscrollbar.cpp	/^void RScrollBar::eventIdle()$/;"	f	class:RScrollBar	signature:()
RScrollBar::eventIdle	/home/viper/projects/RBit/rscrollbar.h	/^    virtual void eventIdle();    $/;"	p	class:RScrollBar	access:protected	signature:()
RScrollBar::eventMouseDown	/home/viper/projects/RBit/rscrollbar.cpp	/^void RScrollBar::eventMouseDown(const SDL_MouseButtonEvent& m)$/;"	f	class:RScrollBar	signature:(const SDL_MouseButtonEvent& m)
RScrollBar::eventMouseDown	/home/viper/projects/RBit/rscrollbar.h	/^    virtual void eventMouseDown(const SDL_MouseButtonEvent& m);$/;"	p	class:RScrollBar	access:protected	signature:(const SDL_MouseButtonEvent& m)
RScrollBar::eventMouseMove	/home/viper/projects/RBit/rscrollbar.cpp	/^void RScrollBar::eventMouseMove(const SDL_MouseMotionEvent& m)$/;"	f	class:RScrollBar	signature:(const SDL_MouseMotionEvent& m)
RScrollBar::eventMouseMove	/home/viper/projects/RBit/rscrollbar.h	/^    virtual void eventMouseMove(const SDL_MouseMotionEvent& m);$/;"	p	class:RScrollBar	access:protected	signature:(const SDL_MouseMotionEvent& m)
RScrollBar::eventMouseUp	/home/viper/projects/RBit/rscrollbar.cpp	/^void RScrollBar::eventMouseUp(const SDL_MouseButtonEvent& m)$/;"	f	class:RScrollBar	signature:(const SDL_MouseButtonEvent& m)
RScrollBar::eventMouseUp	/home/viper/projects/RBit/rscrollbar.h	/^    virtual void eventMouseUp(const SDL_MouseButtonEvent& m);$/;"	p	class:RScrollBar	access:protected	signature:(const SDL_MouseButtonEvent& m)
RScrollBar::hitTestSubControl	/home/viper/projects/RBit/rscrollbar.cpp	/^RScrollBar::SubControl RScrollBar::hitTestSubControl(const RPoint& p) const$/;"	f	class:RScrollBar	signature:(const RPoint& p) const
RScrollBar::hitTestSubControl	/home/viper/projects/RBit/rscrollbar.h	/^    SubControl hitTestSubControl(const RPoint& p) const;$/;"	p	class:RScrollBar	access:protected	signature:(const RPoint& p) const
RScrollBar::isSliderDown	/home/viper/projects/RBit/rscrollbar.h	/^    bool isSliderDown() const;$/;"	p	class:RScrollBar	access:public	signature:() const
RScrollBar::isSliderDown	/home/viper/projects/RBit/rscrollbar.h	/^inline bool RScrollBar::isSliderDown() const$/;"	f	class:RScrollBar	signature:() const
RScrollBar::m_clickOffset	/home/viper/projects/RBit/rscrollbar.h	/^    Sint16       m_clickOffset;$/;"	m	class:RScrollBar	access:private
RScrollBar::m_lastRepeationTime	/home/viper/projects/RBit/rscrollbar.h	/^    Uint32       m_lastRepeationTime;$/;"	m	class:RScrollBar	access:private
RScrollBar::m_maximum	/home/viper/projects/RBit/rscrollbar.h	/^    Sint32       m_maximum;$/;"	m	class:RScrollBar	access:private
RScrollBar::m_minimum	/home/viper/projects/RBit/rscrollbar.h	/^    Sint32       m_minimum;$/;"	m	class:RScrollBar	access:private
RScrollBar::m_pageStep	/home/viper/projects/RBit/rscrollbar.h	/^    Uint32       m_pageStep;$/;"	m	class:RScrollBar	access:private
RScrollBar::m_pointerOutsidePressedControl	/home/viper/projects/RBit/rscrollbar.h	/^    bool         m_pointerOutsidePressedControl;$/;"	m	class:RScrollBar	access:private
RScrollBar::m_position	/home/viper/projects/RBit/rscrollbar.h	/^    Sint32       m_position;$/;"	m	class:RScrollBar	access:private
RScrollBar::m_pressedControl	/home/viper/projects/RBit/rscrollbar.h	/^    SubControl   m_pressedControl;$/;"	m	class:RScrollBar	access:private
RScrollBar::m_repeatAction	/home/viper/projects/RBit/rscrollbar.h	/^    ScrollAction m_repeatAction;$/;"	m	class:RScrollBar	access:private
RScrollBar::m_repeatTime	/home/viper/projects/RBit/rscrollbar.h	/^    Uint32       m_repeatTime;$/;"	m	class:RScrollBar	access:private
RScrollBar::m_singleStep	/home/viper/projects/RBit/rscrollbar.h	/^    Uint32       m_singleStep;$/;"	m	class:RScrollBar	access:private
RScrollBar::m_snapBackPosition	/home/viper/projects/RBit/rscrollbar.h	/^    Sint32       m_snapBackPosition;$/;"	m	class:RScrollBar	access:private
RScrollBar::m_thresholdTime	/home/viper/projects/RBit/rscrollbar.h	/^    Uint32       m_thresholdTime;$/;"	m	class:RScrollBar	access:private
RScrollBar::m_value	/home/viper/projects/RBit/rscrollbar.h	/^    Sint32       m_value;$/;"	m	class:RScrollBar	access:private
RScrollBar::maximum	/home/viper/projects/RBit/rscrollbar.h	/^    Sint32 maximum() const;$/;"	p	class:RScrollBar	access:public	signature:() const
RScrollBar::maximum	/home/viper/projects/RBit/rscrollbar.h	/^inline Sint32 RScrollBar::maximum() const$/;"	f	class:RScrollBar	signature:() const
RScrollBar::maximumDragDistance	/home/viper/projects/RBit/rscrollbar.h	/^    Sint16 maximumDragDistance() const;$/;"	p	class:RScrollBar	access:protected	signature:() const
RScrollBar::maximumDragDistance	/home/viper/projects/RBit/rscrollbar.h	/^inline Sint16 RScrollBar::maximumDragDistance() const$/;"	f	class:RScrollBar	signature:() const
RScrollBar::minimum	/home/viper/projects/RBit/rscrollbar.h	/^    Sint32 minimum() const;$/;"	p	class:RScrollBar	access:public	signature:() const
RScrollBar::minimum	/home/viper/projects/RBit/rscrollbar.h	/^inline Sint32 RScrollBar::minimum() const$/;"	f	class:RScrollBar	signature:() const
RScrollBar::operator =	/home/viper/projects/RBit/rscrollbar.h	/^    RScrollBar& operator=(const RScrollBar&);$/;"	p	class:RScrollBar	access:private	signature:(const RScrollBar&)
RScrollBar::orientation	/home/viper/projects/RBit/rscrollbar.h	/^    RBit::Orientation orientation() const;$/;"	p	class:RScrollBar	access:public	signature:() const
RScrollBar::orientation	/home/viper/projects/RBit/rscrollbar.h	/^inline RBit::Orientation RScrollBar::orientation() const$/;"	f	class:RScrollBar	signature:() const
RScrollBar::pageStep	/home/viper/projects/RBit/rscrollbar.h	/^    Uint32 pageStep() const;$/;"	p	class:RScrollBar	access:public	signature:() const
RScrollBar::pageStep	/home/viper/projects/RBit/rscrollbar.h	/^inline Uint32 RScrollBar::pageStep() const$/;"	f	class:RScrollBar	signature:() const
RScrollBar::pixelPosToRangeValue	/home/viper/projects/RBit/rscrollbar.cpp	/^Sint32 RScrollBar::pixelPosToRangeValue(Sint16 pos) const$/;"	f	class:RScrollBar	signature:(Sint16 pos) const
RScrollBar::pixelPosToRangeValue	/home/viper/projects/RBit/rscrollbar.h	/^    Sint32 pixelPosToRangeValue(Sint16 pos) const;$/;"	p	class:RScrollBar	access:protected	signature:(Sint16 pos) const
RScrollBar::repaintImpl	/home/viper/projects/RBit/rscrollbar.cpp	/^void RScrollBar::repaintImpl(const RRect& r)$/;"	f	class:RScrollBar	signature:(const RRect& r)
RScrollBar::repaintImpl	/home/viper/projects/RBit/rscrollbar.h	/^    virtual void repaintImpl(const RRect& r);$/;"	p	class:RScrollBar	access:protected	signature:(const RRect& r)
RScrollBar::repeatAction	/home/viper/projects/RBit/rscrollbar.h	/^    ScrollAction repeatAction () const;$/;"	p	class:RScrollBar	access:protected	signature:() const
RScrollBar::repeatAction	/home/viper/projects/RBit/rscrollbar.h	/^inline RScrollBar::ScrollAction RScrollBar::repeatAction() const$/;"	f	class:RScrollBar	signature:() const
RScrollBar::scrollBarExtent	/home/viper/projects/RBit/rscrollbar.h	/^    Uint16 scrollBarExtent() const;$/;"	p	class:RScrollBar	access:public	signature:() const
RScrollBar::scrollBarExtent	/home/viper/projects/RBit/rscrollbar.h	/^inline Uint16 RScrollBar::scrollBarExtent() const$/;"	f	class:RScrollBar	signature:() const
RScrollBar::scrollBarSliderMin	/home/viper/projects/RBit/rscrollbar.h	/^    Uint16 scrollBarSliderMin() const;$/;"	p	class:RScrollBar	access:public	signature:() const
RScrollBar::scrollBarSliderMin	/home/viper/projects/RBit/rscrollbar.h	/^inline Uint16 RScrollBar::scrollBarSliderMin() const$/;"	f	class:RScrollBar	signature:() const
RScrollBar::scrollChange	/home/viper/projects/RBit/rscrollbar.cpp	/^void RScrollBar::scrollChange(RScrollBar::ScrollChange change)$/;"	f	class:RScrollBar	signature:(RScrollBar::ScrollChange change)
RScrollBar::scrollChange	/home/viper/projects/RBit/rscrollbar.h	/^    virtual void scrollChange(ScrollChange change);$/;"	p	class:RScrollBar	access:protected	signature:(ScrollChange change)
RScrollBar::scrollValue	/home/viper/projects/RBit/rscrollbar.h	/^    Sint32 scrollValue() const;$/;"	p	class:RScrollBar	access:public	signature:() const
RScrollBar::scrollValue	/home/viper/projects/RBit/rscrollbar.h	/^inline Sint32 RScrollBar::scrollValue() const$/;"	f	class:RScrollBar	signature:() const
RScrollBar::setMaximum	/home/viper/projects/RBit/rscrollbar.h	/^    void setMaximum(Sint32);$/;"	p	class:RScrollBar	access:public	signature:(Sint32)
RScrollBar::setMaximum	/home/viper/projects/RBit/rscrollbar.h	/^inline void RScrollBar::setMaximum(Sint32 max)$/;"	f	class:RScrollBar	signature:(Sint32 max)
RScrollBar::setMinimum	/home/viper/projects/RBit/rscrollbar.h	/^    void setMinimum(Sint32);$/;"	p	class:RScrollBar	access:public	signature:(Sint32)
RScrollBar::setMinimum	/home/viper/projects/RBit/rscrollbar.h	/^inline void RScrollBar::setMinimum(Sint32 min)$/;"	f	class:RScrollBar	signature:(Sint32 min)
RScrollBar::setPageStep	/home/viper/projects/RBit/rscrollbar.cpp	/^void RScrollBar::setPageStep(Uint32 pageStep)$/;"	f	class:RScrollBar	signature:(Uint32 pageStep)
RScrollBar::setPageStep	/home/viper/projects/RBit/rscrollbar.h	/^    void setPageStep(Uint32);$/;"	p	class:RScrollBar	access:public	signature:(Uint32)
RScrollBar::setRange	/home/viper/projects/RBit/rscrollbar.cpp	/^void RScrollBar::setRange(Sint32 min_, Sint32 max_)$/;"	f	class:RScrollBar	signature:(Sint32 min_, Sint32 max_)
RScrollBar::setRange	/home/viper/projects/RBit/rscrollbar.h	/^    void setRange(Sint32 min, Sint32 max);$/;"	p	class:RScrollBar	access:public	signature:(Sint32 min, Sint32 max)
RScrollBar::setRepeatAction	/home/viper/projects/RBit/rscrollbar.cpp	/^void RScrollBar::setRepeatAction(ScrollAction action, Uint16 thresholdTime, Uint16 repeatTime)$/;"	f	class:RScrollBar	signature:(ScrollAction action, Uint16 thresholdTime, Uint16 repeatTime)
RScrollBar::setRepeatAction	/home/viper/projects/RBit/rscrollbar.h	/^    void setRepeatAction(ScrollAction action, Uint16 thresholdTime = 500, Uint16 repeatTime = 50);$/;"	p	class:RScrollBar	access:protected	signature:(ScrollAction action, Uint16 thresholdTime = 500, Uint16 repeatTime = 50)
RScrollBar::setScrollValue	/home/viper/projects/RBit/rscrollbar.cpp	/^void RScrollBar::setScrollValue(Sint32 value)$/;"	f	class:RScrollBar	signature:(Sint32 value)
RScrollBar::setScrollValue	/home/viper/projects/RBit/rscrollbar.h	/^    void setScrollValue(Sint32);$/;"	p	class:RScrollBar	access:public	signature:(Sint32)
RScrollBar::setSingleStep	/home/viper/projects/RBit/rscrollbar.cpp	/^void RScrollBar::setSingleStep(Uint32 step)$/;"	f	class:RScrollBar	signature:(Uint32 step)
RScrollBar::setSingleStep	/home/viper/projects/RBit/rscrollbar.h	/^    void setSingleStep(Uint32);$/;"	p	class:RScrollBar	access:public	signature:(Uint32)
RScrollBar::setSliderDown	/home/viper/projects/RBit/rscrollbar.cpp	/^void RScrollBar::setSliderDown(bool down)$/;"	f	class:RScrollBar	signature:(bool down)
RScrollBar::setSliderDown	/home/viper/projects/RBit/rscrollbar.h	/^    void setSliderDown(bool down);$/;"	p	class:RScrollBar	access:public	signature:(bool down)
RScrollBar::setSliderPosition	/home/viper/projects/RBit/rscrollbar.cpp	/^void RScrollBar::setSliderPosition(Sint32 pos)$/;"	f	class:RScrollBar	signature:(Sint32 pos)
RScrollBar::setSliderPosition	/home/viper/projects/RBit/rscrollbar.h	/^    void setSliderPosition(Sint32);$/;"	p	class:RScrollBar	access:public	signature:(Sint32)
RScrollBar::setTrackingEnabled	/home/viper/projects/RBit/rscrollbar.h	/^    void setTrackingEnabled(bool enabled);    $/;"	p	class:RScrollBar	access:public	signature:(bool enabled)
RScrollBar::setTrackingEnabled	/home/viper/projects/RBit/rscrollbar.h	/^inline void RScrollBar::setTrackingEnabled(bool enabled)$/;"	f	class:RScrollBar	signature:(bool enabled)
RScrollBar::singleStep	/home/viper/projects/RBit/rscrollbar.h	/^    Uint32 singleStep() const;$/;"	p	class:RScrollBar	access:public	signature:() const
RScrollBar::singleStep	/home/viper/projects/RBit/rscrollbar.h	/^inline Uint32 RScrollBar::singleStep() const$/;"	f	class:RScrollBar	signature:() const
RScrollBar::sizeHint	/home/viper/projects/RBit/rscrollbar.cpp	/^RSize RScrollBar::sizeHint() const$/;"	f	class:RScrollBar	signature:() const
RScrollBar::sizeHint	/home/viper/projects/RBit/rscrollbar.h	/^    RSize sizeHint() const;$/;"	p	class:RScrollBar	access:public	signature:() const
RScrollBar::sliderPosition	/home/viper/projects/RBit/rscrollbar.h	/^    Sint32 sliderPosition() const;$/;"	p	class:RScrollBar	access:public	signature:() const
RScrollBar::sliderPosition	/home/viper/projects/RBit/rscrollbar.h	/^inline Sint32 RScrollBar::sliderPosition() const$/;"	f	class:RScrollBar	signature:() const
RScrollBar::sliderPositionFromValue	/home/viper/projects/RBit/rscrollbar.cpp	/^Sint32 RScrollBar::sliderPositionFromValue(Sint32 min, Sint32 max, Sint32 logicalValue, Sint16 span, bool upsideDown) const$/;"	f	class:RScrollBar	signature:(Sint32 min, Sint32 max, Sint32 logicalValue, Sint16 span, bool upsideDown) const
RScrollBar::sliderPositionFromValue	/home/viper/projects/RBit/rscrollbar.h	/^    Sint32 sliderPositionFromValue(Sint32 min, Sint32 max, Sint32 logicalValue, Sint16 span, bool upsideDown) const;$/;"	p	class:RScrollBar	access:protected	signature:(Sint32 min, Sint32 max, Sint32 logicalValue, Sint16 span, bool upsideDown) const
RScrollBar::sliderValueFromPosition	/home/viper/projects/RBit/rscrollbar.cpp	/^Sint32 RScrollBar::sliderValueFromPosition(Sint32 min, Sint32 max, Sint32 pos, Sint32 span, bool upsideDown) const$/;"	f	class:RScrollBar	signature:(Sint32 min, Sint32 max, Sint32 pos, Sint32 span, bool upsideDown) const
RScrollBar::sliderValueFromPosition	/home/viper/projects/RBit/rscrollbar.h	/^    Sint32 sliderValueFromPosition(Sint32 min, Sint32 max, Sint32 pos, Sint32 span, bool upsideDown) const;$/;"	p	class:RScrollBar	access:protected	signature:(Sint32 min, Sint32 max, Sint32 pos, Sint32 span, bool upsideDown) const
RScrollBar::subControlRect	/home/viper/projects/RBit/rscrollbar.cpp	/^RRect RScrollBar::subControlRect(SubControl sc) const$/;"	f	class:RScrollBar	signature:(SubControl sc) const
RScrollBar::subControlRect	/home/viper/projects/RBit/rscrollbar.h	/^    RRect subControlRect(SubControl c) const;$/;"	p	class:RScrollBar	access:protected	signature:(SubControl c) const
RScrollBar::trackingEnabled	/home/viper/projects/RBit/rscrollbar.h	/^    bool trackingEnabled() const;$/;"	p	class:RScrollBar	access:public	signature:() const
RScrollBar::trackingEnabled	/home/viper/projects/RBit/rscrollbar.h	/^inline bool RScrollBar::trackingEnabled() const$/;"	f	class:RScrollBar	signature:() const
RScrollBar::triggerAction	/home/viper/projects/RBit/rscrollbar.cpp	/^void RScrollBar::triggerAction(RScrollBar::ScrollAction action)$/;"	f	class:RScrollBar	signature:(RScrollBar::ScrollAction action)
RScrollBar::triggerAction	/home/viper/projects/RBit/rscrollbar.h	/^    void triggerAction(ScrollAction);$/;"	p	class:RScrollBar	access:public	signature:(ScrollAction)
RScrollWidgetArea	/home/viper/projects/RBit/rscrollwidgetarea.h	/^    RScrollWidgetArea(RWidget* parent=0, RWFlags flags=0);$/;"	p	class:RScrollWidgetArea	access:public	signature:(RWidget* parent=0, RWFlags flags=0)
RScrollWidgetArea	/home/viper/projects/RBit/rscrollwidgetarea.h	/^    RScrollWidgetArea(const RScrollWidgetArea&);$/;"	p	class:RScrollWidgetArea	access:private	signature:(const RScrollWidgetArea&)
RScrollWidgetArea	/home/viper/projects/RBit/rscrollwidgetarea.h	/^class RScrollWidgetArea : public RScrollWidgetAreaBase$/;"	c	inherits:RScrollWidgetAreaBase
RScrollWidgetArea	/home/viper/projects/RBit/rscrollwidgetarea.h	/^inline RScrollWidgetArea<W>::RScrollWidgetArea(RWidget* parent, RWFlags flags)$/;"	f	class:RScrollWidgetArea	signature:(RWidget* parent, RWFlags flags)
RScrollWidgetArea::RScrollWidgetArea	/home/viper/projects/RBit/rscrollwidgetarea.h	/^    RScrollWidgetArea(RWidget* parent=0, RWFlags flags=0);$/;"	p	class:RScrollWidgetArea	access:public	signature:(RWidget* parent=0, RWFlags flags=0)
RScrollWidgetArea::RScrollWidgetArea	/home/viper/projects/RBit/rscrollwidgetarea.h	/^    RScrollWidgetArea(const RScrollWidgetArea&);$/;"	p	class:RScrollWidgetArea	access:private	signature:(const RScrollWidgetArea&)
RScrollWidgetArea::RScrollWidgetArea	/home/viper/projects/RBit/rscrollwidgetarea.h	/^inline RScrollWidgetArea<W>::RScrollWidgetArea(RWidget* parent, RWFlags flags)$/;"	f	class:RScrollWidgetArea	signature:(RWidget* parent, RWFlags flags)
RScrollWidgetArea::createWidget	/home/viper/projects/RBit/rscrollwidgetarea.h	/^    virtual RWidget* createWidget(RWidget* parent, RWFlags flags);    $/;"	p	class:RScrollWidgetArea	access:protected	signature:(RWidget* parent, RWFlags flags)
RScrollWidgetArea::createWidget	/home/viper/projects/RBit/rscrollwidgetarea.h	/^inline RWidget* RScrollWidgetArea<W>::createWidget(RWidget* parent, RWFlags flags)    $/;"	f	class:RScrollWidgetArea	signature:(RWidget* parent, RWFlags flags)
RScrollWidgetArea::operator =	/home/viper/projects/RBit/rscrollwidgetarea.h	/^    RScrollWidgetArea& operator=(const RScrollWidgetArea&);$/;"	p	class:RScrollWidgetArea	access:private	signature:(const RScrollWidgetArea&)
RScrollWidgetAreaBase	/home/viper/projects/RBit/rscrollwidgetarea.cpp	/^RScrollWidgetAreaBase::RScrollWidgetAreaBase(RWidget *parent, RWFlags flags)$/;"	f	class:RScrollWidgetAreaBase	signature:(RWidget *parent, RWFlags flags)
RScrollWidgetAreaBase	/home/viper/projects/RBit/rscrollwidgetarea.h	/^    RScrollWidgetAreaBase(RWidget* parent=0, RWFlags flags=0);$/;"	p	class:RScrollWidgetAreaBase	access:public	signature:(RWidget* parent=0, RWFlags flags=0)
RScrollWidgetAreaBase	/home/viper/projects/RBit/rscrollwidgetarea.h	/^    RScrollWidgetAreaBase(const RScrollWidgetAreaBase&);$/;"	p	class:RScrollWidgetAreaBase	access:private	signature:(const RScrollWidgetAreaBase&)
RScrollWidgetAreaBase	/home/viper/projects/RBit/rscrollwidgetarea.h	/^class RBIT_CORE_EXPORT RScrollWidgetAreaBase : public RScrollArea$/;"	c	inherits:RScrollArea
RScrollWidgetAreaBase::RScrollWidgetAreaBase	/home/viper/projects/RBit/rscrollwidgetarea.cpp	/^RScrollWidgetAreaBase::RScrollWidgetAreaBase(RWidget *parent, RWFlags flags)$/;"	f	class:RScrollWidgetAreaBase	signature:(RWidget *parent, RWFlags flags)
RScrollWidgetAreaBase::RScrollWidgetAreaBase	/home/viper/projects/RBit/rscrollwidgetarea.h	/^    RScrollWidgetAreaBase(RWidget* parent=0, RWFlags flags=0);$/;"	p	class:RScrollWidgetAreaBase	access:public	signature:(RWidget* parent=0, RWFlags flags=0)
RScrollWidgetAreaBase::RScrollWidgetAreaBase	/home/viper/projects/RBit/rscrollwidgetarea.h	/^    RScrollWidgetAreaBase(const RScrollWidgetAreaBase&);$/;"	p	class:RScrollWidgetAreaBase	access:private	signature:(const RScrollWidgetAreaBase&)
RScrollWidgetAreaBase::createViewport	/home/viper/projects/RBit/rscrollwidgetarea.h	/^    virtual RWidget* createViewport(RWidget* parent, RWFlags flags);$/;"	p	class:RScrollWidgetAreaBase	access:protected	signature:(RWidget* parent, RWFlags flags)
RScrollWidgetAreaBase::createViewport	/home/viper/projects/RBit/rscrollwidgetarea.h	/^inline RWidget* RScrollWidgetAreaBase::createViewport(RWidget* parent, RWFlags flags)$/;"	f	class:RScrollWidgetAreaBase	signature:(RWidget* parent, RWFlags flags)
RScrollWidgetAreaBase::createWidget	/home/viper/projects/RBit/rscrollwidgetarea.h	/^    virtual RWidget* createWidget(RWidget* parent, RWFlags flags)=0;$/;"	p	class:RScrollWidgetAreaBase	access:protected	signature:(RWidget* parent, RWFlags flags)
RScrollWidgetAreaBase::m_resizable	/home/viper/projects/RBit/rscrollwidgetarea.h	/^    bool m_resizable;$/;"	m	class:RScrollWidgetAreaBase	access:private
RScrollWidgetAreaBase::m_widget	/home/viper/projects/RBit/rscrollwidgetarea.h	/^    RWidget* m_widget;    $/;"	m	class:RScrollWidgetAreaBase	access:private
RScrollWidgetAreaBase::operator =	/home/viper/projects/RBit/rscrollwidgetarea.h	/^    RScrollWidgetAreaBase& operator=(const RScrollWidgetAreaBase&);$/;"	p	class:RScrollWidgetAreaBase	access:private	signature:(const RScrollWidgetAreaBase&)
RScrollWidgetAreaBase::scrollContentsBy	/home/viper/projects/RBit/rscrollwidgetarea.cpp	/^void RScrollWidgetAreaBase::scrollContentsBy(Sint32, Sint32)$/;"	f	class:RScrollWidgetAreaBase	signature:(Sint32, Sint32)
RScrollWidgetAreaBase::scrollContentsBy	/home/viper/projects/RBit/rscrollwidgetarea.h	/^    virtual void scrollContentsBy(Sint32 dx, Sint32 dy);$/;"	p	class:RScrollWidgetAreaBase	access:protected	signature:(Sint32 dx, Sint32 dy)
RScrollWidgetAreaBase::setGeometry	/home/viper/projects/RBit/rscrollwidgetarea.cpp	/^void RScrollWidgetAreaBase::setGeometry(const RPoint& p, const RSize& s)$/;"	f	class:RScrollWidgetAreaBase	signature:(const RPoint& p, const RSize& s)
RScrollWidgetAreaBase::setGeometry	/home/viper/projects/RBit/rscrollwidgetarea.h	/^    virtual void setGeometry(const RPoint& p, const RSize& s);$/;"	p	class:RScrollWidgetAreaBase	access:public	signature:(const RPoint& p, const RSize& s)
RScrollWidgetAreaBase::setWidget	/home/viper/projects/RBit/rscrollwidgetarea.cpp	/^void RScrollWidgetAreaBase::setWidget(RWidget *w)$/;"	f	class:RScrollWidgetAreaBase	signature:(RWidget *w)
RScrollWidgetAreaBase::setWidget	/home/viper/projects/RBit/rscrollwidgetarea.h	/^    void setWidget(RWidget*);    $/;"	p	class:RScrollWidgetAreaBase	access:private	signature:(RWidget*)
RScrollWidgetAreaBase::setWidgetResizable	/home/viper/projects/RBit/rscrollwidgetarea.cpp	/^void RScrollWidgetAreaBase::setWidgetResizable(bool resizable)$/;"	f	class:RScrollWidgetAreaBase	signature:(bool resizable)
RScrollWidgetAreaBase::setWidgetResizable	/home/viper/projects/RBit/rscrollwidgetarea.h	/^    void setWidgetResizable(bool resizable);$/;"	p	class:RScrollWidgetAreaBase	access:public	signature:(bool resizable)
RScrollWidgetAreaBase::sizeHint	/home/viper/projects/RBit/rscrollwidgetarea.h	/^    RSize sizeHint() const;    $/;"	p	class:RScrollWidgetAreaBase	access:public	signature:() const
RScrollWidgetAreaBase::updateScrollBars	/home/viper/projects/RBit/rscrollwidgetarea.cpp	/^void RScrollWidgetAreaBase::updateScrollBars()$/;"	f	class:RScrollWidgetAreaBase	signature:()
RScrollWidgetAreaBase::updateScrollBars	/home/viper/projects/RBit/rscrollwidgetarea.h	/^    void updateScrollBars();$/;"	p	class:RScrollWidgetAreaBase	access:protected	signature:()
RScrollWidgetAreaBase::widget	/home/viper/projects/RBit/rscrollwidgetarea.h	/^    RWidget *widget() const;$/;"	p	class:RScrollWidgetAreaBase	access:public	signature:() const
RScrollWidgetAreaBase::widget	/home/viper/projects/RBit/rscrollwidgetarea.h	/^inline RWidget* RScrollWidgetAreaBase::widget() const$/;"	f	class:RScrollWidgetAreaBase	signature:() const
RScrollWidgetAreaBase::widgetResizable	/home/viper/projects/RBit/rscrollwidgetarea.cpp	/^bool RScrollWidgetAreaBase::widgetResizable() const$/;"	f	class:RScrollWidgetAreaBase	signature:() const
RScrollWidgetAreaBase::widgetResizable	/home/viper/projects/RBit/rscrollwidgetarea.h	/^    bool widgetResizable() const;$/;"	p	class:RScrollWidgetAreaBase	access:public	signature:() const
RSharedPtr	/home/viper/projects/RBit/rsharedptr.h	/^    RSharedPtr()$/;"	f	class:RSharedPtr	access:public	signature:()
RSharedPtr	/home/viper/projects/RBit/rsharedptr.h	/^    RSharedPtr(T* ptr)$/;"	f	class:RSharedPtr	access:public	signature:(T* ptr)
RSharedPtr	/home/viper/projects/RBit/rsharedptr.h	/^class RSharedPtr {$/;"	c
RSharedPtr::RSharedPtr	/home/viper/projects/RBit/rsharedptr.h	/^    RSharedPtr()$/;"	f	class:RSharedPtr	access:public	signature:()
RSharedPtr::RSharedPtr	/home/viper/projects/RBit/rsharedptr.h	/^    RSharedPtr(T* ptr)$/;"	f	class:RSharedPtr	access:public	signature:(T* ptr)
RSharedPtr::SharedCounter	/home/viper/projects/RBit/rsharedptr.h	/^    class SharedCounter {$/;"	c	class:RSharedPtr	access:private
RSharedPtr::SharedCounter::SharedCounter	/home/viper/projects/RBit/rsharedptr.h	/^		SharedCounter(P p, U d) :$/;"	f	class:RSharedPtr::SharedCounter	access:public	signature:(P p, U d)
RSharedPtr::SharedCounter::SharedCounter	/home/viper/projects/RBit/rsharedptr.h	/^        SharedCounter() $/;"	f	class:RSharedPtr::SharedCounter	access:public	signature:()
RSharedPtr::SharedCounter::SharedCounter	/home/viper/projects/RBit/rsharedptr.h	/^        SharedCounter(const SharedCounter& rh)$/;"	f	class:RSharedPtr::SharedCounter	access:public	signature:(const SharedCounter& rh)
RSharedPtr::SharedCounter::count	/home/viper/projects/RBit/rsharedptr.h	/^        int count() const$/;"	f	class:RSharedPtr::SharedCounter	access:public	signature:() const
RSharedPtr::SharedCounter::m_helper	/home/viper/projects/RBit/rsharedptr.h	/^        SharedCounterHelperBase* m_helper;$/;"	m	class:RSharedPtr::SharedCounter	access:private
RSharedPtr::SharedCounter::operator =	/home/viper/projects/RBit/rsharedptr.h	/^        SharedCounter& operator=(const SharedCounter& rh)$/;"	f	class:RSharedPtr::SharedCounter	access:public	signature:(const SharedCounter& rh)
RSharedPtr::SharedCounter::~SharedCounter	/home/viper/projects/RBit/rsharedptr.h	/^        ~SharedCounter()$/;"	f	class:RSharedPtr::SharedCounter	access:public	signature:()
RSharedPtr::SharedCounterHelper	/home/viper/projects/RBit/rsharedptr.h	/^	class SharedCounterHelper : public SharedCounterHelperBase {$/;"	c	class:RSharedPtr	inherits:SharedCounterHelperBase	access:private
RSharedPtr::SharedCounterHelper::SharedCounterHelper	/home/viper/projects/RBit/rsharedptr.h	/^        SharedCounterHelper(P p, U d) $/;"	f	class:RSharedPtr::SharedCounterHelper	access:public	signature:(P p, U d)
RSharedPtr::SharedCounterHelper::m_del	/home/viper/projects/RBit/rsharedptr.h	/^        U m_del;$/;"	m	class:RSharedPtr::SharedCounterHelper	access:private
RSharedPtr::SharedCounterHelper::m_ptr	/home/viper/projects/RBit/rsharedptr.h	/^        P m_ptr;$/;"	m	class:RSharedPtr::SharedCounterHelper	access:private
RSharedPtr::SharedCounterHelper::release	/home/viper/projects/RBit/rsharedptr.h	/^        virtual void release()$/;"	f	class:RSharedPtr::SharedCounterHelper	access:public	signature:()
RSharedPtr::SharedCounterHelperBase	/home/viper/projects/RBit/rsharedptr.h	/^    class SharedCounterHelperBase {$/;"	c	class:RSharedPtr	access:private
RSharedPtr::SharedCounterHelperBase::SharedCounterHelperBase	/home/viper/projects/RBit/rsharedptr.h	/^        SharedCounterHelperBase() $/;"	f	class:RSharedPtr::SharedCounterHelperBase	access:public	signature:()
RSharedPtr::SharedCounterHelperBase::SharedCounterHelperBase	/home/viper/projects/RBit/rsharedptr.h	/^        SharedCounterHelperBase(const SharedCounterHelperBase&);$/;"	p	class:RSharedPtr::SharedCounterHelperBase	access:private	signature:(const SharedCounterHelperBase&)
RSharedPtr::SharedCounterHelperBase::count	/home/viper/projects/RBit/rsharedptr.h	/^        int count() const$/;"	f	class:RSharedPtr::SharedCounterHelperBase	access:public	signature:() const
RSharedPtr::SharedCounterHelperBase::deref	/home/viper/projects/RBit/rsharedptr.h	/^        void deref()$/;"	f	class:RSharedPtr::SharedCounterHelperBase	access:public	signature:()
RSharedPtr::SharedCounterHelperBase::m_count	/home/viper/projects/RBit/rsharedptr.h	/^        int m_count;$/;"	m	class:RSharedPtr::SharedCounterHelperBase	access:private
RSharedPtr::SharedCounterHelperBase::operator =	/home/viper/projects/RBit/rsharedptr.h	/^        SharedCounterHelperBase& operator=(const SharedCounterHelperBase&);$/;"	p	class:RSharedPtr::SharedCounterHelperBase	access:private	signature:(const SharedCounterHelperBase&)
RSharedPtr::SharedCounterHelperBase::ref	/home/viper/projects/RBit/rsharedptr.h	/^        void ref() $/;"	f	class:RSharedPtr::SharedCounterHelperBase	access:public	signature:()
RSharedPtr::SharedCounterHelperBase::release	/home/viper/projects/RBit/rsharedptr.h	/^        virtual void release()$/;"	f	class:RSharedPtr::SharedCounterHelperBase	access:public	signature:()
RSharedPtr::SharedCounterHelperBase::~SharedCounterHelperBase	/home/viper/projects/RBit/rsharedptr.h	/^        virtual ~SharedCounterHelperBase() $/;"	f	class:RSharedPtr::SharedCounterHelperBase	access:public	signature:()
RSharedPtr::deleter_type	/home/viper/projects/RBit/rsharedptr.h	/^    typedef D deleter_type;$/;"	t	class:RSharedPtr	access:public
RSharedPtr::element_type	/home/viper/projects/RBit/rsharedptr.h	/^    typedef T element_type;$/;"	t	class:RSharedPtr	access:public
RSharedPtr::get	/home/viper/projects/RBit/rsharedptr.h	/^    T* get() const$/;"	f	class:RSharedPtr	access:public	signature:() const
RSharedPtr::m_ptr	/home/viper/projects/RBit/rsharedptr.h	/^    T* m_ptr;$/;"	m	class:RSharedPtr	access:private
RSharedPtr::m_refcount	/home/viper/projects/RBit/rsharedptr.h	/^    SharedCounter m_refcount;$/;"	m	class:RSharedPtr	access:private
RSharedPtr::operator !	/home/viper/projects/RBit/rsharedptr.h	/^    bool operator!() const$/;"	f	class:RSharedPtr	access:public	signature:() const
RSharedPtr::operator *	/home/viper/projects/RBit/rsharedptr.h	/^    reference_type operator*() const$/;"	f	class:RSharedPtr	access:public	signature:() const
RSharedPtr::operator ->	/home/viper/projects/RBit/rsharedptr.h	/^    T* operator->() const$/;"	f	class:RSharedPtr	access:public	signature:() const
RSharedPtr::operator bool	/home/viper/projects/RBit/rsharedptr.h	/^    operator bool() const$/;"	f	class:RSharedPtr	access:public	signature:() const
RSharedPtr::reference_type	/home/viper/projects/RBit/rsharedptr.h	/^    typedef typename RSharedPtrTraits<T>::reference_type reference_type;$/;"	t	class:RSharedPtr	access:public
RSharedPtr::reset	/home/viper/projects/RBit/rsharedptr.h	/^    void reset(T* ptr = 0)$/;"	f	class:RSharedPtr	access:public	signature:(T* ptr = 0)
RSharedPtrDeleter	/home/viper/projects/RBit/rfont.h	/^class RSharedPtrDeleter<TTF_Font> {$/;"	c
RSharedPtrDeleter	/home/viper/projects/RBit/rsharedptr.h	/^class RSharedPtrDeleter {$/;"	c
RSharedPtrDeleter	/home/viper/projects/RBit/rsurface.h	/^template<> class RSharedPtrDeleter<SDL_Surface>$/;"	c
RSharedPtrDeleter::operator ()	/home/viper/projects/RBit/rfont.h	/^    void operator()(TTF_Font* ptr) const$/;"	f	class:RSharedPtrDeleter	access:public	signature:(TTF_Font* ptr) const
RSharedPtrDeleter::operator ()	/home/viper/projects/RBit/rsharedptr.h	/^    void operator()(T* ptr) const$/;"	f	class:RSharedPtrDeleter	access:public	signature:(T* ptr) const
RSharedPtrDeleter::operator ()	/home/viper/projects/RBit/rsurface.h	/^    void operator()(SDL_Surface* ptr) const$/;"	f	class:RSharedPtrDeleter	access:public	signature:(SDL_Surface* ptr) const
RSharedPtrTraits	/home/viper/projects/RBit/rsharedptr.h	/^	struct RSharedPtrTraits {    $/;"	s	namespace:__anon20
RSharedPtrTraits	/home/viper/projects/RBit/rsharedptr.h	/^	struct RSharedPtrTraits<void> {$/;"	s	namespace:__anon20
RSiblingWidgetList	/home/viper/projects/RBit/rapplication.h	/^typedef RSimpleList<RSiblingWidgetListNode, RSLPolicy_DontTrackSize> RSiblingWidgetList;$/;"	t
RSiblingWidgetList	/home/viper/projects/RBit/rwidget.h	/^typedef RSimpleList<RSiblingWidgetListNode, RSLPolicy_DontTrackSize> RSiblingWidgetList;$/;"	t
RSiblingWidgetListNode	/home/viper/projects/RBit/rapplication.h	/^typedef RSimpleListNode<RWidget, 1> RSiblingWidgetListNode;$/;"	t
RSiblingWidgetListNode	/home/viper/projects/RBit/rwidget.h	/^typedef RSimpleListNode<RWidget, 1> RSiblingWidgetListNode;$/;"	t
RSimpleCircularListNode	/home/viper/projects/RBit/rsimplelist.h	/^class RSimpleCircularListNode : protected RSimpleListNodeBase<i>$/;"	c	inherits:RSimpleListNodeBase
RSimpleCircularListNode::Base	/home/viper/projects/RBit/rsimplelist.h	/^	typedef RSimpleListNodeBase<i> Base;$/;"	t	class:RSimpleCircularListNode	access:protected
RSimpleCircularListNode::Contents	/home/viper/projects/RBit/rsimplelist.h	/^    typedef T Contents;$/;"	t	class:RSimpleCircularListNode	access:protected
RSimpleCircularListNode::Node	/home/viper/projects/RBit/rsimplelist.h	/^	typedef RSimpleCircularListNode<T, i> Node;$/;"	t	class:RSimpleCircularListNode	access:protected
RSimpleCircularListNode::isLinked	/home/viper/projects/RBit/rsimplelist.h	/^	inline bool isLinked() const$/;"	f	class:RSimpleCircularListNode	access:protected	signature:() const
RSimpleCircularListNode::isLinkedAfter	/home/viper/projects/RBit/rsimplelist.h	/^	inline bool isLinkedAfter(Node* after) const$/;"	f	class:RSimpleCircularListNode	access:protected	signature:(Node* after) const
RSimpleCircularListNode::isLinkedBefore	/home/viper/projects/RBit/rsimplelist.h	/^	inline bool isLinkedBefore(Node* before) const$/;"	f	class:RSimpleCircularListNode	access:protected	signature:(Node* before) const
RSimpleCircularListNode::isLinkedFirst	/home/viper/projects/RBit/rsimplelist.h	/^	inline bool isLinkedFirst() const$/;"	f	class:RSimpleCircularListNode	access:protected	signature:() const
RSimpleCircularListNode::isLinkedLast	/home/viper/projects/RBit/rsimplelist.h	/^	inline bool isLinkedLast() const$/;"	f	class:RSimpleCircularListNode	access:protected	signature:() const
RSimpleCircularListNode::isLinkedWith	/home/viper/projects/RBit/rsimplelist.h	/^	inline bool isLinkedWith(Node* node) const$/;"	f	class:RSimpleCircularListNode	access:protected	signature:(Node* node) const
RSimpleCircularListNode::linkAfter	/home/viper/projects/RBit/rsimplelist.h	/^	inline T* linkAfter(Node* after)$/;"	f	class:RSimpleCircularListNode	access:protected	signature:(Node* after)
RSimpleCircularListNode::linkBefore	/home/viper/projects/RBit/rsimplelist.h	/^	inline T* linkBefore(Node* before)$/;"	f	class:RSimpleCircularListNode	access:protected	signature:(Node* before)
RSimpleCircularListNode::next	/home/viper/projects/RBit/rsimplelist.h	/^	inline T* next() const$/;"	f	class:RSimpleCircularListNode	access:protected	signature:() const
RSimpleCircularListNode::prev	/home/viper/projects/RBit/rsimplelist.h	/^	inline T* prev() const$/;"	f	class:RSimpleCircularListNode	access:protected	signature:() const
RSimpleCircularListNode::unlink	/home/viper/projects/RBit/rsimplelist.h	/^	inline static void unlink(Node* first, Node* last)$/;"	f	class:RSimpleCircularListNode	access:protected	signature:(Node* first, Node* last)
RSimpleCircularListNode::unlink	/home/viper/projects/RBit/rsimplelist.h	/^	inline void unlink()$/;"	f	class:RSimpleCircularListNode	access:protected	signature:()
RSimpleGridModel	/home/viper/projects/RBit/rsimplegridmodel.h	/^    RSimpleGridModel(Uint32 rows=0, Uint32 columns=0, Item* prototype=0);$/;"	p	class:RSimpleGridModel	access:public	signature:(Uint32 rows=0, Uint32 columns=0, Item* prototype=0)
RSimpleGridModel	/home/viper/projects/RBit/rsimplegridmodel.h	/^class RBIT_CORE_EXPORT RSimpleGridModel : public RGridModel$/;"	c	inherits:RGridModel
RSimpleGridModel	/home/viper/projects/RBit/rsimplegridmodel.h	/^inline RSimpleGridModel::RSimpleGridModel(Uint32 rows, Uint32 columns, RSimpleGridModel::Item* prototype)$/;"	f	class:RSimpleGridModel	signature:(Uint32 rows, Uint32 columns, RSimpleGridModel::Item* prototype)
RSimpleGridModel::Item	/home/viper/projects/RBit/rsimplegridmodel.h	/^    class RBIT_CORE_EXPORT Item$/;"	c	class:RSimpleGridModel	access:public
RSimpleGridModel::Item::Item	/home/viper/projects/RBit/rsimplegridmodel.h	/^        Item(const char* text, const RFont&, int alignment, const RColor& bg, const RColor& fg, int type = Type);$/;"	p	class:RSimpleGridModel::Item	access:public	signature:(const char* text, const RFont&, int alignment, const RColor& bg, const RColor& fg, int type = Type)
RSimpleGridModel::Item::Item	/home/viper/projects/RBit/rsimplegridmodel.h	/^        explicit Item(const char* text, int type = Type);$/;"	p	class:RSimpleGridModel::Item	access:public	signature:(const char* text, int type = Type)
RSimpleGridModel::Item::Item	/home/viper/projects/RBit/rsimplegridmodel.h	/^        explicit Item(int type = Type);$/;"	p	class:RSimpleGridModel::Item	access:public	signature:(int type = Type)
RSimpleGridModel::Item::Item	/home/viper/projects/RBit/rsimplegridmodel.h	/^inline RSimpleGridModel::Item::Item(const char* text, const RFont& f, int a, const RColor& bg, const RColor& fg, int type)$/;"	f	class:RSimpleGridModel::Item	signature:(const char* text, const RFont& f, int a, const RColor& bg, const RColor& fg, int type)
RSimpleGridModel::Item::Item	/home/viper/projects/RBit/rsimplegridmodel.h	/^inline RSimpleGridModel::Item::Item(const char* text, int type)$/;"	f	class:RSimpleGridModel::Item	signature:(const char* text, int type)
RSimpleGridModel::Item::Item	/home/viper/projects/RBit/rsimplegridmodel.h	/^inline RSimpleGridModel::Item::Item(int type)$/;"	f	class:RSimpleGridModel::Item	signature:(int type)
RSimpleGridModel::Item::MetaData	/home/viper/projects/RBit/rsimplegridmodel.h	/^        struct MetaData$/;"	s	class:RSimpleGridModel::Item	access:private
RSimpleGridModel::Item::MetaData::MetaData	/home/viper/projects/RBit/rsimplegridmodel.cpp	/^RSimpleGridModel::Item::MetaData::MetaData()$/;"	f	class:RSimpleGridModel::Item::MetaData	signature:()
RSimpleGridModel::Item::MetaData::MetaData	/home/viper/projects/RBit/rsimplegridmodel.cpp	/^RSimpleGridModel::Item::MetaData::MetaData(const RFont& f, const RColor& bg, const RColor& fg, RAlignmentFlags a)$/;"	f	class:RSimpleGridModel::Item::MetaData	signature:(const RFont& f, const RColor& bg, const RColor& fg, RAlignmentFlags a)
RSimpleGridModel::Item::MetaData::MetaData	/home/viper/projects/RBit/rsimplegridmodel.h	/^            MetaData();$/;"	p	struct:RSimpleGridModel::Item::MetaData	access:public	signature:()
RSimpleGridModel::Item::MetaData::MetaData	/home/viper/projects/RBit/rsimplegridmodel.h	/^            MetaData(const RFont&, const RColor& bg, const RColor& fg, RAlignmentFlags);$/;"	p	struct:RSimpleGridModel::Item::MetaData	access:public	signature:(const RFont&, const RColor& bg, const RColor& fg, RAlignmentFlags)
RSimpleGridModel::Item::MetaData::alignment	/home/viper/projects/RBit/rsimplegridmodel.h	/^            int alignment;$/;"	m	struct:RSimpleGridModel::Item::MetaData	access:public
RSimpleGridModel::Item::MetaData::backgroundColor	/home/viper/projects/RBit/rsimplegridmodel.h	/^            RColor backgroundColor;$/;"	m	struct:RSimpleGridModel::Item::MetaData	access:public
RSimpleGridModel::Item::MetaData::font	/home/viper/projects/RBit/rsimplegridmodel.h	/^            RFont font;$/;"	m	struct:RSimpleGridModel::Item::MetaData	access:public
RSimpleGridModel::Item::MetaData::foregroundColor	/home/viper/projects/RBit/rsimplegridmodel.h	/^            RColor foregroundColor;$/;"	m	struct:RSimpleGridModel::Item::MetaData	access:public
RSimpleGridModel::Item::Type	/home/viper/projects/RBit/rsimplegridmodel.h	/^        enum { Type = 0, UserType = 1000 };$/;"	e	enum:RSimpleGridModel::Item::__anon4
RSimpleGridModel::Item::UserType	/home/viper/projects/RBit/rsimplegridmodel.h	/^        enum { Type = 0, UserType = 1000 };$/;"	e	enum:RSimpleGridModel::Item::__anon4
RSimpleGridModel::Item::backgroundColor	/home/viper/projects/RBit/rsimplegridmodel.h	/^        const RColor& backgroundColor() const;$/;"	p	class:RSimpleGridModel::Item	access:public	signature:() const
RSimpleGridModel::Item::backgroundColor	/home/viper/projects/RBit/rsimplegridmodel.h	/^inline const RColor& RSimpleGridModel::Item::backgroundColor() const$/;"	f	class:RSimpleGridModel::Item	signature:() const
RSimpleGridModel::Item::clone	/home/viper/projects/RBit/rsimplegridmodel.h	/^        virtual Item* clone() const;$/;"	p	class:RSimpleGridModel::Item	access:public	signature:() const
RSimpleGridModel::Item::clone	/home/viper/projects/RBit/rsimplegridmodel.h	/^inline RSimpleGridModel::Item* RSimpleGridModel::Item::clone() const$/;"	f	class:RSimpleGridModel::Item	signature:() const
RSimpleGridModel::Item::font	/home/viper/projects/RBit/rsimplegridmodel.h	/^        const RFont& font() const;$/;"	p	class:RSimpleGridModel::Item	access:public	signature:() const
RSimpleGridModel::Item::font	/home/viper/projects/RBit/rsimplegridmodel.h	/^inline const RFont& RSimpleGridModel::Item::font() const$/;"	f	class:RSimpleGridModel::Item	signature:() const
RSimpleGridModel::Item::foregroundColor	/home/viper/projects/RBit/rsimplegridmodel.h	/^        const RColor& foregroundColor() const;$/;"	p	class:RSimpleGridModel::Item	access:public	signature:() const
RSimpleGridModel::Item::foregroundColor	/home/viper/projects/RBit/rsimplegridmodel.h	/^inline const RColor& RSimpleGridModel::Item::foregroundColor() const$/;"	f	class:RSimpleGridModel::Item	signature:() const
RSimpleGridModel::Item::m_meta	/home/viper/projects/RBit/rsimplegridmodel.h	/^        MetaData* m_meta;$/;"	m	class:RSimpleGridModel::Item	access:private
RSimpleGridModel::Item::m_model	/home/viper/projects/RBit/rsimplegridmodel.h	/^        RSimpleGridModel* m_model;$/;"	m	class:RSimpleGridModel::Item	access:private
RSimpleGridModel::Item::m_rtti	/home/viper/projects/RBit/rsimplegridmodel.h	/^        int m_rtti;$/;"	m	class:RSimpleGridModel::Item	access:private
RSimpleGridModel::Item::m_text	/home/viper/projects/RBit/rsimplegridmodel.h	/^        RString m_text;$/;"	m	class:RSimpleGridModel::Item	access:private
RSimpleGridModel::Item::meta	/home/viper/projects/RBit/rsimplegridmodel.h	/^        inline MetaData* meta()$/;"	f	class:RSimpleGridModel::Item	access:private	signature:()
RSimpleGridModel::Item::metaC	/home/viper/projects/RBit/rsimplegridmodel.h	/^        inline const MetaData* metaC() const$/;"	f	class:RSimpleGridModel::Item	access:private	signature:() const
RSimpleGridModel::Item::model	/home/viper/projects/RBit/rsimplegridmodel.h	/^        RSimpleGridModel* model() const;$/;"	p	class:RSimpleGridModel::Item	access:public	signature:() const
RSimpleGridModel::Item::model	/home/viper/projects/RBit/rsimplegridmodel.h	/^inline RSimpleGridModel* RSimpleGridModel::Item::model() const$/;"	f	class:RSimpleGridModel::Item	signature:() const
RSimpleGridModel::Item::operator =	/home/viper/projects/RBit/rsimplegridmodel.h	/^        Item& operator=(const Item&);$/;"	p	class:RSimpleGridModel::Item	access:public	signature:(const Item&)
RSimpleGridModel::Item::operator =	/home/viper/projects/RBit/rsimplegridmodel.h	/^inline RSimpleGridModel::Item& RSimpleGridModel::Item::operator=(const RSimpleGridModel::Item& i)$/;"	f	class:RSimpleGridModel::Item	signature:(const RSimpleGridModel::Item& i)
RSimpleGridModel::Item::rtti	/home/viper/projects/RBit/rsimplegridmodel.h	/^        virtual int rtti() const;$/;"	p	class:RSimpleGridModel::Item	access:public	signature:() const
RSimpleGridModel::Item::rtti	/home/viper/projects/RBit/rsimplegridmodel.h	/^inline int RSimpleGridModel::Item::rtti() const$/;"	f	class:RSimpleGridModel::Item	signature:() const
RSimpleGridModel::Item::setBackgroundColor	/home/viper/projects/RBit/rsimplegridmodel.h	/^        void setBackgroundColor(const RColor&);$/;"	p	class:RSimpleGridModel::Item	access:public	signature:(const RColor&)
RSimpleGridModel::Item::setBackgroundColor	/home/viper/projects/RBit/rsimplegridmodel.h	/^inline void RSimpleGridModel::Item::setBackgroundColor(const RColor& bg)$/;"	f	class:RSimpleGridModel::Item	signature:(const RColor& bg)
RSimpleGridModel::Item::setFont	/home/viper/projects/RBit/rsimplegridmodel.h	/^        void setFont(const RFont&);$/;"	p	class:RSimpleGridModel::Item	access:public	signature:(const RFont&)
RSimpleGridModel::Item::setFont	/home/viper/projects/RBit/rsimplegridmodel.h	/^inline void RSimpleGridModel::Item::setFont(const RFont& font)$/;"	f	class:RSimpleGridModel::Item	signature:(const RFont& font)
RSimpleGridModel::Item::setForegroundColor	/home/viper/projects/RBit/rsimplegridmodel.h	/^        void setForegroundColor(const RColor&);$/;"	p	class:RSimpleGridModel::Item	access:public	signature:(const RColor&)
RSimpleGridModel::Item::setForegroundColor	/home/viper/projects/RBit/rsimplegridmodel.h	/^inline void RSimpleGridModel::Item::setForegroundColor(const RColor& fg)$/;"	f	class:RSimpleGridModel::Item	signature:(const RColor& fg)
RSimpleGridModel::Item::setText	/home/viper/projects/RBit/rsimplegridmodel.h	/^        void setText(const char*);$/;"	p	class:RSimpleGridModel::Item	access:public	signature:(const char*)
RSimpleGridModel::Item::setText	/home/viper/projects/RBit/rsimplegridmodel.h	/^inline void RSimpleGridModel::Item::setText(const char* text)$/;"	f	class:RSimpleGridModel::Item	signature:(const char* text)
RSimpleGridModel::Item::setTextAlignment	/home/viper/projects/RBit/rsimplegridmodel.h	/^        void setTextAlignment(int);$/;"	p	class:RSimpleGridModel::Item	access:public	signature:(int)
RSimpleGridModel::Item::setTextAlignment	/home/viper/projects/RBit/rsimplegridmodel.h	/^inline void RSimpleGridModel::Item::setTextAlignment(int alignment)$/;"	f	class:RSimpleGridModel::Item	signature:(int alignment)
RSimpleGridModel::Item::text	/home/viper/projects/RBit/rsimplegridmodel.h	/^        const char* text() const;$/;"	p	class:RSimpleGridModel::Item	access:public	signature:() const
RSimpleGridModel::Item::text	/home/viper/projects/RBit/rsimplegridmodel.h	/^inline const char* RSimpleGridModel::Item::text() const$/;"	f	class:RSimpleGridModel::Item	signature:() const
RSimpleGridModel::Item::textAlignment	/home/viper/projects/RBit/rsimplegridmodel.h	/^        int textAlignment() const;$/;"	p	class:RSimpleGridModel::Item	access:public	signature:() const
RSimpleGridModel::Item::textAlignment	/home/viper/projects/RBit/rsimplegridmodel.h	/^inline int RSimpleGridModel::Item::textAlignment() const$/;"	f	class:RSimpleGridModel::Item	signature:() const
RSimpleGridModel::Item::~Item	/home/viper/projects/RBit/rsimplegridmodel.h	/^        virtual ~Item();$/;"	p	class:RSimpleGridModel::Item	access:public	signature:()
RSimpleGridModel::Item::~Item	/home/viper/projects/RBit/rsimplegridmodel.h	/^inline RSimpleGridModel::Item::~Item()$/;"	f	class:RSimpleGridModel::Item	signature:()
RSimpleGridModel::ItemAutoPtr	/home/viper/projects/RBit/rsimplegridmodel.h	/^    struct ItemAutoPtr$/;"	s	class:RSimpleGridModel	access:private
RSimpleGridModel::ItemAutoPtr::ItemAutoPtr	/home/viper/projects/RBit/rsimplegridmodel.h	/^        inline ItemAutoPtr() $/;"	f	struct:RSimpleGridModel::ItemAutoPtr	access:public	signature:()
RSimpleGridModel::ItemAutoPtr::ItemAutoPtr	/home/viper/projects/RBit/rsimplegridmodel.h	/^        inline ItemAutoPtr(const ItemAutoPtr& i)$/;"	f	struct:RSimpleGridModel::ItemAutoPtr	access:public	signature:(const ItemAutoPtr& i)
RSimpleGridModel::ItemAutoPtr::ItemAutoPtr	/home/viper/projects/RBit/rsimplegridmodel.h	/^        inline explicit ItemAutoPtr(Item* i) $/;"	f	struct:RSimpleGridModel::ItemAutoPtr	access:public	signature:(Item* i)
RSimpleGridModel::ItemAutoPtr::item	/home/viper/projects/RBit/rsimplegridmodel.h	/^        mutable Item* item;$/;"	m	struct:RSimpleGridModel::ItemAutoPtr	access:public
RSimpleGridModel::ItemAutoPtr::operator =	/home/viper/projects/RBit/rsimplegridmodel.h	/^        inline ItemAutoPtr& operator=(const ItemAutoPtr& i)$/;"	f	struct:RSimpleGridModel::ItemAutoPtr	access:public	signature:(const ItemAutoPtr& i)
RSimpleGridModel::ItemAutoPtr::operator ==	/home/viper/projects/RBit/rsimplegridmodel.h	/^        inline bool operator==(const ItemAutoPtr& i) const $/;"	f	struct:RSimpleGridModel::ItemAutoPtr	access:public	signature:(const ItemAutoPtr& i) const
RSimpleGridModel::ItemAutoPtr::operator Item*	/home/viper/projects/RBit/rsimplegridmodel.h	/^        inline operator Item*() $/;"	f	struct:RSimpleGridModel::ItemAutoPtr	access:public	signature:()
RSimpleGridModel::ItemAutoPtr::operator bool	/home/viper/projects/RBit/rsimplegridmodel.h	/^        inline operator bool() const $/;"	f	struct:RSimpleGridModel::ItemAutoPtr	access:public	signature:() const
RSimpleGridModel::ItemAutoPtr::operator const Item*	/home/viper/projects/RBit/rsimplegridmodel.h	/^        inline operator const Item*() const $/;"	f	struct:RSimpleGridModel::ItemAutoPtr	access:public	signature:() const
RSimpleGridModel::ItemAutoPtr::~ItemAutoPtr	/home/viper/projects/RBit/rsimplegridmodel.h	/^        inline ~ItemAutoPtr() $/;"	f	struct:RSimpleGridModel::ItemAutoPtr	access:public	signature:()
RSimpleGridModel::RSimpleGridModel	/home/viper/projects/RBit/rsimplegridmodel.h	/^    RSimpleGridModel(Uint32 rows=0, Uint32 columns=0, Item* prototype=0);$/;"	p	class:RSimpleGridModel	access:public	signature:(Uint32 rows=0, Uint32 columns=0, Item* prototype=0)
RSimpleGridModel::RSimpleGridModel	/home/viper/projects/RBit/rsimplegridmodel.h	/^inline RSimpleGridModel::RSimpleGridModel(Uint32 rows, Uint32 columns, RSimpleGridModel::Item* prototype)$/;"	f	class:RSimpleGridModel	signature:(Uint32 rows, Uint32 columns, RSimpleGridModel::Item* prototype)
RSimpleGridModel::Table	/home/viper/projects/RBit/rsimplegridmodel.h	/^    typedef std::vector<ItemAutoPtr> Table;$/;"	t	class:RSimpleGridModel	access:private
RSimpleGridModel::Types	/home/viper/projects/RBit/rsimplegridmodel.h	/^    typedef std::vector<RModelDataTypeBase*> Types;$/;"	t	class:RSimpleGridModel	access:private
RSimpleGridModel::backgroundColor	/home/viper/projects/RBit/rsimplegridmodel.cpp	/^const RColor* RSimpleGridModel::backgroundColor(Sint32 row, Sint32 column) const$/;"	f	class:RSimpleGridModel	signature:(Sint32 row, Sint32 column) const
RSimpleGridModel::backgroundColor	/home/viper/projects/RBit/rsimplegridmodel.h	/^    virtual const RColor* backgroundColor(Sint32 row, Sint32 column) const;$/;"	p	class:RSimpleGridModel	access:public	signature:(Sint32 row, Sint32 column) const
RSimpleGridModel::columnCount	/home/viper/projects/RBit/rsimplegridmodel.h	/^    virtual Uint32 columnCount() const { return m_columns; }$/;"	f	class:RSimpleGridModel	access:public	signature:() const
RSimpleGridModel::createItem	/home/viper/projects/RBit/rsimplegridmodel.h	/^    Item* createItem() const;$/;"	p	class:RSimpleGridModel	access:public	signature:() const
RSimpleGridModel::createItem	/home/viper/projects/RBit/rsimplegridmodel.h	/^inline RSimpleGridModel::Item* RSimpleGridModel::createItem() const$/;"	f	class:RSimpleGridModel	signature:() const
RSimpleGridModel::dataType	/home/viper/projects/RBit/rsimplegridmodel.cpp	/^RModelDataTypeBase* RSimpleGridModel::dataType(Sint32 column)$/;"	f	class:RSimpleGridModel	signature:(Sint32 column)
RSimpleGridModel::dataType	/home/viper/projects/RBit/rsimplegridmodel.h	/^    virtual RModelDataTypeBase* dataType(Sint32 column);$/;"	p	class:RSimpleGridModel	access:public	signature:(Sint32 column)
RSimpleGridModel::font	/home/viper/projects/RBit/rsimplegridmodel.cpp	/^const RFont& RSimpleGridModel::font(Sint32 row, Sint32 column) const$/;"	f	class:RSimpleGridModel	signature:(Sint32 row, Sint32 column) const
RSimpleGridModel::font	/home/viper/projects/RBit/rsimplegridmodel.h	/^    virtual const RFont& font(Sint32 row, Sint32 column) const;$/;"	p	class:RSimpleGridModel	access:public	signature:(Sint32 row, Sint32 column) const
RSimpleGridModel::foregroundColor	/home/viper/projects/RBit/rsimplegridmodel.cpp	/^const RColor* RSimpleGridModel::foregroundColor(Sint32 row, Sint32 column) const$/;"	f	class:RSimpleGridModel	signature:(Sint32 row, Sint32 column) const
RSimpleGridModel::foregroundColor	/home/viper/projects/RBit/rsimplegridmodel.h	/^    virtual const RColor* foregroundColor(Sint32 row, Sint32 column) const;$/;"	p	class:RSimpleGridModel	access:public	signature:(Sint32 row, Sint32 column) const
RSimpleGridModel::insertColumns	/home/viper/projects/RBit/rsimplegridmodel.cpp	/^bool RSimpleGridModel::insertColumns(Sint32 column, Uint32 count)$/;"	f	class:RSimpleGridModel	signature:(Sint32 column, Uint32 count)
RSimpleGridModel::insertColumns	/home/viper/projects/RBit/rsimplegridmodel.h	/^    virtual bool insertColumns(Sint32 column, Uint32 count);$/;"	p	class:RSimpleGridModel	access:public	signature:(Sint32 column, Uint32 count)
RSimpleGridModel::insertRows	/home/viper/projects/RBit/rsimplegridmodel.cpp	/^bool RSimpleGridModel::insertRows(Sint32 row, Uint32 count)$/;"	f	class:RSimpleGridModel	signature:(Sint32 row, Uint32 count)
RSimpleGridModel::insertRows	/home/viper/projects/RBit/rsimplegridmodel.h	/^    virtual bool insertRows(Sint32 row, Uint32 count);$/;"	p	class:RSimpleGridModel	access:public	signature:(Sint32 row, Uint32 count)
RSimpleGridModel::isValidIndex	/home/viper/projects/RBit/rsimplegridmodel.h	/^    bool isValidIndex(Sint32 row, Sint32 column) const;$/;"	p	class:RSimpleGridModel	access:public	signature:(Sint32 row, Sint32 column) const
RSimpleGridModel::isValidIndex	/home/viper/projects/RBit/rsimplegridmodel.h	/^inline bool RSimpleGridModel::isValidIndex(Sint32 row, Sint32 column) const$/;"	f	class:RSimpleGridModel	signature:(Sint32 row, Sint32 column) const
RSimpleGridModel::item	/home/viper/projects/RBit/rsimplegridmodel.h	/^    Item* item(Sint32 row, Sint32 column);$/;"	p	class:RSimpleGridModel	access:public	signature:(Sint32 row, Sint32 column)
RSimpleGridModel::item	/home/viper/projects/RBit/rsimplegridmodel.h	/^    const Item* item(Sint32 row, Sint32 column) const;$/;"	p	class:RSimpleGridModel	access:public	signature:(Sint32 row, Sint32 column) const
RSimpleGridModel::item	/home/viper/projects/RBit/rsimplegridmodel.h	/^inline RSimpleGridModel::Item* RSimpleGridModel::item(Sint32 row, Sint32 column)$/;"	f	class:RSimpleGridModel	signature:(Sint32 row, Sint32 column)
RSimpleGridModel::item	/home/viper/projects/RBit/rsimplegridmodel.h	/^inline const RSimpleGridModel::Item* RSimpleGridModel::item(Sint32 row, Sint32 column) const$/;"	f	class:RSimpleGridModel	signature:(Sint32 row, Sint32 column) const
RSimpleGridModel::itemPrototype	/home/viper/projects/RBit/rsimplegridmodel.h	/^    const Item* itemPrototype() const;    $/;"	p	class:RSimpleGridModel	access:public	signature:() const
RSimpleGridModel::itemPrototype	/home/viper/projects/RBit/rsimplegridmodel.h	/^inline const RSimpleGridModel::Item* RSimpleGridModel::itemPrototype() const$/;"	f	class:RSimpleGridModel	signature:() const
RSimpleGridModel::m_columns	/home/viper/projects/RBit/rsimplegridmodel.h	/^    Uint32       m_columns;$/;"	m	class:RSimpleGridModel	access:private
RSimpleGridModel::m_prototype	/home/viper/projects/RBit/rsimplegridmodel.h	/^    Item*        m_prototype;$/;"	m	class:RSimpleGridModel	access:private
RSimpleGridModel::m_rows	/home/viper/projects/RBit/rsimplegridmodel.h	/^    Uint32       m_rows;     $/;"	m	class:RSimpleGridModel	access:private
RSimpleGridModel::m_table	/home/viper/projects/RBit/rsimplegridmodel.h	/^    Table        m_table;$/;"	m	class:RSimpleGridModel	access:private
RSimpleGridModel::m_types	/home/viper/projects/RBit/rsimplegridmodel.h	/^    Types        m_types;$/;"	m	class:RSimpleGridModel	access:private
RSimpleGridModel::removeColumns	/home/viper/projects/RBit/rsimplegridmodel.cpp	/^bool RSimpleGridModel::removeColumns(Sint32 column, Uint32 count) $/;"	f	class:RSimpleGridModel	signature:(Sint32 column, Uint32 count)
RSimpleGridModel::removeColumns	/home/viper/projects/RBit/rsimplegridmodel.h	/^    virtual bool removeColumns(Sint32 column, Uint32 count);$/;"	p	class:RSimpleGridModel	access:public	signature:(Sint32 column, Uint32 count)
RSimpleGridModel::removeRows	/home/viper/projects/RBit/rsimplegridmodel.cpp	/^bool RSimpleGridModel::removeRows(Sint32 row, Uint32 count) $/;"	f	class:RSimpleGridModel	signature:(Sint32 row, Uint32 count)
RSimpleGridModel::removeRows	/home/viper/projects/RBit/rsimplegridmodel.h	/^    virtual bool removeRows(Sint32 row, Uint32 count);$/;"	p	class:RSimpleGridModel	access:public	signature:(Sint32 row, Uint32 count)
RSimpleGridModel::rowCount	/home/viper/projects/RBit/rsimplegridmodel.h	/^    virtual Uint32 rowCount() const { return m_rows; }$/;"	f	class:RSimpleGridModel	access:public	signature:() const
RSimpleGridModel::setBackgroundColor	/home/viper/projects/RBit/rsimplegridmodel.cpp	/^bool RSimpleGridModel::setBackgroundColor(Sint32 row, Sint32 column, const RColor& color)$/;"	f	class:RSimpleGridModel	signature:(Sint32 row, Sint32 column, const RColor& color)
RSimpleGridModel::setBackgroundColor	/home/viper/projects/RBit/rsimplegridmodel.h	/^    virtual bool setBackgroundColor(Sint32 row, Sint32 column, const RColor& color);$/;"	p	class:RSimpleGridModel	access:public	signature:(Sint32 row, Sint32 column, const RColor& color)
RSimpleGridModel::setDataType	/home/viper/projects/RBit/rsimplegridmodel.cpp	/^bool RSimpleGridModel::setDataType(Sint32 column, RModelDataTypeBase* type)$/;"	f	class:RSimpleGridModel	signature:(Sint32 column, RModelDataTypeBase* type)
RSimpleGridModel::setDataType	/home/viper/projects/RBit/rsimplegridmodel.h	/^    virtual bool setDataType(Sint32 column, RModelDataTypeBase* type);$/;"	p	class:RSimpleGridModel	access:public	signature:(Sint32 column, RModelDataTypeBase* type)
RSimpleGridModel::setFont	/home/viper/projects/RBit/rsimplegridmodel.cpp	/^bool RSimpleGridModel::setFont(Sint32 row, Sint32 column, const RFont& font)$/;"	f	class:RSimpleGridModel	signature:(Sint32 row, Sint32 column, const RFont& font)
RSimpleGridModel::setFont	/home/viper/projects/RBit/rsimplegridmodel.h	/^    virtual bool setFont(Sint32 row, Sint32 column, const RFont& font);$/;"	p	class:RSimpleGridModel	access:public	signature:(Sint32 row, Sint32 column, const RFont& font)
RSimpleGridModel::setForegroundColor	/home/viper/projects/RBit/rsimplegridmodel.cpp	/^bool RSimpleGridModel::setForegroundColor(Sint32 row, Sint32 column, const RColor& color)$/;"	f	class:RSimpleGridModel	signature:(Sint32 row, Sint32 column, const RColor& color)
RSimpleGridModel::setForegroundColor	/home/viper/projects/RBit/rsimplegridmodel.h	/^    virtual bool setForegroundColor(Sint32 row, Sint32 column, const RColor& color);$/;"	p	class:RSimpleGridModel	access:public	signature:(Sint32 row, Sint32 column, const RColor& color)
RSimpleGridModel::setItem	/home/viper/projects/RBit/rsimplegridmodel.h	/^    bool setItem(Sint32 row, Sint32 column, Item* item);        $/;"	p	class:RSimpleGridModel	access:public	signature:(Sint32 row, Sint32 column, Item* item)
RSimpleGridModel::setItem	/home/viper/projects/RBit/rsimplegridmodel.h	/^inline bool RSimpleGridModel::setItem(Sint32 row, Sint32 column, RSimpleGridModel::Item* item)$/;"	f	class:RSimpleGridModel	signature:(Sint32 row, Sint32 column, RSimpleGridModel::Item* item)
RSimpleGridModel::setItemPrototype	/home/viper/projects/RBit/rsimplegridmodel.cpp	/^void RSimpleGridModel::setItemPrototype(RSimpleGridModel::Item* item)$/;"	f	class:RSimpleGridModel	signature:(RSimpleGridModel::Item* item)
RSimpleGridModel::setItemPrototype	/home/viper/projects/RBit/rsimplegridmodel.h	/^    void setItemPrototype(Item* item);$/;"	p	class:RSimpleGridModel	access:public	signature:(Item* item)
RSimpleGridModel::setModel	/home/viper/projects/RBit/rsimplegridmodel.h	/^    inline void static setModel(Item* item, RSimpleGridModel* m) { item->m_model = m; }$/;"	f	class:RSimpleGridModel	access:private	signature:(Item* item, RSimpleGridModel* m)
RSimpleGridModel::setText	/home/viper/projects/RBit/rsimplegridmodel.cpp	/^bool RSimpleGridModel::setText(Sint32 row, Sint32 column, const char* data)$/;"	f	class:RSimpleGridModel	signature:(Sint32 row, Sint32 column, const char* data)
RSimpleGridModel::setText	/home/viper/projects/RBit/rsimplegridmodel.h	/^    virtual bool setText(Sint32 row, Sint32 column, const char* data);$/;"	p	class:RSimpleGridModel	access:public	signature:(Sint32 row, Sint32 column, const char* data)
RSimpleGridModel::setTextAlignment	/home/viper/projects/RBit/rsimplegridmodel.cpp	/^bool RSimpleGridModel::setTextAlignment(Sint32 row, Sint32 column, int alignment)$/;"	f	class:RSimpleGridModel	signature:(Sint32 row, Sint32 column, int alignment)
RSimpleGridModel::setTextAlignment	/home/viper/projects/RBit/rsimplegridmodel.h	/^    virtual bool setTextAlignment(Sint32 row, Sint32 column, int alignment);$/;"	p	class:RSimpleGridModel	access:public	signature:(Sint32 row, Sint32 column, int alignment)
RSimpleGridModel::sort	/home/viper/projects/RBit/rsimplegridmodel.cpp	/^void RSimpleGridModel::sort(Sint32 column, RBit::SortOrder order)$/;"	f	class:RSimpleGridModel	signature:(Sint32 column, RBit::SortOrder order)
RSimpleGridModel::sort	/home/viper/projects/RBit/rsimplegridmodel.cpp	/^void RSimpleGridModel::sort(Sint32 column, Sint32 first, Sint32 last, RBit::SortOrder order, RModelDataTypeBase* type)$/;"	f	class:RSimpleGridModel	signature:(Sint32 column, Sint32 first, Sint32 last, RBit::SortOrder order, RModelDataTypeBase* type)
RSimpleGridModel::sort	/home/viper/projects/RBit/rsimplegridmodel.h	/^    virtual void sort(Sint32 column, RBit::SortOrder = RBit::AscendingOrder);$/;"	p	class:RSimpleGridModel	access:public	signature:(Sint32 column, RBit::SortOrder = RBit::AscendingOrder)
RSimpleGridModel::sort	/home/viper/projects/RBit/rsimplegridmodel.h	/^    void sort(Sint32 column, Sint32 first, Sint32 last, RBit::SortOrder, RModelDataTypeBase* type);$/;"	p	class:RSimpleGridModel	access:private	signature:(Sint32 column, Sint32 first, Sint32 last, RBit::SortOrder, RModelDataTypeBase* type)
RSimpleGridModel::swapRows	/home/viper/projects/RBit/rsimplegridmodel.cpp	/^void RSimpleGridModel::swapRows(Sint32 lh, Sint32 rh)$/;"	f	class:RSimpleGridModel	signature:(Sint32 lh, Sint32 rh)
RSimpleGridModel::swapRows	/home/viper/projects/RBit/rsimplegridmodel.h	/^    void swapRows(Sint32 lh, Sint32 rh);$/;"	p	class:RSimpleGridModel	access:private	signature:(Sint32 lh, Sint32 rh)
RSimpleGridModel::tableIndex	/home/viper/projects/RBit/rsimplegridmodel.h	/^    Sint32 tableIndex(Sint32 row, Sint32 column) const;$/;"	p	class:RSimpleGridModel	access:protected	signature:(Sint32 row, Sint32 column) const
RSimpleGridModel::tableIndex	/home/viper/projects/RBit/rsimplegridmodel.h	/^    Sint32 tableIndex(const Item* item) const;$/;"	p	class:RSimpleGridModel	access:protected	signature:(const Item* item) const
RSimpleGridModel::tableIndex	/home/viper/projects/RBit/rsimplegridmodel.h	/^inline Sint32 RSimpleGridModel::tableIndex(Sint32 row, Sint32 column) const$/;"	f	class:RSimpleGridModel	signature:(Sint32 row, Sint32 column) const
RSimpleGridModel::tableIndex	/home/viper/projects/RBit/rsimplegridmodel.h	/^inline Sint32 RSimpleGridModel::tableIndex(const Item* item) const$/;"	f	class:RSimpleGridModel	signature:(const Item* item) const
RSimpleGridModel::takeItem	/home/viper/projects/RBit/rsimplegridmodel.cpp	/^RSimpleGridModel::Item* RSimpleGridModel::takeItem(RSimpleGridModel::Item* item)$/;"	f	class:RSimpleGridModel	signature:(RSimpleGridModel::Item* item)
RSimpleGridModel::takeItem	/home/viper/projects/RBit/rsimplegridmodel.cpp	/^RSimpleGridModel::Item* RSimpleGridModel::takeItem(Sint32 row, Sint32 column)$/;"	f	class:RSimpleGridModel	signature:(Sint32 row, Sint32 column)
RSimpleGridModel::takeItem	/home/viper/projects/RBit/rsimplegridmodel.h	/^    Item* takeItem(Item* item);$/;"	p	class:RSimpleGridModel	access:public	signature:(Item* item)
RSimpleGridModel::takeItem	/home/viper/projects/RBit/rsimplegridmodel.h	/^    Item* takeItem(Sint32 row, Sint32 col);$/;"	p	class:RSimpleGridModel	access:public	signature:(Sint32 row, Sint32 col)
RSimpleGridModel::text	/home/viper/projects/RBit/rsimplegridmodel.cpp	/^const char* RSimpleGridModel::text(Sint32 row, Sint32 column) const$/;"	f	class:RSimpleGridModel	signature:(Sint32 row, Sint32 column) const
RSimpleGridModel::text	/home/viper/projects/RBit/rsimplegridmodel.h	/^    virtual const char* text(Sint32 row, Sint32 column) const;$/;"	p	class:RSimpleGridModel	access:public	signature:(Sint32 row, Sint32 column) const
RSimpleGridModel::textAlignment	/home/viper/projects/RBit/rsimplegridmodel.cpp	/^int RSimpleGridModel::textAlignment(Sint32 row, Sint32 column) const$/;"	f	class:RSimpleGridModel	signature:(Sint32 row, Sint32 column) const
RSimpleGridModel::textAlignment	/home/viper/projects/RBit/rsimplegridmodel.h	/^    virtual int textAlignment(Sint32 row, Sint32 column) const;$/;"	p	class:RSimpleGridModel	access:public	signature:(Sint32 row, Sint32 column) const
RSimpleGridModel::~RSimpleGridModel	/home/viper/projects/RBit/rsimplegridmodel.h	/^    ~RSimpleGridModel();$/;"	p	class:RSimpleGridModel	access:public	signature:()
RSimpleGridModel::~RSimpleGridModel	/home/viper/projects/RBit/rsimplegridmodel.h	/^inline RSimpleGridModel::~RSimpleGridModel()$/;"	f	class:RSimpleGridModel	signature:()
RSimpleHeaderModel	/home/viper/projects/RBit/rsimpleheadermodel.h	/^    RSimpleHeaderModel(Uint32 sections=0, Item* prototype=0);$/;"	p	class:RSimpleHeaderModel	access:public	signature:(Uint32 sections=0, Item* prototype=0)
RSimpleHeaderModel	/home/viper/projects/RBit/rsimpleheadermodel.h	/^class RBIT_CORE_EXPORT RSimpleHeaderModel : public RHeaderModel$/;"	c	inherits:RHeaderModel
RSimpleHeaderModel	/home/viper/projects/RBit/rsimpleheadermodel.h	/^inline RSimpleHeaderModel::RSimpleHeaderModel(Uint32 sections, RSimpleHeaderModel::Item* prototype)$/;"	f	class:RSimpleHeaderModel	signature:(Uint32 sections, RSimpleHeaderModel::Item* prototype)
RSimpleHeaderModel::Item	/home/viper/projects/RBit/rsimpleheadermodel.h	/^    class RBIT_CORE_EXPORT Item$/;"	c	class:RSimpleHeaderModel	access:public
RSimpleHeaderModel::Item::Item	/home/viper/projects/RBit/rsimpleheadermodel.h	/^        Item(const char* text, const RFont&, RAlignmentFlags, const RColor& bg, $/;"	p	class:RSimpleHeaderModel::Item	access:public	signature:(const char* text, const RFont&, RAlignmentFlags, const RColor& bg, const RColor& fg, const RColor& dark, const RColor& light, int type = Type)
RSimpleHeaderModel::Item::Item	/home/viper/projects/RBit/rsimpleheadermodel.h	/^        explicit Item(const char* text, int type = Type);$/;"	p	class:RSimpleHeaderModel::Item	access:public	signature:(const char* text, int type = Type)
RSimpleHeaderModel::Item::Item	/home/viper/projects/RBit/rsimpleheadermodel.h	/^        explicit Item(int type = Type);$/;"	p	class:RSimpleHeaderModel::Item	access:public	signature:(int type = Type)
RSimpleHeaderModel::Item::Item	/home/viper/projects/RBit/rsimpleheadermodel.h	/^inline RSimpleHeaderModel::Item::Item(const char* text, const RFont& f, $/;"	f	class:RSimpleHeaderModel::Item	signature:(const char* text, const RFont& f, RAlignmentFlags a, const RColor& bg, const RColor& fg, const RColor& dark, const RColor& light, int type)
RSimpleHeaderModel::Item::Item	/home/viper/projects/RBit/rsimpleheadermodel.h	/^inline RSimpleHeaderModel::Item::Item(const char* text, int type)$/;"	f	class:RSimpleHeaderModel::Item	signature:(const char* text, int type)
RSimpleHeaderModel::Item::Item	/home/viper/projects/RBit/rsimpleheadermodel.h	/^inline RSimpleHeaderModel::Item::Item(int type)$/;"	f	class:RSimpleHeaderModel::Item	signature:(int type)
RSimpleHeaderModel::Item::MetaData	/home/viper/projects/RBit/rsimpleheadermodel.h	/^        struct MetaData$/;"	s	class:RSimpleHeaderModel::Item	access:private
RSimpleHeaderModel::Item::MetaData::MetaData	/home/viper/projects/RBit/rsimpleheadermodel.cpp	/^RSimpleHeaderModel::Item::MetaData::MetaData()$/;"	f	class:RSimpleHeaderModel::Item::MetaData	signature:()
RSimpleHeaderModel::Item::MetaData::MetaData	/home/viper/projects/RBit/rsimpleheadermodel.cpp	/^RSimpleHeaderModel::Item::MetaData::MetaData(const RFont& f, const RColor& bg, const RColor& fg, RAlignmentFlags a)$/;"	f	class:RSimpleHeaderModel::Item::MetaData	signature:(const RFont& f, const RColor& bg, const RColor& fg, RAlignmentFlags a)
RSimpleHeaderModel::Item::MetaData::MetaData	/home/viper/projects/RBit/rsimpleheadermodel.h	/^            MetaData();$/;"	p	struct:RSimpleHeaderModel::Item::MetaData	access:public	signature:()
RSimpleHeaderModel::Item::MetaData::MetaData	/home/viper/projects/RBit/rsimpleheadermodel.h	/^            MetaData(const RFont&, const RColor& bg, const RColor& fg, RAlignmentFlags);$/;"	p	struct:RSimpleHeaderModel::Item::MetaData	access:public	signature:(const RFont&, const RColor& bg, const RColor& fg, RAlignmentFlags)
RSimpleHeaderModel::Item::MetaData::alignment	/home/viper/projects/RBit/rsimpleheadermodel.h	/^            int alignment;$/;"	m	struct:RSimpleHeaderModel::Item::MetaData	access:public
RSimpleHeaderModel::Item::MetaData::backgroundColor	/home/viper/projects/RBit/rsimpleheadermodel.h	/^            RColor backgroundColor;$/;"	m	struct:RSimpleHeaderModel::Item::MetaData	access:public
RSimpleHeaderModel::Item::MetaData::darkColor	/home/viper/projects/RBit/rsimpleheadermodel.h	/^            RColor darkColor;$/;"	m	struct:RSimpleHeaderModel::Item::MetaData	access:public
RSimpleHeaderModel::Item::MetaData::font	/home/viper/projects/RBit/rsimpleheadermodel.h	/^            RFont font;$/;"	m	struct:RSimpleHeaderModel::Item::MetaData	access:public
RSimpleHeaderModel::Item::MetaData::foregroundColor	/home/viper/projects/RBit/rsimpleheadermodel.h	/^            RColor foregroundColor;$/;"	m	struct:RSimpleHeaderModel::Item::MetaData	access:public
RSimpleHeaderModel::Item::MetaData::lightColor	/home/viper/projects/RBit/rsimpleheadermodel.h	/^            RColor lightColor;$/;"	m	struct:RSimpleHeaderModel::Item::MetaData	access:public
RSimpleHeaderModel::Item::Type	/home/viper/projects/RBit/rsimpleheadermodel.h	/^        enum { Type = 0, UserType = 1000 };$/;"	e	enum:RSimpleHeaderModel::Item::__anon19
RSimpleHeaderModel::Item::UserType	/home/viper/projects/RBit/rsimpleheadermodel.h	/^        enum { Type = 0, UserType = 1000 };$/;"	e	enum:RSimpleHeaderModel::Item::__anon19
RSimpleHeaderModel::Item::backgroundColor	/home/viper/projects/RBit/rsimpleheadermodel.h	/^        const RColor& backgroundColor() const;$/;"	p	class:RSimpleHeaderModel::Item	access:public	signature:() const
RSimpleHeaderModel::Item::backgroundColor	/home/viper/projects/RBit/rsimpleheadermodel.h	/^inline const RColor& RSimpleHeaderModel::Item::backgroundColor() const$/;"	f	class:RSimpleHeaderModel::Item	signature:() const
RSimpleHeaderModel::Item::clone	/home/viper/projects/RBit/rsimpleheadermodel.h	/^        virtual Item* clone() const;$/;"	p	class:RSimpleHeaderModel::Item	access:public	signature:() const
RSimpleHeaderModel::Item::clone	/home/viper/projects/RBit/rsimpleheadermodel.h	/^inline RSimpleHeaderModel::Item* RSimpleHeaderModel::Item::clone() const$/;"	f	class:RSimpleHeaderModel::Item	signature:() const
RSimpleHeaderModel::Item::darkColor	/home/viper/projects/RBit/rsimpleheadermodel.h	/^        const RColor& darkColor() const;$/;"	p	class:RSimpleHeaderModel::Item	access:public	signature:() const
RSimpleHeaderModel::Item::darkColor	/home/viper/projects/RBit/rsimpleheadermodel.h	/^inline const RColor& RSimpleHeaderModel::Item::darkColor() const$/;"	f	class:RSimpleHeaderModel::Item	signature:() const
RSimpleHeaderModel::Item::font	/home/viper/projects/RBit/rsimpleheadermodel.h	/^        const RFont& font() const;$/;"	p	class:RSimpleHeaderModel::Item	access:public	signature:() const
RSimpleHeaderModel::Item::font	/home/viper/projects/RBit/rsimpleheadermodel.h	/^inline const RFont& RSimpleHeaderModel::Item::font() const$/;"	f	class:RSimpleHeaderModel::Item	signature:() const
RSimpleHeaderModel::Item::foregroundColor	/home/viper/projects/RBit/rsimpleheadermodel.h	/^        const RColor& foregroundColor() const;$/;"	p	class:RSimpleHeaderModel::Item	access:public	signature:() const
RSimpleHeaderModel::Item::foregroundColor	/home/viper/projects/RBit/rsimpleheadermodel.h	/^inline const RColor& RSimpleHeaderModel::Item::foregroundColor() const$/;"	f	class:RSimpleHeaderModel::Item	signature:() const
RSimpleHeaderModel::Item::lightColor	/home/viper/projects/RBit/rsimpleheadermodel.h	/^        const RColor& lightColor() const;$/;"	p	class:RSimpleHeaderModel::Item	access:public	signature:() const
RSimpleHeaderModel::Item::lightColor	/home/viper/projects/RBit/rsimpleheadermodel.h	/^inline const RColor& RSimpleHeaderModel::Item::lightColor() const$/;"	f	class:RSimpleHeaderModel::Item	signature:() const
RSimpleHeaderModel::Item::m_meta	/home/viper/projects/RBit/rsimpleheadermodel.h	/^        MetaData* m_meta;$/;"	m	class:RSimpleHeaderModel::Item	access:private
RSimpleHeaderModel::Item::m_model	/home/viper/projects/RBit/rsimpleheadermodel.h	/^        RSimpleHeaderModel* m_model;$/;"	m	class:RSimpleHeaderModel::Item	access:private
RSimpleHeaderModel::Item::m_rtti	/home/viper/projects/RBit/rsimpleheadermodel.h	/^        int m_rtti;$/;"	m	class:RSimpleHeaderModel::Item	access:private
RSimpleHeaderModel::Item::m_text	/home/viper/projects/RBit/rsimpleheadermodel.h	/^        RString m_text;$/;"	m	class:RSimpleHeaderModel::Item	access:private
RSimpleHeaderModel::Item::meta	/home/viper/projects/RBit/rsimpleheadermodel.h	/^        inline MetaData* meta()$/;"	f	class:RSimpleHeaderModel::Item	access:private	signature:()
RSimpleHeaderModel::Item::metaC	/home/viper/projects/RBit/rsimpleheadermodel.h	/^        inline const MetaData* metaC() const$/;"	f	class:RSimpleHeaderModel::Item	access:private	signature:() const
RSimpleHeaderModel::Item::model	/home/viper/projects/RBit/rsimpleheadermodel.h	/^        RSimpleHeaderModel* model() const;$/;"	p	class:RSimpleHeaderModel::Item	access:public	signature:() const
RSimpleHeaderModel::Item::model	/home/viper/projects/RBit/rsimpleheadermodel.h	/^inline RSimpleHeaderModel* RSimpleHeaderModel::Item::model() const$/;"	f	class:RSimpleHeaderModel::Item	signature:() const
RSimpleHeaderModel::Item::operator =	/home/viper/projects/RBit/rsimpleheadermodel.h	/^        Item& operator=(const Item&);        $/;"	p	class:RSimpleHeaderModel::Item	access:public	signature:(const Item&)
RSimpleHeaderModel::Item::operator =	/home/viper/projects/RBit/rsimpleheadermodel.h	/^inline RSimpleHeaderModel::Item& RSimpleHeaderModel::Item::operator=(const RSimpleHeaderModel::Item& i)$/;"	f	class:RSimpleHeaderModel::Item	signature:(const RSimpleHeaderModel::Item& i)
RSimpleHeaderModel::Item::rtti	/home/viper/projects/RBit/rsimpleheadermodel.h	/^        virtual int rtti() const;$/;"	p	class:RSimpleHeaderModel::Item	access:public	signature:() const
RSimpleHeaderModel::Item::rtti	/home/viper/projects/RBit/rsimpleheadermodel.h	/^inline int RSimpleHeaderModel::Item::rtti() const$/;"	f	class:RSimpleHeaderModel::Item	signature:() const
RSimpleHeaderModel::Item::setBackgroundColor	/home/viper/projects/RBit/rsimpleheadermodel.h	/^        void setBackgroundColor(const RColor&);$/;"	p	class:RSimpleHeaderModel::Item	access:public	signature:(const RColor&)
RSimpleHeaderModel::Item::setBackgroundColor	/home/viper/projects/RBit/rsimpleheadermodel.h	/^inline void RSimpleHeaderModel::Item::setBackgroundColor(const RColor& bg)$/;"	f	class:RSimpleHeaderModel::Item	signature:(const RColor& bg)
RSimpleHeaderModel::Item::setDarkColor	/home/viper/projects/RBit/rsimpleheadermodel.h	/^        void setDarkColor(const RColor&);$/;"	p	class:RSimpleHeaderModel::Item	access:public	signature:(const RColor&)
RSimpleHeaderModel::Item::setDarkColor	/home/viper/projects/RBit/rsimpleheadermodel.h	/^inline void RSimpleHeaderModel::Item::setDarkColor(const RColor& darkColor)$/;"	f	class:RSimpleHeaderModel::Item	signature:(const RColor& darkColor)
RSimpleHeaderModel::Item::setFont	/home/viper/projects/RBit/rsimpleheadermodel.h	/^        void setFont(const RFont&);$/;"	p	class:RSimpleHeaderModel::Item	access:public	signature:(const RFont&)
RSimpleHeaderModel::Item::setFont	/home/viper/projects/RBit/rsimpleheadermodel.h	/^inline void RSimpleHeaderModel::Item::setFont(const RFont& font)$/;"	f	class:RSimpleHeaderModel::Item	signature:(const RFont& font)
RSimpleHeaderModel::Item::setForegroundColor	/home/viper/projects/RBit/rsimpleheadermodel.h	/^        void setForegroundColor(const RColor&);$/;"	p	class:RSimpleHeaderModel::Item	access:public	signature:(const RColor&)
RSimpleHeaderModel::Item::setForegroundColor	/home/viper/projects/RBit/rsimpleheadermodel.h	/^inline void RSimpleHeaderModel::Item::setForegroundColor(const RColor& fg)$/;"	f	class:RSimpleHeaderModel::Item	signature:(const RColor& fg)
RSimpleHeaderModel::Item::setLightColor	/home/viper/projects/RBit/rsimpleheadermodel.h	/^        void setLightColor(const RColor&);$/;"	p	class:RSimpleHeaderModel::Item	access:public	signature:(const RColor&)
RSimpleHeaderModel::Item::setLightColor	/home/viper/projects/RBit/rsimpleheadermodel.h	/^inline void RSimpleHeaderModel::Item::setLightColor(const RColor& lightColor)$/;"	f	class:RSimpleHeaderModel::Item	signature:(const RColor& lightColor)
RSimpleHeaderModel::Item::setText	/home/viper/projects/RBit/rsimpleheadermodel.h	/^        void setText(const char*);$/;"	p	class:RSimpleHeaderModel::Item	access:public	signature:(const char*)
RSimpleHeaderModel::Item::setText	/home/viper/projects/RBit/rsimpleheadermodel.h	/^inline void RSimpleHeaderModel::Item::setText(const char* text)$/;"	f	class:RSimpleHeaderModel::Item	signature:(const char* text)
RSimpleHeaderModel::Item::setTextAlignment	/home/viper/projects/RBit/rsimpleheadermodel.h	/^        void setTextAlignment(int);$/;"	p	class:RSimpleHeaderModel::Item	access:public	signature:(int)
RSimpleHeaderModel::Item::setTextAlignment	/home/viper/projects/RBit/rsimpleheadermodel.h	/^inline void RSimpleHeaderModel::Item::setTextAlignment(int alignment)$/;"	f	class:RSimpleHeaderModel::Item	signature:(int alignment)
RSimpleHeaderModel::Item::text	/home/viper/projects/RBit/rsimpleheadermodel.h	/^        const char* text() const;$/;"	p	class:RSimpleHeaderModel::Item	access:public	signature:() const
RSimpleHeaderModel::Item::text	/home/viper/projects/RBit/rsimpleheadermodel.h	/^inline const char* RSimpleHeaderModel::Item::text() const$/;"	f	class:RSimpleHeaderModel::Item	signature:() const
RSimpleHeaderModel::Item::textAlignment	/home/viper/projects/RBit/rsimpleheadermodel.h	/^        int textAlignment() const;$/;"	p	class:RSimpleHeaderModel::Item	access:public	signature:() const
RSimpleHeaderModel::Item::textAlignment	/home/viper/projects/RBit/rsimpleheadermodel.h	/^inline int RSimpleHeaderModel::Item::textAlignment() const$/;"	f	class:RSimpleHeaderModel::Item	signature:() const
RSimpleHeaderModel::Item::~Item	/home/viper/projects/RBit/rsimpleheadermodel.h	/^        virtual ~Item();$/;"	p	class:RSimpleHeaderModel::Item	access:public	signature:()
RSimpleHeaderModel::Item::~Item	/home/viper/projects/RBit/rsimpleheadermodel.h	/^inline RSimpleHeaderModel::Item::~Item()$/;"	f	class:RSimpleHeaderModel::Item	signature:()
RSimpleHeaderModel::ItemAutoPtr	/home/viper/projects/RBit/rsimpleheadermodel.h	/^    struct ItemAutoPtr$/;"	s	class:RSimpleHeaderModel	access:private
RSimpleHeaderModel::ItemAutoPtr::ItemAutoPtr	/home/viper/projects/RBit/rsimpleheadermodel.h	/^        inline ItemAutoPtr() $/;"	f	struct:RSimpleHeaderModel::ItemAutoPtr	access:public	signature:()
RSimpleHeaderModel::ItemAutoPtr::ItemAutoPtr	/home/viper/projects/RBit/rsimpleheadermodel.h	/^        inline ItemAutoPtr(const ItemAutoPtr& i)$/;"	f	struct:RSimpleHeaderModel::ItemAutoPtr	access:public	signature:(const ItemAutoPtr& i)
RSimpleHeaderModel::ItemAutoPtr::ItemAutoPtr	/home/viper/projects/RBit/rsimpleheadermodel.h	/^        inline explicit ItemAutoPtr(Item* i) $/;"	f	struct:RSimpleHeaderModel::ItemAutoPtr	access:public	signature:(Item* i)
RSimpleHeaderModel::ItemAutoPtr::item	/home/viper/projects/RBit/rsimpleheadermodel.h	/^        mutable Item* item;$/;"	m	struct:RSimpleHeaderModel::ItemAutoPtr	access:public
RSimpleHeaderModel::ItemAutoPtr::operator =	/home/viper/projects/RBit/rsimpleheadermodel.h	/^        inline ItemAutoPtr& operator=(const ItemAutoPtr& i)$/;"	f	struct:RSimpleHeaderModel::ItemAutoPtr	access:public	signature:(const ItemAutoPtr& i)
RSimpleHeaderModel::ItemAutoPtr::operator ==	/home/viper/projects/RBit/rsimpleheadermodel.h	/^        inline bool operator==(const ItemAutoPtr& i) const $/;"	f	struct:RSimpleHeaderModel::ItemAutoPtr	access:public	signature:(const ItemAutoPtr& i) const
RSimpleHeaderModel::ItemAutoPtr::operator Item*	/home/viper/projects/RBit/rsimpleheadermodel.h	/^        inline operator Item*() $/;"	f	struct:RSimpleHeaderModel::ItemAutoPtr	access:public	signature:()
RSimpleHeaderModel::ItemAutoPtr::operator bool	/home/viper/projects/RBit/rsimpleheadermodel.h	/^        inline operator bool() const $/;"	f	struct:RSimpleHeaderModel::ItemAutoPtr	access:public	signature:() const
RSimpleHeaderModel::ItemAutoPtr::operator const Item*	/home/viper/projects/RBit/rsimpleheadermodel.h	/^        inline operator const Item*() const $/;"	f	struct:RSimpleHeaderModel::ItemAutoPtr	access:public	signature:() const
RSimpleHeaderModel::ItemAutoPtr::~ItemAutoPtr	/home/viper/projects/RBit/rsimpleheadermodel.h	/^        inline ~ItemAutoPtr() $/;"	f	struct:RSimpleHeaderModel::ItemAutoPtr	access:public	signature:()
RSimpleHeaderModel::RSimpleHeaderModel	/home/viper/projects/RBit/rsimpleheadermodel.h	/^    RSimpleHeaderModel(Uint32 sections=0, Item* prototype=0);$/;"	p	class:RSimpleHeaderModel	access:public	signature:(Uint32 sections=0, Item* prototype=0)
RSimpleHeaderModel::RSimpleHeaderModel	/home/viper/projects/RBit/rsimpleheadermodel.h	/^inline RSimpleHeaderModel::RSimpleHeaderModel(Uint32 sections, RSimpleHeaderModel::Item* prototype)$/;"	f	class:RSimpleHeaderModel	signature:(Uint32 sections, RSimpleHeaderModel::Item* prototype)
RSimpleHeaderModel::Sections	/home/viper/projects/RBit/rsimpleheadermodel.h	/^    typedef std::vector<ItemAutoPtr> Sections;    $/;"	t	class:RSimpleHeaderModel	access:private
RSimpleHeaderModel::backgroundColor	/home/viper/projects/RBit/rsimpleheadermodel.cpp	/^const RColor* RSimpleHeaderModel::backgroundColor(Sint32 section) const$/;"	f	class:RSimpleHeaderModel	signature:(Sint32 section) const
RSimpleHeaderModel::backgroundColor	/home/viper/projects/RBit/rsimpleheadermodel.h	/^    virtual const RColor* backgroundColor(Sint32 section) const;$/;"	p	class:RSimpleHeaderModel	access:public	signature:(Sint32 section) const
RSimpleHeaderModel::createItem	/home/viper/projects/RBit/rsimpleheadermodel.h	/^    Item* createItem() const;$/;"	p	class:RSimpleHeaderModel	access:public	signature:() const
RSimpleHeaderModel::createItem	/home/viper/projects/RBit/rsimpleheadermodel.h	/^inline RSimpleHeaderModel::Item* RSimpleHeaderModel::createItem() const$/;"	f	class:RSimpleHeaderModel	signature:() const
RSimpleHeaderModel::darkColor	/home/viper/projects/RBit/rsimpleheadermodel.cpp	/^const RColor* RSimpleHeaderModel::darkColor(Sint32 section) const$/;"	f	class:RSimpleHeaderModel	signature:(Sint32 section) const
RSimpleHeaderModel::darkColor	/home/viper/projects/RBit/rsimpleheadermodel.h	/^    virtual const RColor* darkColor(Sint32 section) const;$/;"	p	class:RSimpleHeaderModel	access:public	signature:(Sint32 section) const
RSimpleHeaderModel::foregroundColor	/home/viper/projects/RBit/rsimpleheadermodel.cpp	/^const RColor* RSimpleHeaderModel::foregroundColor(Sint32 section) const$/;"	f	class:RSimpleHeaderModel	signature:(Sint32 section) const
RSimpleHeaderModel::foregroundColor	/home/viper/projects/RBit/rsimpleheadermodel.h	/^    virtual const RColor* foregroundColor(Sint32 section) const;$/;"	p	class:RSimpleHeaderModel	access:public	signature:(Sint32 section) const
RSimpleHeaderModel::insertSections	/home/viper/projects/RBit/rsimpleheadermodel.cpp	/^bool RSimpleHeaderModel::insertSections(Sint32 section, Uint32 count)$/;"	f	class:RSimpleHeaderModel	signature:(Sint32 section, Uint32 count)
RSimpleHeaderModel::insertSections	/home/viper/projects/RBit/rsimpleheadermodel.h	/^    virtual bool insertSections(Sint32 section, Uint32 count);    $/;"	p	class:RSimpleHeaderModel	access:public	signature:(Sint32 section, Uint32 count)
RSimpleHeaderModel::isValidIndex	/home/viper/projects/RBit/rsimpleheadermodel.h	/^    bool isValidIndex(Sint32 section) const;$/;"	p	class:RSimpleHeaderModel	access:public	signature:(Sint32 section) const
RSimpleHeaderModel::isValidIndex	/home/viper/projects/RBit/rsimpleheadermodel.h	/^inline bool RSimpleHeaderModel::isValidIndex(Sint32 section) const$/;"	f	class:RSimpleHeaderModel	signature:(Sint32 section) const
RSimpleHeaderModel::item	/home/viper/projects/RBit/rsimpleheadermodel.h	/^    Item* item(Sint32 section);$/;"	p	class:RSimpleHeaderModel	access:public	signature:(Sint32 section)
RSimpleHeaderModel::item	/home/viper/projects/RBit/rsimpleheadermodel.h	/^    const Item* item(Sint32 section) const;$/;"	p	class:RSimpleHeaderModel	access:public	signature:(Sint32 section) const
RSimpleHeaderModel::item	/home/viper/projects/RBit/rsimpleheadermodel.h	/^inline RSimpleHeaderModel::Item* RSimpleHeaderModel::item(Sint32 section)$/;"	f	class:RSimpleHeaderModel	signature:(Sint32 section)
RSimpleHeaderModel::item	/home/viper/projects/RBit/rsimpleheadermodel.h	/^inline const RSimpleHeaderModel::Item* RSimpleHeaderModel::item(Sint32 section) const$/;"	f	class:RSimpleHeaderModel	signature:(Sint32 section) const
RSimpleHeaderModel::itemPrototype	/home/viper/projects/RBit/rsimpleheadermodel.h	/^    const Item* itemPrototype() const;$/;"	p	class:RSimpleHeaderModel	access:public	signature:() const
RSimpleHeaderModel::itemPrototype	/home/viper/projects/RBit/rsimpleheadermodel.h	/^inline const RSimpleHeaderModel::Item* RSimpleHeaderModel::itemPrototype() const$/;"	f	class:RSimpleHeaderModel	signature:() const
RSimpleHeaderModel::lightColor	/home/viper/projects/RBit/rsimpleheadermodel.cpp	/^const RColor* RSimpleHeaderModel::lightColor(Sint32 section) const$/;"	f	class:RSimpleHeaderModel	signature:(Sint32 section) const
RSimpleHeaderModel::lightColor	/home/viper/projects/RBit/rsimpleheadermodel.h	/^    virtual const RColor* lightColor(Sint32 section) const;$/;"	p	class:RSimpleHeaderModel	access:public	signature:(Sint32 section) const
RSimpleHeaderModel::m_prototype	/home/viper/projects/RBit/rsimpleheadermodel.h	/^    Item*    m_prototype;$/;"	m	class:RSimpleHeaderModel	access:private
RSimpleHeaderModel::m_sections	/home/viper/projects/RBit/rsimpleheadermodel.h	/^    Sections m_sections;$/;"	m	class:RSimpleHeaderModel	access:private
RSimpleHeaderModel::removeSections	/home/viper/projects/RBit/rsimpleheadermodel.cpp	/^bool RSimpleHeaderModel::removeSections(Sint32 section, Uint32 count)$/;"	f	class:RSimpleHeaderModel	signature:(Sint32 section, Uint32 count)
RSimpleHeaderModel::removeSections	/home/viper/projects/RBit/rsimpleheadermodel.h	/^    virtual bool removeSections(Sint32 section, Uint32 count);$/;"	p	class:RSimpleHeaderModel	access:public	signature:(Sint32 section, Uint32 count)
RSimpleHeaderModel::sectionCount	/home/viper/projects/RBit/rsimpleheadermodel.cpp	/^Uint32 RSimpleHeaderModel::sectionCount() const$/;"	f	class:RSimpleHeaderModel	signature:() const
RSimpleHeaderModel::sectionCount	/home/viper/projects/RBit/rsimpleheadermodel.h	/^    virtual Uint32 sectionCount() const;$/;"	p	class:RSimpleHeaderModel	access:public	signature:() const
RSimpleHeaderModel::setBackgroundColor	/home/viper/projects/RBit/rsimpleheadermodel.cpp	/^bool RSimpleHeaderModel::setBackgroundColor(Sint32 section, const RColor& color)$/;"	f	class:RSimpleHeaderModel	signature:(Sint32 section, const RColor& color)
RSimpleHeaderModel::setBackgroundColor	/home/viper/projects/RBit/rsimpleheadermodel.h	/^    virtual bool setBackgroundColor(Sint32 section, const RColor& color);$/;"	p	class:RSimpleHeaderModel	access:public	signature:(Sint32 section, const RColor& color)
RSimpleHeaderModel::setDarkColor	/home/viper/projects/RBit/rsimpleheadermodel.cpp	/^bool RSimpleHeaderModel::setDarkColor(Sint32 section, const RColor& color)$/;"	f	class:RSimpleHeaderModel	signature:(Sint32 section, const RColor& color)
RSimpleHeaderModel::setDarkColor	/home/viper/projects/RBit/rsimpleheadermodel.h	/^    virtual bool setDarkColor(Sint32 section, const RColor& color);$/;"	p	class:RSimpleHeaderModel	access:public	signature:(Sint32 section, const RColor& color)
RSimpleHeaderModel::setForegroundColor	/home/viper/projects/RBit/rsimpleheadermodel.cpp	/^bool RSimpleHeaderModel::setForegroundColor(Sint32 section, const RColor& color)$/;"	f	class:RSimpleHeaderModel	signature:(Sint32 section, const RColor& color)
RSimpleHeaderModel::setForegroundColor	/home/viper/projects/RBit/rsimpleheadermodel.h	/^    virtual bool setForegroundColor(Sint32 section, const RColor& color);$/;"	p	class:RSimpleHeaderModel	access:public	signature:(Sint32 section, const RColor& color)
RSimpleHeaderModel::setItem	/home/viper/projects/RBit/rsimpleheadermodel.h	/^    bool setItem(Sint32 section, Item* item);        $/;"	p	class:RSimpleHeaderModel	access:public	signature:(Sint32 section, Item* item)
RSimpleHeaderModel::setItem	/home/viper/projects/RBit/rsimpleheadermodel.h	/^inline bool RSimpleHeaderModel::setItem(Sint32 section, RSimpleHeaderModel::Item* item)$/;"	f	class:RSimpleHeaderModel	signature:(Sint32 section, RSimpleHeaderModel::Item* item)
RSimpleHeaderModel::setItemPrototype	/home/viper/projects/RBit/rsimpleheadermodel.cpp	/^void RSimpleHeaderModel::setItemPrototype(RSimpleHeaderModel::Item* item)$/;"	f	class:RSimpleHeaderModel	signature:(RSimpleHeaderModel::Item* item)
RSimpleHeaderModel::setItemPrototype	/home/viper/projects/RBit/rsimpleheadermodel.h	/^    void setItemPrototype(Item* item);$/;"	p	class:RSimpleHeaderModel	access:public	signature:(Item* item)
RSimpleHeaderModel::setLightColor	/home/viper/projects/RBit/rsimpleheadermodel.cpp	/^bool RSimpleHeaderModel::setLightColor(Sint32 section, const RColor& color)$/;"	f	class:RSimpleHeaderModel	signature:(Sint32 section, const RColor& color)
RSimpleHeaderModel::setLightColor	/home/viper/projects/RBit/rsimpleheadermodel.h	/^    virtual bool setLightColor(Sint32 section, const RColor& color);$/;"	p	class:RSimpleHeaderModel	access:public	signature:(Sint32 section, const RColor& color)
RSimpleHeaderModel::setModel	/home/viper/projects/RBit/rsimpleheadermodel.h	/^    inline void static setModel(Item* item, RSimpleHeaderModel* m) { item->m_model = m; }$/;"	f	class:RSimpleHeaderModel	access:private	signature:(Item* item, RSimpleHeaderModel* m)
RSimpleHeaderModel::setText	/home/viper/projects/RBit/rsimpleheadermodel.cpp	/^bool RSimpleHeaderModel::setText(Sint32 section, const char* data)$/;"	f	class:RSimpleHeaderModel	signature:(Sint32 section, const char* data)
RSimpleHeaderModel::setText	/home/viper/projects/RBit/rsimpleheadermodel.h	/^    virtual bool setText(Sint32 section, const char* data);$/;"	p	class:RSimpleHeaderModel	access:public	signature:(Sint32 section, const char* data)
RSimpleHeaderModel::setTextAlignment	/home/viper/projects/RBit/rsimpleheadermodel.cpp	/^bool RSimpleHeaderModel::setTextAlignment(Sint32 section, int alignment)$/;"	f	class:RSimpleHeaderModel	signature:(Sint32 section, int alignment)
RSimpleHeaderModel::setTextAlignment	/home/viper/projects/RBit/rsimpleheadermodel.h	/^    virtual bool setTextAlignment(Sint32 section, int alignment);$/;"	p	class:RSimpleHeaderModel	access:public	signature:(Sint32 section, int alignment)
RSimpleHeaderModel::takeItem	/home/viper/projects/RBit/rsimpleheadermodel.cpp	/^RSimpleHeaderModel::Item* RSimpleHeaderModel::takeItem(RSimpleHeaderModel::Item* item)$/;"	f	class:RSimpleHeaderModel	signature:(RSimpleHeaderModel::Item* item)
RSimpleHeaderModel::takeItem	/home/viper/projects/RBit/rsimpleheadermodel.cpp	/^RSimpleHeaderModel::Item* RSimpleHeaderModel::takeItem(Sint32 section)$/;"	f	class:RSimpleHeaderModel	signature:(Sint32 section)
RSimpleHeaderModel::takeItem	/home/viper/projects/RBit/rsimpleheadermodel.h	/^    Item* takeItem(Item* item);$/;"	p	class:RSimpleHeaderModel	access:public	signature:(Item* item)
RSimpleHeaderModel::takeItem	/home/viper/projects/RBit/rsimpleheadermodel.h	/^    Item* takeItem(Sint32 section);$/;"	p	class:RSimpleHeaderModel	access:public	signature:(Sint32 section)
RSimpleHeaderModel::text	/home/viper/projects/RBit/rsimpleheadermodel.cpp	/^const char* RSimpleHeaderModel::text(Sint32 section) const$/;"	f	class:RSimpleHeaderModel	signature:(Sint32 section) const
RSimpleHeaderModel::text	/home/viper/projects/RBit/rsimpleheadermodel.h	/^    virtual const char* text(Sint32 section) const;$/;"	p	class:RSimpleHeaderModel	access:public	signature:(Sint32 section) const
RSimpleHeaderModel::textAlignment	/home/viper/projects/RBit/rsimpleheadermodel.cpp	/^int RSimpleHeaderModel::textAlignment(Sint32 section) const$/;"	f	class:RSimpleHeaderModel	signature:(Sint32 section) const
RSimpleHeaderModel::textAlignment	/home/viper/projects/RBit/rsimpleheadermodel.h	/^    virtual int textAlignment(Sint32 section) const;$/;"	p	class:RSimpleHeaderModel	access:public	signature:(Sint32 section) const
RSimpleHeaderModel::~RSimpleHeaderModel	/home/viper/projects/RBit/rsimpleheadermodel.h	/^    ~RSimpleHeaderModel();$/;"	p	class:RSimpleHeaderModel	access:public	signature:()
RSimpleHeaderModel::~RSimpleHeaderModel	/home/viper/projects/RBit/rsimpleheadermodel.h	/^inline RSimpleHeaderModel::~RSimpleHeaderModel()$/;"	f	class:RSimpleHeaderModel	signature:()
RSimpleList	/home/viper/projects/RBit/rsimplelist.h	/^	inline RSimpleList()$/;"	f	class:RSimpleList	access:public	signature:()
RSimpleList	/home/viper/projects/RBit/rsimplelist.h	/^class RSimpleList : public SizePolicy                    $/;"	c	inherits:SizePolicy
RSimpleList::Contents	/home/viper/projects/RBit/rsimplelist.h	/^	typedef typename Node::Contents Contents;$/;"	t	class:RSimpleList	access:public
RSimpleList::RSimpleList	/home/viper/projects/RBit/rsimplelist.h	/^	inline RSimpleList()$/;"	f	class:RSimpleList	access:public	signature:()
RSimpleList::contains	/home/viper/projects/RBit/rsimplelist.h	/^    inline bool contains(Node* node) const$/;"	f	class:RSimpleList	access:public	signature:(Node* node) const
RSimpleList::head	/home/viper/projects/RBit/rsimplelist.h	/^    inline Contents* head() const$/;"	f	class:RSimpleList	access:public	signature:() const
RSimpleList::insertAfter	/home/viper/projects/RBit/rsimplelist.h	/^	inline void insertAfter(Node* after, Node* node)$/;"	f	class:RSimpleList	access:public	signature:(Node* after, Node* node)
RSimpleList::insertBefore	/home/viper/projects/RBit/rsimplelist.h	/^	inline void insertBefore(Node* before, Node* node)$/;"	f	class:RSimpleList	access:public	signature:(Node* before, Node* node)
RSimpleList::isEmpty	/home/viper/projects/RBit/rsimplelist.h	/^    inline bool isEmpty() const$/;"	f	class:RSimpleList	access:public	signature:() const
RSimpleList::m_head	/home/viper/projects/RBit/rsimplelist.h	/^	Node* m_head;$/;"	m	class:RSimpleList	access:private
RSimpleList::m_tail	/home/viper/projects/RBit/rsimplelist.h	/^	Node* m_tail;$/;"	m	class:RSimpleList	access:private
RSimpleList::moveAfter	/home/viper/projects/RBit/rsimplelist.h	/^	inline void moveAfter(Node* after, Node* first, Node* last)$/;"	f	class:RSimpleList	access:public	signature:(Node* after, Node* first, Node* last)
RSimpleList::moveAfter	/home/viper/projects/RBit/rsimplelist.h	/^	inline void moveAfter(Node* after, Node* node)$/;"	f	class:RSimpleList	access:public	signature:(Node* after, Node* node)
RSimpleList::moveBefore	/home/viper/projects/RBit/rsimplelist.h	/^	inline void moveBefore(Node* before, Node* first, Node* last)$/;"	f	class:RSimpleList	access:public	signature:(Node* before, Node* first, Node* last)
RSimpleList::moveBefore	/home/viper/projects/RBit/rsimplelist.h	/^	inline void moveBefore(Node* before, Node* node)$/;"	f	class:RSimpleList	access:public	signature:(Node* before, Node* node)
RSimpleList::pushBack	/home/viper/projects/RBit/rsimplelist.h	/^    inline Contents* pushBack(Node* node)$/;"	f	class:RSimpleList	access:public	signature:(Node* node)
RSimpleList::pushFront	/home/viper/projects/RBit/rsimplelist.h	/^    inline Contents* pushFront(Node* node)$/;"	f	class:RSimpleList	access:public	signature:(Node* node)
RSimpleList::remove	/home/viper/projects/RBit/rsimplelist.h	/^    inline void remove(Node* node)$/;"	f	class:RSimpleList	access:public	signature:(Node* node)
RSimpleList::size	/home/viper/projects/RBit/rsimplelist.h	/^	template<typename T_> inline unsigned int size(const RSimpleList<T_, RSLPolicy_TrackSize>*) const$/;"	f	class:RSimpleList	access:private	signature:(const RSimpleList<T_, RSLPolicy_TrackSize>*) const
RSimpleList::size	/home/viper/projects/RBit/rsimplelist.h	/^	template<typename T_> unsigned int size(const RSimpleList<T_, RSLPolicy_DontTrackSize>*) const$/;"	f	class:RSimpleList	access:private	signature:(const RSimpleList<T_, RSLPolicy_DontTrackSize>*) const
RSimpleList::size	/home/viper/projects/RBit/rsimplelist.h	/^	unsigned int size() const$/;"	f	class:RSimpleList	access:public	signature:() const
RSimpleList::tail	/home/viper/projects/RBit/rsimplelist.h	/^    inline Contents* tail() const$/;"	f	class:RSimpleList	access:public	signature:() const
RSimpleListNode	/home/viper/projects/RBit/rsimplelist.h	/^class RSimpleListNode : protected RSimpleListNodeBase<i>$/;"	c	inherits:RSimpleListNodeBase
RSimpleListNode::Base	/home/viper/projects/RBit/rsimplelist.h	/^	typedef RSimpleListNodeBase<i> Base;$/;"	t	class:RSimpleListNode	access:protected
RSimpleListNode::Contents	/home/viper/projects/RBit/rsimplelist.h	/^    typedef T Contents;$/;"	t	class:RSimpleListNode	access:protected
RSimpleListNode::Node	/home/viper/projects/RBit/rsimplelist.h	/^	typedef RSimpleListNode<T, i> Node;$/;"	t	class:RSimpleListNode	access:protected
RSimpleListNode::isLinked	/home/viper/projects/RBit/rsimplelist.h	/^	inline bool isLinked() const$/;"	f	class:RSimpleListNode	access:protected	signature:() const
RSimpleListNode::isLinkedAfter	/home/viper/projects/RBit/rsimplelist.h	/^	inline bool isLinkedAfter(Node* after) const$/;"	f	class:RSimpleListNode	access:protected	signature:(Node* after) const
RSimpleListNode::isLinkedBefore	/home/viper/projects/RBit/rsimplelist.h	/^	inline bool isLinkedBefore(Node* before) const$/;"	f	class:RSimpleListNode	access:protected	signature:(Node* before) const
RSimpleListNode::isLinkedFirst	/home/viper/projects/RBit/rsimplelist.h	/^	inline bool isLinkedFirst() const$/;"	f	class:RSimpleListNode	access:protected	signature:() const
RSimpleListNode::isLinkedLast	/home/viper/projects/RBit/rsimplelist.h	/^	inline bool isLinkedLast() const$/;"	f	class:RSimpleListNode	access:protected	signature:() const
RSimpleListNode::isLinkedWith	/home/viper/projects/RBit/rsimplelist.h	/^	inline bool isLinkedWith(Node* node) const$/;"	f	class:RSimpleListNode	access:protected	signature:(Node* node) const
RSimpleListNode::linkAfter	/home/viper/projects/RBit/rsimplelist.h	/^	inline T* linkAfter(Node* after)$/;"	f	class:RSimpleListNode	access:protected	signature:(Node* after)
RSimpleListNode::linkAfter	/home/viper/projects/RBit/rsimplelist.h	/^	inline static void linkAfter(Node* after, Node* first, Node* last)$/;"	f	class:RSimpleListNode	access:protected	signature:(Node* after, Node* first, Node* last)
RSimpleListNode::linkBefore	/home/viper/projects/RBit/rsimplelist.h	/^	inline T* linkBefore(Node* before)$/;"	f	class:RSimpleListNode	access:protected	signature:(Node* before)
RSimpleListNode::linkBefore	/home/viper/projects/RBit/rsimplelist.h	/^	inline static void linkBefore(Node* before, Node* first, Node* last)$/;"	f	class:RSimpleListNode	access:protected	signature:(Node* before, Node* first, Node* last)
RSimpleListNode::next	/home/viper/projects/RBit/rsimplelist.h	/^	inline T* next() const$/;"	f	class:RSimpleListNode	access:protected	signature:() const
RSimpleListNode::prev	/home/viper/projects/RBit/rsimplelist.h	/^	inline T* prev() const$/;"	f	class:RSimpleListNode	access:protected	signature:() const
RSimpleListNode::unlink	/home/viper/projects/RBit/rsimplelist.h	/^	inline static void unlink(Node* first, Node* last)$/;"	f	class:RSimpleListNode	access:protected	signature:(Node* first, Node* last)
RSimpleListNode::unlink	/home/viper/projects/RBit/rsimplelist.h	/^	inline void unlink()$/;"	f	class:RSimpleListNode	access:protected	signature:()
RSimpleListNodeBase	/home/viper/projects/RBit/rsimplelist.h	/^	RSimpleListNodeBase() :		$/;"	f	class:RSimpleListNodeBase	access:public	signature:()
RSimpleListNodeBase	/home/viper/projects/RBit/rsimplelist.h	/^class RBIT_CORE_EXPORT RSimpleListNodeBase$/;"	c
RSimpleListNodeBase::RSimpleListNodeBase	/home/viper/projects/RBit/rsimplelist.h	/^	RSimpleListNodeBase() :		$/;"	f	class:RSimpleListNodeBase	access:public	signature:()
RSimpleListNodeBase::circularLinkAfter	/home/viper/projects/RBit/rsimplelist.h	/^	inline RSimpleListNodeBase* circularLinkAfter(RSimpleListNodeBase* after) $/;"	f	class:RSimpleListNodeBase	access:protected	signature:(RSimpleListNodeBase* after)
RSimpleListNodeBase::circularLinkBefore	/home/viper/projects/RBit/rsimplelist.h	/^	inline RSimpleListNodeBase* circularLinkBefore(RSimpleListNodeBase* before) $/;"	f	class:RSimpleListNodeBase	access:protected	signature:(RSimpleListNodeBase* before)
RSimpleListNodeBase::isLinked	/home/viper/projects/RBit/rsimplelist.h	/^	inline bool isLinked() const$/;"	f	class:RSimpleListNodeBase	access:protected	signature:() const
RSimpleListNodeBase::isLinkedAfter	/home/viper/projects/RBit/rsimplelist.h	/^	bool isLinkedAfter(const RSimpleListNodeBase* after) const$/;"	f	class:RSimpleListNodeBase	access:protected	signature:(const RSimpleListNodeBase* after) const
RSimpleListNodeBase::isLinkedBefore	/home/viper/projects/RBit/rsimplelist.h	/^	bool isLinkedBefore(const RSimpleListNodeBase* before) const$/;"	f	class:RSimpleListNodeBase	access:protected	signature:(const RSimpleListNodeBase* before) const
RSimpleListNodeBase::isLinkedFirst	/home/viper/projects/RBit/rsimplelist.h	/^	inline bool isLinkedFirst() const$/;"	f	class:RSimpleListNodeBase	access:protected	signature:() const
RSimpleListNodeBase::isLinkedLast	/home/viper/projects/RBit/rsimplelist.h	/^	inline bool isLinkedLast() const$/;"	f	class:RSimpleListNodeBase	access:protected	signature:() const
RSimpleListNodeBase::isLinkedWith	/home/viper/projects/RBit/rsimplelist.h	/^	inline bool isLinkedWith(const RSimpleListNodeBase* node) const$/;"	f	class:RSimpleListNodeBase	access:protected	signature:(const RSimpleListNodeBase* node) const
RSimpleListNodeBase::linkAfter	/home/viper/projects/RBit/rsimplelist.h	/^	inline RSimpleListNodeBase* linkAfter(RSimpleListNodeBase* after)$/;"	f	class:RSimpleListNodeBase	access:protected	signature:(RSimpleListNodeBase* after)
RSimpleListNodeBase::linkAfter	/home/viper/projects/RBit/rsimplelist.h	/^	inline static void linkAfter(RSimpleListNodeBase* after, RSimpleListNodeBase* first, RSimpleListNodeBase* last)$/;"	f	class:RSimpleListNodeBase	access:protected	signature:(RSimpleListNodeBase* after, RSimpleListNodeBase* first, RSimpleListNodeBase* last)
RSimpleListNodeBase::linkBefore	/home/viper/projects/RBit/rsimplelist.h	/^	inline RSimpleListNodeBase* linkBefore(RSimpleListNodeBase* before)$/;"	f	class:RSimpleListNodeBase	access:protected	signature:(RSimpleListNodeBase* before)
RSimpleListNodeBase::linkBefore	/home/viper/projects/RBit/rsimplelist.h	/^	inline static void linkBefore(RSimpleListNodeBase* before, RSimpleListNodeBase* first, RSimpleListNodeBase* last)$/;"	f	class:RSimpleListNodeBase	access:protected	signature:(RSimpleListNodeBase* before, RSimpleListNodeBase* first, RSimpleListNodeBase* last)
RSimpleListNodeBase::m_next	/home/viper/projects/RBit/rsimplelist.h	/^	RSimpleListNodeBase* m_next;$/;"	m	class:RSimpleListNodeBase	access:private
RSimpleListNodeBase::m_prev	/home/viper/projects/RBit/rsimplelist.h	/^	RSimpleListNodeBase* m_prev;$/;"	m	class:RSimpleListNodeBase	access:private
RSimpleListNodeBase::next	/home/viper/projects/RBit/rsimplelist.h	/^	inline RSimpleListNodeBase* next() const$/;"	f	class:RSimpleListNodeBase	access:protected	signature:() const
RSimpleListNodeBase::prev	/home/viper/projects/RBit/rsimplelist.h	/^	inline RSimpleListNodeBase* prev() const$/;"	f	class:RSimpleListNodeBase	access:protected	signature:() const
RSimpleListNodeBase::unlink	/home/viper/projects/RBit/rsimplelist.h	/^	inline static void unlink(RSimpleListNodeBase* first, RSimpleListNodeBase* last)$/;"	f	class:RSimpleListNodeBase	access:protected	signature:(RSimpleListNodeBase* first, RSimpleListNodeBase* last)
RSimpleListNodeBase::unlink	/home/viper/projects/RBit/rsimplelist.h	/^	inline void unlink()$/;"	f	class:RSimpleListNodeBase	access:protected	signature:()
RSimpleListNodeBase::~RSimpleListNodeBase	/home/viper/projects/RBit/rsimplelist.h	/^	~RSimpleListNodeBase()$/;"	f	class:RSimpleListNodeBase	access:public	signature:()
RSize	/home/viper/projects/RBit/rsize.h	/^    RSize();	$/;"	p	class:RSize	access:public	signature:()
RSize	/home/viper/projects/RBit/rsize.h	/^    RSize(Uint16 w, Uint16 h);$/;"	p	class:RSize	access:public	signature:(Uint16 w, Uint16 h)
RSize	/home/viper/projects/RBit/rsize.h	/^class RSize$/;"	c
RSize	/home/viper/projects/RBit/rsize.h	/^inline RSize::RSize() : m_width(0), m_height(0) $/;"	f	class:RSize	signature:()
RSize	/home/viper/projects/RBit/rsize.h	/^inline RSize::RSize(Uint16 w, Uint16 h) : m_width(w), m_height(h)$/;"	f	class:RSize	signature:(Uint16 w, Uint16 h)
RSize::RSize	/home/viper/projects/RBit/rsize.h	/^    RSize();	$/;"	p	class:RSize	access:public	signature:()
RSize::RSize	/home/viper/projects/RBit/rsize.h	/^    RSize(Uint16 w, Uint16 h);$/;"	p	class:RSize	access:public	signature:(Uint16 w, Uint16 h)
RSize::RSize	/home/viper/projects/RBit/rsize.h	/^inline RSize::RSize() : m_width(0), m_height(0) $/;"	f	class:RSize	signature:()
RSize::RSize	/home/viper/projects/RBit/rsize.h	/^inline RSize::RSize(Uint16 w, Uint16 h) : m_width(w), m_height(h)$/;"	f	class:RSize	signature:(Uint16 w, Uint16 h)
RSize::boundedTo	/home/viper/projects/RBit/rsize.h	/^    RSize boundedTo(const RSize&) const;$/;"	p	class:RSize	access:public	signature:(const RSize&) const
RSize::boundedTo	/home/viper/projects/RBit/rsize.h	/^inline RSize RSize::boundedTo(const RSize& s) const$/;"	f	class:RSize	signature:(const RSize& s) const
RSize::expandedTo	/home/viper/projects/RBit/rsize.h	/^    RSize expandedTo(const RSize&) const;$/;"	p	class:RSize	access:public	signature:(const RSize&) const
RSize::expandedTo	/home/viper/projects/RBit/rsize.h	/^inline RSize RSize::expandedTo(const RSize& s) const$/;"	f	class:RSize	signature:(const RSize& s) const
RSize::height	/home/viper/projects/RBit/rsize.h	/^    Uint16 height() const;$/;"	p	class:RSize	access:public	signature:() const
RSize::height	/home/viper/projects/RBit/rsize.h	/^inline Uint16 RSize::height() const $/;"	f	class:RSize	signature:() const
RSize::isEmpty	/home/viper/projects/RBit/rsize.h	/^    bool isEmpty() const;$/;"	p	class:RSize	access:public	signature:() const
RSize::isEmpty	/home/viper/projects/RBit/rsize.h	/^inline bool RSize::isEmpty() const $/;"	f	class:RSize	signature:() const
RSize::m_height	/home/viper/projects/RBit/rsize.h	/^    Uint16 m_height;$/;"	m	class:RSize	access:private
RSize::m_width	/home/viper/projects/RBit/rsize.h	/^    Uint16 m_width;$/;"	m	class:RSize	access:private
RSize::operator !=	/home/viper/projects/RBit/rsize.h	/^    friend inline bool operator!= (const RSize &s1, const RSize &s2);$/;"	p	class:RSize	access:friend	signature:(const RSize &s1, const RSize &s2)
RSize::operator +	/home/viper/projects/RBit/rsize.h	/^    friend inline const RSize operator+ (const RSize& s1, const RSize& s2);$/;"	p	class:RSize	access:friend	signature:(const RSize& s1, const RSize& s2)
RSize::operator +=	/home/viper/projects/RBit/rsize.h	/^    RSize &operator+= (const RSize &s);$/;"	p	class:RSize	access:public	signature:(const RSize &s)
RSize::operator +=	/home/viper/projects/RBit/rsize.h	/^inline RSize& RSize::operator+= (const RSize &s)$/;"	f	class:RSize	signature:(const RSize &s)
RSize::operator -	/home/viper/projects/RBit/rsize.h	/^    friend inline const RSize operator- (const RSize &s1, const RSize &s2);	$/;"	p	class:RSize	access:friend	signature:(const RSize &s1, const RSize &s2)
RSize::operator -=	/home/viper/projects/RBit/rsize.h	/^    RSize &operator-= (const RSize &s);$/;"	p	class:RSize	access:public	signature:(const RSize &s)
RSize::operator -=	/home/viper/projects/RBit/rsize.h	/^inline RSize& RSize::operator-= (const RSize &s)$/;"	f	class:RSize	signature:(const RSize &s)
RSize::operator ==	/home/viper/projects/RBit/rsize.h	/^    friend inline bool operator== (const RSize& s1, const RSize& s2);$/;"	p	class:RSize	access:friend	signature:(const RSize& s1, const RSize& s2)
RSize::setHeight	/home/viper/projects/RBit/rsize.h	/^    void setHeight(Uint16 h);$/;"	p	class:RSize	access:public	signature:(Uint16 h)
RSize::setHeight	/home/viper/projects/RBit/rsize.h	/^inline void RSize::setHeight(Uint16 h) $/;"	f	class:RSize	signature:(Uint16 h)
RSize::setWidth	/home/viper/projects/RBit/rsize.h	/^    void setWidth(Uint16 w);$/;"	p	class:RSize	access:public	signature:(Uint16 w)
RSize::setWidth	/home/viper/projects/RBit/rsize.h	/^inline void RSize::setWidth(Uint16 w) $/;"	f	class:RSize	signature:(Uint16 w)
RSize::width	/home/viper/projects/RBit/rsize.h	/^    Uint16 width() const;$/;"	p	class:RSize	access:public	signature:() const
RSize::width	/home/viper/projects/RBit/rsize.h	/^inline Uint16 RSize::width() const $/;"	f	class:RSize	signature:() const
RSplitter	/home/viper/projects/RBit/rsplitter.cpp	/^RSplitter::RSplitter(RBit::Orientation orientation, RWidget* parent, RWFlags f) : $/;"	f	class:RSplitter	signature:(RBit::Orientation orientation, RWidget* parent, RWFlags f)
RSplitter	/home/viper/projects/RBit/rsplitter.h	/^	explicit RSplitter(RBit::Orientation orientation, RWidget* parent = 0, RWFlags f = RWFlags(0));$/;"	p	class:RSplitter	access:public	signature:(RBit::Orientation orientation, RWidget* parent = 0, RWFlags f = RWFlags(0))
RSplitter	/home/viper/projects/RBit/rsplitter.h	/^class RBIT_CORE_EXPORT RSplitter : public RWidget,$/;"	c	inherits:RWidget,RFramePainter
RSplitter::RSplitter	/home/viper/projects/RBit/rsplitter.cpp	/^RSplitter::RSplitter(RBit::Orientation orientation, RWidget* parent, RWFlags f) : $/;"	f	class:RSplitter	signature:(RBit::Orientation orientation, RWidget* parent, RWFlags f)
RSplitter::RSplitter	/home/viper/projects/RBit/rsplitter.h	/^	explicit RSplitter(RBit::Orientation orientation, RWidget* parent = 0, RWFlags f = RWFlags(0));$/;"	p	class:RSplitter	access:public	signature:(RBit::Orientation orientation, RWidget* parent = 0, RWFlags f = RWFlags(0))
RSplitter::RWIDGET_RTTI_DECLARE	/home/viper/projects/RBit/rsplitter.h	/^	RWIDGET_RTTI_DECLARE(RSplitter, RWidget);$/;"	p	class:RSplitter	access:private	signature:(RSplitter, RWidget)
RSplitter::eventBeginSplit	/home/viper/projects/RBit/rsplitter.cpp	/^void RSplitter::eventBeginSplit()$/;"	f	class:RSplitter	signature:()
RSplitter::eventBeginSplit	/home/viper/projects/RBit/rsplitter.h	/^	virtual void eventBeginSplit();$/;"	p	class:RSplitter	access:protected	signature:()
RSplitter::eventEndSplit	/home/viper/projects/RBit/rsplitter.cpp	/^void RSplitter::eventEndSplit(int pos)$/;"	f	class:RSplitter	signature:(int pos)
RSplitter::eventEndSplit	/home/viper/projects/RBit/rsplitter.h	/^	virtual void eventEndSplit(int pos);$/;"	p	class:RSplitter	access:protected	signature:(int pos)
RSplitter::eventHide	/home/viper/projects/RBit/rsplitter.cpp	/^void RSplitter::eventHide()$/;"	f	class:RSplitter	signature:()
RSplitter::eventHide	/home/viper/projects/RBit/rsplitter.h	/^	virtual void eventHide();$/;"	p	class:RSplitter	access:protected	signature:()
RSplitter::eventMouseDown	/home/viper/projects/RBit/rsplitter.cpp	/^void RSplitter::eventMouseDown(const SDL_MouseButtonEvent& m)$/;"	f	class:RSplitter	signature:(const SDL_MouseButtonEvent& m)
RSplitter::eventMouseDown	/home/viper/projects/RBit/rsplitter.h	/^	virtual void eventMouseDown(const SDL_MouseButtonEvent& m);$/;"	p	class:RSplitter	access:protected	signature:(const SDL_MouseButtonEvent& m)
RSplitter::eventMouseMove	/home/viper/projects/RBit/rsplitter.cpp	/^void RSplitter::eventMouseMove(const SDL_MouseMotionEvent& m)$/;"	f	class:RSplitter	signature:(const SDL_MouseMotionEvent& m)
RSplitter::eventMouseMove	/home/viper/projects/RBit/rsplitter.h	/^	virtual void eventMouseMove(const SDL_MouseMotionEvent&);$/;"	p	class:RSplitter	access:protected	signature:(const SDL_MouseMotionEvent&)
RSplitter::eventMouseUp	/home/viper/projects/RBit/rsplitter.cpp	/^void RSplitter::eventMouseUp(const SDL_MouseButtonEvent& m)$/;"	f	class:RSplitter	signature:(const SDL_MouseButtonEvent& m)
RSplitter::eventMouseUp	/home/viper/projects/RBit/rsplitter.h	/^	virtual void eventMouseUp(const SDL_MouseButtonEvent& m);$/;"	p	class:RSplitter	access:protected	signature:(const SDL_MouseButtonEvent& m)
RSplitter::eventShow	/home/viper/projects/RBit/rsplitter.cpp	/^void RSplitter::eventShow()$/;"	f	class:RSplitter	signature:()
RSplitter::eventShow	/home/viper/projects/RBit/rsplitter.h	/^	virtual void eventShow();$/;"	p	class:RSplitter	access:protected	signature:()
RSplitter::eventSplit	/home/viper/projects/RBit/rsplitter.cpp	/^void RSplitter::eventSplit()$/;"	f	class:RSplitter	signature:()
RSplitter::eventSplit	/home/viper/projects/RBit/rsplitter.h	/^	virtual void eventSplit();$/;"	p	class:RSplitter	access:protected	signature:()
RSplitter::getSplitterWidth	/home/viper/projects/RBit/rsplitter.cpp	/^int RSplitter::getSplitterWidth() const$/;"	f	class:RSplitter	signature:() const
RSplitter::getSplitterWidth	/home/viper/projects/RBit/rsplitter.h	/^	int getSplitterWidth() const;$/;"	p	class:RSplitter	access:public	signature:() const
RSplitter::m_d	/home/viper/projects/RBit/rsplitter.h	/^	RSplitterPrivate *const m_d;$/;"	m	class:RSplitter	access:private
RSplitter::repaintImpl	/home/viper/projects/RBit/rsplitter.cpp	/^void RSplitter::repaintImpl(const RRect& r)$/;"	f	class:RSplitter	signature:(const RRect& r)
RSplitter::repaintImpl	/home/viper/projects/RBit/rsplitter.h	/^	virtual void repaintImpl(const RRect& r);$/;"	p	class:RSplitter	access:protected	signature:(const RRect& r)
RSplitter::setMaxPos	/home/viper/projects/RBit/rsplitter.cpp	/^void RSplitter::setMaxPos(int pos)$/;"	f	class:RSplitter	signature:(int pos)
RSplitter::setMaxPos	/home/viper/projects/RBit/rsplitter.h	/^	void setMaxPos(int pos);$/;"	p	class:RSplitter	access:public	signature:(int pos)
RSplitter::setMinPos	/home/viper/projects/RBit/rsplitter.cpp	/^void RSplitter::setMinPos(int pos)$/;"	f	class:RSplitter	signature:(int pos)
RSplitter::setMinPos	/home/viper/projects/RBit/rsplitter.h	/^	void setMinPos(int pos);$/;"	p	class:RSplitter	access:public	signature:(int pos)
RSplitter::setSplitterPanes	/home/viper/projects/RBit/rsplitter.cpp	/^void RSplitter::setSplitterPanes(RWidget *pFirst, RWidget *pSecond)$/;"	f	class:RSplitter	signature:(RWidget *pFirst, RWidget *pSecond)
RSplitter::setSplitterPanes	/home/viper/projects/RBit/rsplitter.h	/^	void setSplitterPanes(RWidget *pFirst, RWidget *pSecond);$/;"	p	class:RSplitter	access:public	signature:(RWidget *pFirst, RWidget *pSecond)
RSplitter::setSplitterWidth	/home/viper/projects/RBit/rsplitter.cpp	/^void RSplitter::setSplitterWidth(int m_Width)$/;"	f	class:RSplitter	signature:(int m_Width)
RSplitter::setSplitterWidth	/home/viper/projects/RBit/rsplitter.h	/^	void setSplitterWidth(int m_Width);$/;"	p	class:RSplitter	access:public	signature:(int m_Width)
RSplitter::~RSplitter	/home/viper/projects/RBit/rsplitter.cpp	/^RSplitter::~RSplitter()$/;"	f	class:RSplitter	signature:()
RSplitter::~RSplitter	/home/viper/projects/RBit/rsplitter.h	/^	virtual ~RSplitter();$/;"	p	class:RSplitter	access:public	signature:()
RSplitterPrivate	/home/viper/projects/RBit/rsplitter.cpp	/^	RSplitterPrivate(RBit::Orientation orientation) :$/;"	f	class:RSplitterPrivate	access:public	signature:(RBit::Orientation orientation)
RSplitterPrivate	/home/viper/projects/RBit/rsplitter.cpp	/^class RSplitterPrivate {$/;"	c	file:
RSplitterPrivate::NoState	/home/viper/projects/RBit/rsplitter.cpp	/^	enum State { NoState, ResizeState };$/;"	e	enum:RSplitterPrivate::State	file:
RSplitterPrivate::RSplitterPrivate	/home/viper/projects/RBit/rsplitter.cpp	/^	RSplitterPrivate(RBit::Orientation orientation) :$/;"	f	class:RSplitterPrivate	access:public	signature:(RBit::Orientation orientation)
RSplitterPrivate::ResizeState	/home/viper/projects/RBit/rsplitter.cpp	/^	enum State { NoState, ResizeState };$/;"	e	enum:RSplitterPrivate::State	file:
RSplitterPrivate::State	/home/viper/projects/RBit/rsplitter.cpp	/^	enum State { NoState, ResizeState };$/;"	g	class:RSplitterPrivate	file:	access:public
RSplitterPrivate::createCursors	/home/viper/projects/RBit/rsplitter.cpp	/^	void createCursors()$/;"	f	class:RSplitterPrivate	access:public	signature:()
RSplitterPrivate::deleteCursors	/home/viper/projects/RBit/rsplitter.cpp	/^	void deleteCursors()$/;"	f	class:RSplitterPrivate	access:public	signature:()
RSplitterPrivate::m_SplitterWidth	/home/viper/projects/RBit/rsplitter.cpp	/^	int m_SplitterWidth;				\/\/¯ËËÌ‡ ÒÔÎËÚÚÂ‡$/;"	m	class:RSplitterPrivate	file:	access:public
RSplitterPrivate::m_arrowCursor	/home/viper/projects/RBit/rsplitter.cpp	/^	SDL_Cursor *m_arrowCursor;$/;"	m	class:RSplitterPrivate	file:	access:public
RSplitterPrivate::m_curCursor	/home/viper/projects/RBit/rsplitter.cpp	/^	SDL_Cursor *m_curCursor;$/;"	m	class:RSplitterPrivate	file:	access:public
RSplitterPrivate::m_max_pos	/home/viper/projects/RBit/rsplitter.cpp	/^	int m_min_pos, m_max_pos;			\/\/ÏËÌË‡Î¸Ì‡ˇ - Ï‡ÍÒËÏ‡Î¸Ì‡ˇ ‡ÁÂ¯ÂÌÌ‡ˇ ÔÓÁËˆËˇ ‰Îˇ ÒÔÎËÚÚÂ‡$/;"	m	class:RSplitterPrivate	file:	access:public
RSplitterPrivate::m_min_pos	/home/viper/projects/RBit/rsplitter.cpp	/^	int m_min_pos, m_max_pos;			\/\/ÏËÌË‡Î¸Ì‡ˇ - Ï‡ÍÒËÏ‡Î¸Ì‡ˇ ‡ÁÂ¯ÂÌÌ‡ˇ ÔÓÁËˆËˇ ‰Îˇ ÒÔÎËÚÚÂ‡$/;"	m	class:RSplitterPrivate	file:	access:public
RSplitterPrivate::m_orientation	/home/viper/projects/RBit/rsplitter.cpp	/^	RBit::Orientation m_orientation;	\/\/„ÓËÁÓÌÚ‡Î¸Ì˚È ËÎË ‚ÂÚËÍ‡Î¸Ì˚È$/;"	m	class:RSplitterPrivate	file:	access:public
RSplitterPrivate::m_splitHCursor	/home/viper/projects/RBit/rsplitter.cpp	/^	SDL_Cursor *m_splitHCursor;$/;"	m	class:RSplitterPrivate	file:	access:public
RSplitterPrivate::m_splitVCursor	/home/viper/projects/RBit/rsplitter.cpp	/^	SDL_Cursor *m_splitVCursor;$/;"	m	class:RSplitterPrivate	file:	access:public
RSplitterPrivate::m_state	/home/viper/projects/RBit/rsplitter.cpp	/^	State m_state;$/;"	m	class:RSplitterPrivate	file:	access:public
RSplitterPrivate::pFirstWnd	/home/viper/projects/RBit/rsplitter.cpp	/^	RWidget *pFirstWnd;$/;"	m	class:RSplitterPrivate	file:	access:public
RSplitterPrivate::pSecondWnd	/home/viper/projects/RBit/rsplitter.cpp	/^	RWidget *pSecondWnd;$/;"	m	class:RSplitterPrivate	file:	access:public
RSplitterPrivate::q	/home/viper/projects/RBit/rsplitter.cpp	/^	RSplitter* q;$/;"	m	class:RSplitterPrivate	file:	access:public
RSplitterPrivate::setState	/home/viper/projects/RBit/rsplitter.cpp	/^	void setState(State st)$/;"	f	class:RSplitterPrivate	access:public	signature:(State st)
RSplitterPrivate::split	/home/viper/projects/RBit/rsplitter.cpp	/^	void split(Uint16 x, Uint16 y);$/;"	p	class:RSplitterPrivate	file:	access:public	signature:(Uint16 x, Uint16 y)
RSplitterPrivate::split	/home/viper/projects/RBit/rsplitter.cpp	/^void RSplitterPrivate::split(Uint16 x, Uint16 y)$/;"	f	class:RSplitterPrivate	signature:(Uint16 x, Uint16 y)
RSplitterPrivate::state	/home/viper/projects/RBit/rsplitter.cpp	/^	State state() const$/;"	f	class:RSplitterPrivate	access:public	signature:() const
RString	/home/viper/projects/RBit/rstring.h	/^	RString();$/;"	p	class:RString	access:public	signature:()
RString	/home/viper/projects/RBit/rstring.h	/^	RString(const RString& s);$/;"	p	class:RString	access:public	signature:(const RString& s)
RString	/home/viper/projects/RBit/rstring.h	/^	RString(const char* str);$/;"	p	class:RString	access:public	signature:(const char* str)
RString	/home/viper/projects/RBit/rstring.h	/^class RString {$/;"	c
RString	/home/viper/projects/RBit/rstring.h	/^inline RString::RString() $/;"	f	class:RString	signature:()
RString	/home/viper/projects/RBit/rstring.h	/^inline RString::RString(const RString& str)$/;"	f	class:RString	signature:(const RString& str)
RString	/home/viper/projects/RBit/rstring.h	/^inline RString::RString(const char* str)$/;"	f	class:RString	signature:(const char* str)
RString::RString	/home/viper/projects/RBit/rstring.h	/^	RString();$/;"	p	class:RString	access:public	signature:()
RString::RString	/home/viper/projects/RBit/rstring.h	/^	RString(const RString& s);$/;"	p	class:RString	access:public	signature:(const RString& s)
RString::RString	/home/viper/projects/RBit/rstring.h	/^	RString(const char* str);$/;"	p	class:RString	access:public	signature:(const char* str)
RString::RString	/home/viper/projects/RBit/rstring.h	/^inline RString::RString() $/;"	f	class:RString	signature:()
RString::RString	/home/viper/projects/RBit/rstring.h	/^inline RString::RString(const RString& str)$/;"	f	class:RString	signature:(const RString& str)
RString::RString	/home/viper/projects/RBit/rstring.h	/^inline RString::RString(const char* str)$/;"	f	class:RString	signature:(const char* str)
RString::free	/home/viper/projects/RBit/rstring.h	/^	void free();$/;"	p	class:RString	access:public	signature:()
RString::free	/home/viper/projects/RBit/rstring.h	/^inline void RString::free()$/;"	f	class:RString	signature:()
RString::m_str	/home/viper/projects/RBit/rstring.h	/^	char* m_str;$/;"	m	class:RString	access:private
RString::number	/home/viper/projects/RBit/rstring.h	/^	RString &number(int val);$/;"	p	class:RString	access:public	signature:(int val)
RString::number	/home/viper/projects/RBit/rstring.h	/^inline RString &RString::number(int val)$/;"	f	class:RString	signature:(int val)
RString::operator =	/home/viper/projects/RBit/rstring.h	/^	RString& operator= (const RString& a);$/;"	p	class:RString	access:public	signature:(const RString& a)
RString::operator =	/home/viper/projects/RBit/rstring.h	/^	RString& operator= (const char* str);$/;"	p	class:RString	access:public	signature:(const char* str)
RString::operator =	/home/viper/projects/RBit/rstring.h	/^inline RString& RString::operator=(const RString& str)$/;"	f	class:RString	signature:(const RString& str)
RString::operator =	/home/viper/projects/RBit/rstring.h	/^inline RString& RString::operator=(const char* str)$/;"	f	class:RString	signature:(const char* str)
RString::operator char*	/home/viper/projects/RBit/rstring.h	/^	operator char*();$/;"	p	class:RString	access:public	signature:()
RString::operator char*	/home/viper/projects/RBit/rstring.h	/^inline RString::operator char*()$/;"	f	class:RString	signature:()
RString::operator const char*	/home/viper/projects/RBit/rstring.h	/^	operator const char*() const;$/;"	p	class:RString	access:public	signature:() const
RString::operator const char*	/home/viper/projects/RBit/rstring.h	/^inline RString::operator const char*() const$/;"	f	class:RString	signature:() const
RString::~RString	/home/viper/projects/RBit/rstring.h	/^	~RString();$/;"	p	class:RString	access:public	signature:()
RString::~RString	/home/viper/projects/RBit/rstring.h	/^inline RString::~RString()$/;"	f	class:RString	signature:()
RSubject	/home/viper/projects/RBit/rsubjectobserver.h	/^    RSubject() {}$/;"	f	class:RSubject	access:public	signature:()
RSubject	/home/viper/projects/RBit/rsubjectobserver.h	/^class RSubject : public RSimpleListNode<Subject>$/;"	c	inherits:RSimpleListNode
RSubject::Observer	/home/viper/projects/RBit/rsubjectobserver.h	/^    typedef typename RSubjectTraits<Subject>::Observer Observer;$/;"	t	class:RSubject	access:public
RSubject::ObserverList	/home/viper/projects/RBit/rsubjectobserver.h	/^    typedef RSimpleList<ObserverListNode> ObserverList;$/;"	t	class:RSubject	access:private
RSubject::ObserverListNode	/home/viper/projects/RBit/rsubjectobserver.h	/^    typedef RSimpleListNode<Observer> ObserverListNode;$/;"	t	class:RSubject	access:private
RSubject::RSubject	/home/viper/projects/RBit/rsubjectobserver.h	/^    RSubject() {}$/;"	f	class:RSubject	access:public	signature:()
RSubject::firstObserver	/home/viper/projects/RBit/rsubjectobserver.h	/^    Observer* firstObserver() const$/;"	f	class:RSubject	access:public	signature:() const
RSubject::m_observers	/home/viper/projects/RBit/rsubjectobserver.h	/^    ObserverList m_observers;$/;"	m	class:RSubject	access:private
RSubject::nextSubject	/home/viper/projects/RBit/rsubjectobserver.h	/^    Subject* nextSubject() const$/;"	f	class:RSubject	access:public	signature:() const
RSubject::setObserver	/home/viper/projects/RBit/rsubjectobserver.h	/^    void setObserver(Observer* o)$/;"	f	class:RSubject	access:public	signature:(Observer* o)
RSubject::~RSubject	/home/viper/projects/RBit/rsubjectobserver.h	/^    ~RSubject()$/;"	f	class:RSubject	access:public	signature:()
RSubjectTraits	/home/viper/projects/RBit/rgridmodel.h	/^class RSubjectTraits<RGridModel>$/;"	c
RSubjectTraits	/home/viper/projects/RBit/rgridview.h	/^class RSubjectTraits<RGridView>$/;"	c
RSubjectTraits	/home/viper/projects/RBit/rheadermodel.h	/^class RSubjectTraits<RHeaderModel>$/;"	c
RSubjectTraits	/home/viper/projects/RBit/rheaderview.h	/^class RSubjectTraits<RHeaderView>$/;"	c
RSubjectTraits::Observer	/home/viper/projects/RBit/rgridmodel.h	/^    typedef RGridModelObserverBase Observer;$/;"	t	class:RSubjectTraits	access:public
RSubjectTraits::Observer	/home/viper/projects/RBit/rgridview.h	/^    typedef RGridViewObserver Observer;$/;"	t	class:RSubjectTraits	access:public
RSubjectTraits::Observer	/home/viper/projects/RBit/rheadermodel.h	/^    typedef RHeaderModelObserver Observer;$/;"	t	class:RSubjectTraits	access:public
RSubjectTraits::Observer	/home/viper/projects/RBit/rheaderview.h	/^    typedef RHeaderViewObserver Observer;$/;"	t	class:RSubjectTraits	access:public
RSurface	/home/viper/projects/RBit/rsurface.h	/^    RSurface(const RSurface& right)$/;"	f	class:RSurface	access:public	signature:(const RSurface& right)
RSurface	/home/viper/projects/RBit/rsurface.h	/^    explicit RSurface(SDL_Surface* ptr = 0)$/;"	f	class:RSurface	access:public	signature:(SDL_Surface* ptr = 0)
RSurface	/home/viper/projects/RBit/rsurface.h	/^class RSurface : public RSharedPtr<SDL_Surface>$/;"	c	inherits:RSharedPtr
RSurface::Base	/home/viper/projects/RBit/rsurface.h	/^    typedef RSharedPtr<SDL_Surface> Base;$/;"	t	class:RSurface	access:private
RSurface::RSurface	/home/viper/projects/RBit/rsurface.h	/^    RSurface(const RSurface& right)$/;"	f	class:RSurface	access:public	signature:(const RSurface& right)
RSurface::RSurface	/home/viper/projects/RBit/rsurface.h	/^    explicit RSurface(SDL_Surface* ptr = 0)$/;"	f	class:RSurface	access:public	signature:(SDL_Surface* ptr = 0)
RSurface::free	/home/viper/projects/RBit/rsurface.h	/^    void free()  \/\/ obsolete, exists for compatibility$/;"	f	class:RSurface	access:public	signature:()
RSurface::operator =	/home/viper/projects/RBit/rsurface.h	/^    RSurface& operator= (SDL_Surface* ptr)  \/\/ obsolete, exists for compatibility$/;"	f	class:RSurface	access:public	signature:(SDL_Surface* ptr)
RSurface::sdlSurface	/home/viper/projects/RBit/rsurface.h	/^    SDL_Surface* sdlSurface() const  \/\/ obsolete, exists for compatibility$/;"	f	class:RSurface	access:public	signature:() const
RSurface::~RSurface	/home/viper/projects/RBit/rsurface.h	/^    ~RSurface()$/;"	f	class:RSurface	access:public	signature:()
RTEXTCOLORMANAGER_H	/home/viper/projects/RBit/rcolormanager.h	2;"	d
RTEXT_PAINTER_H	/home/viper/projects/RBit/rtextpainter.h	2;"	d
RTTFQuiter	/home/viper/projects/RBit/rfont.h	/^    RTTFQuiter()$/;"	f	class:RTTFQuiter	access:public	signature:()
RTTFQuiter	/home/viper/projects/RBit/rfont.h	/^class RBIT_CORE_EXPORT RTTFQuiter {$/;"	c
RTTFQuiter::RTTFQuiter	/home/viper/projects/RBit/rfont.h	/^    RTTFQuiter()$/;"	f	class:RTTFQuiter	access:public	signature:()
RTTFQuiter::m_ttfcount	/home/viper/projects/RBit/rfont.cpp	/^int RTTFQuiter::m_ttfcount = 0;/;"	m	class:RTTFQuiter	file:
RTTFQuiter::m_ttfcount	/home/viper/projects/RBit/rfont.h	/^    static int m_ttfcount;$/;"	m	class:RTTFQuiter	access:private
RTTFQuiter::~RTTFQuiter	/home/viper/projects/RBit/rfont.h	/^    ~RTTFQuiter()$/;"	f	class:RTTFQuiter	access:public	signature:()
RTabWidgetListNode	/home/viper/projects/RBit/rwidget.h	/^typedef RSimpleCircularListNode<RWidget, 2> RTabWidgetListNode;$/;"	t
RTextFlags	/home/viper/projects/RBit/rdrawutil.h	/^enum RTextFlags {$/;"	g
RTextLine	/home/viper/projects/RBit/rdrawutil.cpp	/^    RTextLine(int pos, int len, Uint16 width);$/;"	p	struct:RTextLine	file:	access:public	signature:(int pos, int len, Uint16 width)
RTextLine	/home/viper/projects/RBit/rdrawutil.cpp	/^inline RTextLine::RTextLine(int p, int l, Uint16 w)$/;"	f	class:RTextLine	signature:(int p, int l, Uint16 w)
RTextLine	/home/viper/projects/RBit/rdrawutil.cpp	/^struct RTextLine {$/;"	s	file:
RTextLine::RTextLine	/home/viper/projects/RBit/rdrawutil.cpp	/^    RTextLine(int pos, int len, Uint16 width);$/;"	p	struct:RTextLine	file:	access:public	signature:(int pos, int len, Uint16 width)
RTextLine::RTextLine	/home/viper/projects/RBit/rdrawutil.cpp	/^inline RTextLine::RTextLine(int p, int l, Uint16 w)$/;"	f	class:RTextLine	signature:(int p, int l, Uint16 w)
RTextLine::len	/home/viper/projects/RBit/rdrawutil.cpp	/^    int len;$/;"	m	struct:RTextLine	file:	access:public
RTextLine::pos	/home/viper/projects/RBit/rdrawutil.cpp	/^    int pos;$/;"	m	struct:RTextLine	file:	access:public
RTextLine::width	/home/viper/projects/RBit/rdrawutil.cpp	/^    Uint16 width;$/;"	m	struct:RTextLine	file:	access:public
RTextPainter	/home/viper/projects/RBit/rtextpainter.h	/^    RTextPainter(int alignment = AlignTop | AlignLeft);$/;"	p	class:RTextPainter	access:public	signature:(int alignment = AlignTop | AlignLeft)
RTextPainter	/home/viper/projects/RBit/rtextpainter.h	/^class RTextPainter$/;"	c
RTextPainter	/home/viper/projects/RBit/rtextpainter.h	/^inline RTextPainter::RTextPainter(int alignment)$/;"	f	class:RTextPainter	signature:(int alignment)
RTextPainter::RTextPainter	/home/viper/projects/RBit/rtextpainter.h	/^    RTextPainter(int alignment = AlignTop | AlignLeft);$/;"	p	class:RTextPainter	access:public	signature:(int alignment = AlignTop | AlignLeft)
RTextPainter::RTextPainter	/home/viper/projects/RBit/rtextpainter.h	/^inline RTextPainter::RTextPainter(int alignment)$/;"	f	class:RTextPainter	signature:(int alignment)
RTextPainter::font	/home/viper/projects/RBit/rtextpainter.h	/^    const RFont& font() const;$/;"	p	class:RTextPainter	access:public	signature:() const
RTextPainter::font	/home/viper/projects/RBit/rtextpainter.h	/^inline const RFont& RTextPainter::font() const$/;"	f	class:RTextPainter	signature:() const
RTextPainter::m_flags	/home/viper/projects/RBit/rtextpainter.h	/^    int   m_flags;$/;"	m	class:RTextPainter	access:private
RTextPainter::m_font	/home/viper/projects/RBit/rtextpainter.h	/^    RFont m_font;$/;"	m	class:RTextPainter	access:private
RTextPainter::setFont	/home/viper/projects/RBit/rtextpainter.h	/^    void setFont(const RFont& f);$/;"	p	class:RTextPainter	access:public	signature:(const RFont& f)
RTextPainter::setFont	/home/viper/projects/RBit/rtextpainter.h	/^inline void RTextPainter::setFont(const RFont& f)$/;"	f	class:RTextPainter	signature:(const RFont& f)
RTextPainter::setTextAlignment	/home/viper/projects/RBit/rtextpainter.h	/^    void setTextAlignment(int a);    $/;"	p	class:RTextPainter	access:public	signature:(int a)
RTextPainter::setTextAlignment	/home/viper/projects/RBit/rtextpainter.h	/^inline void RTextPainter::setTextAlignment(int a)$/;"	f	class:RTextPainter	signature:(int a)
RTextPainter::setTextFlags	/home/viper/projects/RBit/rtextpainter.h	/^    void setTextFlags(int flags);$/;"	p	class:RTextPainter	access:protected	signature:(int flags)
RTextPainter::setTextFlags	/home/viper/projects/RBit/rtextpainter.h	/^inline void RTextPainter::setTextFlags(int f)$/;"	f	class:RTextPainter	signature:(int f)
RTextPainter::textAlignment	/home/viper/projects/RBit/rtextpainter.h	/^    int	textAlignment() const;$/;"	p	class:RTextPainter	access:public	signature:() const
RTextPainter::textAlignment	/home/viper/projects/RBit/rtextpainter.h	/^inline int RTextPainter::textAlignment() const$/;"	f	class:RTextPainter	signature:() const
RTextPainter::textFlags	/home/viper/projects/RBit/rtextpainter.h	/^    int	textFlags() const;$/;"	p	class:RTextPainter	access:protected	signature:() const
RTextPainter::textFlags	/home/viper/projects/RBit/rtextpainter.h	/^inline int RTextPainter::textFlags() const$/;"	f	class:RTextPainter	signature:() const
RTextParag	/home/viper/projects/RBit/rdrawutil.cpp	/^struct RTextParag {$/;"	s	file:
RTextParag::addLine	/home/viper/projects/RBit/rdrawutil.cpp	/^    void addLine(int pos, int len, Uint16 width);$/;"	p	struct:RTextParag	file:	access:public	signature:(int pos, int len, Uint16 width)
RTextParag::addLine	/home/viper/projects/RBit/rdrawutil.cpp	/^inline void RTextParag::addLine(int p, int l, Uint16 w)$/;"	f	class:RTextParag	signature:(int p, int l, Uint16 w)
RTextParag::clearLines	/home/viper/projects/RBit/rdrawutil.cpp	/^    void clearLines();$/;"	p	struct:RTextParag	file:	access:public	signature:()
RTextParag::clearLines	/home/viper/projects/RBit/rdrawutil.cpp	/^inline void RTextParag::clearLines()$/;"	f	class:RTextParag	signature:()
RTextParag::lines	/home/viper/projects/RBit/rdrawutil.cpp	/^    std::list<RTextLine> lines;$/;"	m	struct:RTextParag	file:	access:public
RTextParag::numLines	/home/viper/projects/RBit/rdrawutil.cpp	/^    Uint32 numLines();$/;"	p	struct:RTextParag	file:	access:public	signature:()
RTextParag::numLines	/home/viper/projects/RBit/rdrawutil.cpp	/^inline Uint32 RTextParag::numLines()$/;"	f	class:RTextParag	signature:()
RUTILS_H_	/home/viper/projects/RBit/rutils.h	2;"	d
RWF_DestructiveClose	/home/viper/projects/RBit/rwidget.h	/^    RWF_DestructiveClose          = 0x0001,$/;"	e	enum:RWidgetFlags
RWF_NoBackground	/home/viper/projects/RBit/rwidget.h	/^    RWF_NoBackground              = 0x0004,     $/;"	e	enum:RWidgetFlags
RWF_ShowModal	/home/viper/projects/RBit/rwidget.h	/^    RWF_ShowModal                 = 0x0002,         $/;"	e	enum:RWidgetFlags
RWF_TransparentForMouseEvents	/home/viper/projects/RBit/rwidget.h	/^    RWF_TransparentForMouseEvents = 0x0008$/;"	e	enum:RWidgetFlags
RWFlags	/home/viper/projects/RBit/rwidget.h	/^typedef unsigned int RWFlags;$/;"	t
RWIDGET_BASE_RTTI_DECLARE	/home/viper/projects/RBit/rwidget.h	64;"	d
RWIDGET_DEFAULT_SETTINGS_H_	/home/viper/projects/RBit/rwidgetdefaultsettings.h	2;"	d
RWIDGET_H	/home/viper/projects/RBit/rwidget.h	2;"	d
RWIDGET_RTTI_DECLARE	/home/viper/projects/RBit/rsplitter.h	/^	RWIDGET_RTTI_DECLARE(RSplitter, RWidget);$/;"	p	class:RSplitter	access:private	signature:(RSplitter, RWidget)
RWIDGET_RTTI_DECLARE	/home/viper/projects/RBit/rwidget.h	72;"	d
RWINDOW_H	/home/viper/projects/RBit/rwindow.h	2;"	d
RWidget	/home/viper/projects/RBit/rwidget.cpp	/^RWidget::RWidget(RWidget* parent, RWFlags f) $/;"	f	class:RWidget	signature:(RWidget* parent, RWFlags f)
RWidget	/home/viper/projects/RBit/rwidget.h	/^    RWidget(RWidget* parent = 0, RWFlags flags = RWFlags(0));$/;"	p	class:RWidget	access:public	signature:(RWidget* parent = 0, RWFlags flags = RWFlags(0))
RWidget	/home/viper/projects/RBit/rwidget.h	/^    RWidget(const RWidget&);$/;"	p	class:RWidget	access:private	signature:(const RWidget&)
RWidget	/home/viper/projects/RBit/rwidget.h	/^class RBIT_CORE_EXPORT RWidget : public RSiblingWidgetListNode,$/;"	c	inherits:RSiblingWidgetListNode,RTabWidgetListNode
RWidget::RWidget	/home/viper/projects/RBit/rwidget.cpp	/^RWidget::RWidget(RWidget* parent, RWFlags f) $/;"	f	class:RWidget	signature:(RWidget* parent, RWFlags f)
RWidget::RWidget	/home/viper/projects/RBit/rwidget.h	/^    RWidget(RWidget* parent = 0, RWFlags flags = RWFlags(0));$/;"	p	class:RWidget	access:public	signature:(RWidget* parent = 0, RWFlags flags = RWFlags(0))
RWidget::RWidget	/home/viper/projects/RBit/rwidget.h	/^    RWidget(const RWidget&);$/;"	p	class:RWidget	access:private	signature:(const RWidget&)
RWidget::backgroundRole	/home/viper/projects/RBit/rwidget.cpp	/^RPalette::ColorRole RWidget::backgroundRole() const$/;"	f	class:RWidget	signature:() const
RWidget::backgroundRole	/home/viper/projects/RBit/rwidget.h	/^    RPalette::ColorRole backgroundRole() const;$/;"	p	class:RWidget	access:public	signature:() const
RWidget::childAt	/home/viper/projects/RBit/rwidget.cpp	/^RWidget* RWidget::childAt(const RPoint& p) const$/;"	f	class:RWidget	signature:(const RPoint& p) const
RWidget::childAt	/home/viper/projects/RBit/rwidget.h	/^    RWidget* childAt(Sint16 x, Sint16 y) const;$/;"	p	class:RWidget	access:public	signature:(Sint16 x, Sint16 y) const
RWidget::childAt	/home/viper/projects/RBit/rwidget.h	/^    RWidget* childAt(const RPoint& p) const;  $/;"	p	class:RWidget	access:public	signature:(const RPoint& p) const
RWidget::childAt	/home/viper/projects/RBit/rwidget.h	/^inline RWidget* RWidget::childAt(Sint16 x, Sint16 y) const$/;"	f	class:RWidget	signature:(Sint16 x, Sint16 y) const
RWidget::clearWFlags	/home/viper/projects/RBit/rwidget.h	/^    void clearWFlags(RWFlags f);$/;"	p	class:RWidget	access:public	signature:(RWFlags f)
RWidget::clearWFlags	/home/viper/projects/RBit/rwidget.h	/^inline void RWidget::clearWFlags(RWFlags f)$/;"	f	class:RWidget	signature:(RWFlags f)
RWidget::close	/home/viper/projects/RBit/rwidget.cpp	/^bool RWidget::close(bool forcibly)$/;"	f	class:RWidget	signature:(bool forcibly)
RWidget::close	/home/viper/projects/RBit/rwidget.h	/^    bool close();$/;"	p	class:RWidget	access:public	signature:()
RWidget::close	/home/viper/projects/RBit/rwidget.h	/^    bool close(bool forcibly);$/;"	p	class:RWidget	access:private	signature:(bool forcibly)
RWidget::close	/home/viper/projects/RBit/rwidget.h	/^inline bool RWidget::close()$/;"	f	class:RWidget	signature:()
RWidget::close_helper	/home/viper/projects/RBit/rwidget.cpp	/^bool RWidget::close_helper(bool forcibly)$/;"	f	class:RWidget	signature:(bool forcibly)
RWidget::close_helper	/home/viper/projects/RBit/rwidget.h	/^    bool close_helper(bool forcibly);$/;"	p	class:RWidget	access:private	signature:(bool forcibly)
RWidget::defaultPalette	/home/viper/projects/RBit/rwidget.cpp	/^RPalette RWidget::defaultPalette() const$/;"	f	class:RWidget	signature:() const
RWidget::defaultPalette	/home/viper/projects/RBit/rwidget.h	/^    RPalette defaultPalette() const;    $/;"	p	class:RWidget	access:protected	signature:() const
RWidget::deleteLater	/home/viper/projects/RBit/rwidget.cpp	/^void RWidget::deleteLater()$/;"	f	class:RWidget	signature:()
RWidget::deleteLater	/home/viper/projects/RBit/rwidget.h	/^    void deleteLater();$/;"	p	class:RWidget	access:protected	signature:()
RWidget::enableFocus	/home/viper/projects/RBit/rwidget.h	/^    void enableFocus(bool enable);$/;"	p	class:RWidget	access:public	signature:(bool enable)
RWidget::enableFocus	/home/viper/projects/RBit/rwidget.h	/^inline void RWidget::enableFocus(bool enable)$/;"	f	class:RWidget	signature:(bool enable)
RWidget::eventClose	/home/viper/projects/RBit/rwidget.cpp	/^bool RWidget::eventClose()$/;"	f	class:RWidget	signature:()
RWidget::eventClose	/home/viper/projects/RBit/rwidget.h	/^    virtual bool eventClose();$/;"	p	class:RWidget	access:protected	signature:()
RWidget::eventFocusLost	/home/viper/projects/RBit/rwidget.cpp	/^void RWidget::eventFocusLost()$/;"	f	class:RWidget	signature:()
RWidget::eventFocusLost	/home/viper/projects/RBit/rwidget.h	/^    virtual void eventFocusLost();$/;"	p	class:RWidget	access:protected	signature:()
RWidget::eventFocusSet	/home/viper/projects/RBit/rwidget.cpp	/^void RWidget::eventFocusSet()$/;"	f	class:RWidget	signature:()
RWidget::eventFocusSet	/home/viper/projects/RBit/rwidget.h	/^    virtual void eventFocusSet();$/;"	p	class:RWidget	access:protected	signature:()
RWidget::eventHide	/home/viper/projects/RBit/rwidget.cpp	/^void RWidget::eventHide()$/;"	f	class:RWidget	signature:()
RWidget::eventHide	/home/viper/projects/RBit/rwidget.h	/^    virtual void eventHide();$/;"	p	class:RWidget	access:protected	signature:()
RWidget::eventIdle	/home/viper/projects/RBit/rwidget.cpp	/^void RWidget::eventIdle()$/;"	f	class:RWidget	signature:()
RWidget::eventIdle	/home/viper/projects/RBit/rwidget.h	/^    virtual void eventIdle();$/;"	p	class:RWidget	access:protected	signature:()
RWidget::eventKeyDown	/home/viper/projects/RBit/rwidget.cpp	/^bool RWidget::eventKeyDown(const SDL_keysym& key, bool)$/;"	f	class:RWidget	signature:(const SDL_keysym& key, bool)
RWidget::eventKeyDown	/home/viper/projects/RBit/rwidget.h	/^    virtual bool eventKeyDown(const SDL_keysym& key, bool autoRepeat);$/;"	p	class:RWidget	access:protected	signature:(const SDL_keysym& key, bool autoRepeat)
RWidget::eventKeyUp	/home/viper/projects/RBit/rwidget.cpp	/^bool RWidget::eventKeyUp(const SDL_keysym&, bool)$/;"	f	class:RWidget	signature:(const SDL_keysym&, bool)
RWidget::eventKeyUp	/home/viper/projects/RBit/rwidget.h	/^    virtual bool eventKeyUp(const SDL_keysym& key, bool autoRepeat);$/;"	p	class:RWidget	access:protected	signature:(const SDL_keysym& key, bool autoRepeat)
RWidget::eventMouseDown	/home/viper/projects/RBit/rwidget.cpp	/^void RWidget::eventMouseDown(const SDL_MouseButtonEvent& m)$/;"	f	class:RWidget	signature:(const SDL_MouseButtonEvent& m)
RWidget::eventMouseDown	/home/viper/projects/RBit/rwidget.h	/^    virtual void eventMouseDown(const SDL_MouseButtonEvent&);$/;"	p	class:RWidget	access:protected	signature:(const SDL_MouseButtonEvent&)
RWidget::eventMouseMove	/home/viper/projects/RBit/rwidget.cpp	/^void RWidget::eventMouseMove(const SDL_MouseMotionEvent&)$/;"	f	class:RWidget	signature:(const SDL_MouseMotionEvent&)
RWidget::eventMouseMove	/home/viper/projects/RBit/rwidget.h	/^    virtual void eventMouseMove(const SDL_MouseMotionEvent&);$/;"	p	class:RWidget	access:protected	signature:(const SDL_MouseMotionEvent&)
RWidget::eventMouseUp	/home/viper/projects/RBit/rwidget.cpp	/^void RWidget::eventMouseUp(const SDL_MouseButtonEvent&)$/;"	f	class:RWidget	signature:(const SDL_MouseButtonEvent&)
RWidget::eventMouseUp	/home/viper/projects/RBit/rwidget.h	/^    virtual void eventMouseUp(const SDL_MouseButtonEvent&);$/;"	p	class:RWidget	access:protected	signature:(const SDL_MouseButtonEvent&)
RWidget::eventScreenChanged	/home/viper/projects/RBit/rwidget.cpp	/^void RWidget::eventScreenChanged()$/;"	f	class:RWidget	signature:()
RWidget::eventScreenChanged	/home/viper/projects/RBit/rwidget.h	/^    virtual void eventScreenChanged();$/;"	p	class:RWidget	access:protected	signature:()
RWidget::eventShow	/home/viper/projects/RBit/rwidget.cpp	/^void RWidget::eventShow()$/;"	f	class:RWidget	signature:()
RWidget::eventShow	/home/viper/projects/RBit/rwidget.h	/^    virtual void eventShow();$/;"	p	class:RWidget	access:protected	signature:()
RWidget::firstChildWidget	/home/viper/projects/RBit/rwidget.h	/^    RWidget* firstChildWidget() const;$/;"	p	class:RWidget	access:public	signature:() const
RWidget::firstChildWidget	/home/viper/projects/RBit/rwidget.h	/^inline RWidget* RWidget::firstChildWidget() const$/;"	f	class:RWidget	signature:() const
RWidget::focusNextChildWidget	/home/viper/projects/RBit/rwidget.h	/^    bool focusNextChildWidget();$/;"	p	class:RWidget	access:protected	signature:()
RWidget::focusNextChildWidget	/home/viper/projects/RBit/rwidget.h	/^inline bool RWidget::focusNextChildWidget()$/;"	f	class:RWidget	signature:()
RWidget::focusNextPrevChildWidget	/home/viper/projects/RBit/rwidget.cpp	/^bool RWidget::focusNextPrevChildWidget(bool next)$/;"	f	class:RWidget	signature:(bool next)
RWidget::focusNextPrevChildWidget	/home/viper/projects/RBit/rwidget.h	/^    virtual bool focusNextPrevChildWidget(bool next);    $/;"	p	class:RWidget	access:protected	signature:(bool next)
RWidget::focusPrevChildWidget	/home/viper/projects/RBit/rwidget.h	/^    bool focusPrevChildWidget();$/;"	p	class:RWidget	access:protected	signature:()
RWidget::focusPrevChildWidget	/home/viper/projects/RBit/rwidget.h	/^inline bool RWidget::focusPrevChildWidget()$/;"	f	class:RWidget	signature:()
RWidget::foregroundRole	/home/viper/projects/RBit/rwidget.cpp	/^RPalette::ColorRole RWidget::foregroundRole() const$/;"	f	class:RWidget	signature:() const
RWidget::foregroundRole	/home/viper/projects/RBit/rwidget.h	/^    RPalette::ColorRole foregroundRole() const;$/;"	p	class:RWidget	access:public	signature:() const
RWidget::geometry	/home/viper/projects/RBit/rwidget.h	/^    const RRect& geometry() const;  $/;"	p	class:RWidget	access:public	signature:() const
RWidget::geometry	/home/viper/projects/RBit/rwidget.h	/^inline const RRect& RWidget::geometry() const$/;"	f	class:RWidget	signature:() const
RWidget::getWFlags	/home/viper/projects/RBit/rwidget.h	/^    RWFlags getWFlags() const;$/;"	p	class:RWidget	access:public	signature:() const
RWidget::getWFlags	/home/viper/projects/RBit/rwidget.h	/^inline RWFlags RWidget::getWFlags() const$/;"	f	class:RWidget	signature:() const
RWidget::grabMouse	/home/viper/projects/RBit/rwidget.h	/^    void grabMouse();$/;"	p	class:RWidget	access:public	signature:()
RWidget::grabMouse	/home/viper/projects/RBit/rwidget.h	/^inline void RWidget::grabMouse()$/;"	f	class:RWidget	signature:()
RWidget::hasFocus	/home/viper/projects/RBit/rwidget.h	/^    bool hasFocus() const;$/;"	p	class:RWidget	access:public	signature:() const
RWidget::hasFocus	/home/viper/projects/RBit/rwidget.h	/^inline bool RWidget::hasFocus() const$/;"	f	class:RWidget	signature:() const
RWidget::height	/home/viper/projects/RBit/rwidget.h	/^    Uint16 height() const;$/;"	p	class:RWidget	access:public	signature:() const
RWidget::height	/home/viper/projects/RBit/rwidget.h	/^inline Uint16 RWidget::height() const$/;"	f	class:RWidget	signature:() const
RWidget::hide	/home/viper/projects/RBit/rwidget.cpp	/^void RWidget::hide()$/;"	f	class:RWidget	signature:()
RWidget::hide	/home/viper/projects/RBit/rwidget.cpp	/^void RWidget::hide(bool explicitly)$/;"	f	class:RWidget	signature:(bool explicitly)
RWidget::hide	/home/viper/projects/RBit/rwidget.h	/^    void hide();    $/;"	p	class:RWidget	access:public	signature:()
RWidget::hide	/home/viper/projects/RBit/rwidget.h	/^    void hide(bool explicitly);$/;"	p	class:RWidget	access:private	signature:(bool explicitly)
RWidget::inherits	/home/viper/projects/RBit/rwidget.h	/^    bool inherits(const char* className) const;$/;"	p	class:RWidget	access:public	signature:(const char* className) const
RWidget::inherits	/home/viper/projects/RBit/rwidget.h	/^inline bool RWidget::inherits(const char* className) const$/;"	f	class:RWidget	signature:(const char* className) const
RWidget::isAncestorWidgetOf	/home/viper/projects/RBit/rwidget.h	/^    bool isAncestorWidgetOf(const RWidget*) const;$/;"	p	class:RWidget	access:public	signature:(const RWidget*) const
RWidget::isAncestorWidgetOf	/home/viper/projects/RBit/rwidget.h	/^inline bool RWidget::isAncestorWidgetOf(const RWidget* w) const$/;"	f	class:RWidget	signature:(const RWidget* w) const
RWidget::isDescendantWidgetOf	/home/viper/projects/RBit/rwidget.cpp	/^bool RWidget::isDescendantWidgetOf(const RWidget* widget) const$/;"	f	class:RWidget	signature:(const RWidget* widget) const
RWidget::isDescendantWidgetOf	/home/viper/projects/RBit/rwidget.h	/^    bool isDescendantWidgetOf(const RWidget*) const;$/;"	p	class:RWidget	access:public	signature:(const RWidget*) const
RWidget::isEnabled	/home/viper/projects/RBit/rwidget.h	/^    bool isEnabled() const;$/;"	p	class:RWidget	access:public	signature:() const
RWidget::isEnabled	/home/viper/projects/RBit/rwidget.h	/^inline bool RWidget::isEnabled() const$/;"	f	class:RWidget	signature:() const
RWidget::isFocusEnabled	/home/viper/projects/RBit/rwidget.h	/^    bool isFocusEnabled() const;     $/;"	p	class:RWidget	access:public	signature:() const
RWidget::isFocusEnabled	/home/viper/projects/RBit/rwidget.h	/^inline bool RWidget::isFocusEnabled() const$/;"	f	class:RWidget	signature:() const
RWidget::isHidden	/home/viper/projects/RBit/rwidget.h	/^    bool isHidden() const;$/;"	p	class:RWidget	access:public	signature:() const
RWidget::isHidden	/home/viper/projects/RBit/rwidget.h	/^inline bool RWidget::isHidden() const$/;"	f	class:RWidget	signature:() const
RWidget::isInputEnabled	/home/viper/projects/RBit/rwidget.cpp	/^bool RWidget::isInputEnabled() const$/;"	f	class:RWidget	signature:() const
RWidget::isInputEnabled	/home/viper/projects/RBit/rwidget.h	/^    bool isInputEnabled() const;$/;"	p	class:RWidget	access:public	signature:() const
RWidget::isModal	/home/viper/projects/RBit/rwidget.h	/^    bool isModal() const;$/;"	p	class:RWidget	access:public	signature:() const
RWidget::isModal	/home/viper/projects/RBit/rwidget.h	/^inline bool RWidget::isModal() const$/;"	f	class:RWidget	signature:() const
RWidget::isTopLevel	/home/viper/projects/RBit/rwidget.h	/^    bool isTopLevel() const;    $/;"	p	class:RWidget	access:public	signature:() const
RWidget::isTopLevel	/home/viper/projects/RBit/rwidget.h	/^inline bool RWidget::isTopLevel() const$/;"	f	class:RWidget	signature:() const
RWidget::isVisible	/home/viper/projects/RBit/rwidget.h	/^    bool isVisible() const;$/;"	p	class:RWidget	access:public	signature:() const
RWidget::isVisible	/home/viper/projects/RBit/rwidget.h	/^inline bool RWidget::isVisible() const$/;"	f	class:RWidget	signature:() const
RWidget::lastChildWidget	/home/viper/projects/RBit/rwidget.h	/^    RWidget* lastChildWidget() const;$/;"	p	class:RWidget	access:public	signature:() const
RWidget::lastChildWidget	/home/viper/projects/RBit/rwidget.h	/^inline RWidget* RWidget::lastChildWidget() const$/;"	f	class:RWidget	signature:() const
RWidget::lower	/home/viper/projects/RBit/rwidget.cpp	/^void RWidget::lower()$/;"	f	class:RWidget	signature:()
RWidget::lower	/home/viper/projects/RBit/rwidget.h	/^    void lower();$/;"	p	class:RWidget	access:public	signature:()
RWidget::m_children	/home/viper/projects/RBit/rwidget.h	/^    RSiblingWidgetList   m_children;$/;"	m	class:RWidget	access:private
RWidget::m_geometry	/home/viper/projects/RBit/rwidget.h	/^    RRect                m_geometry;    $/;"	m	class:RWidget	access:private
RWidget::m_opacity	/home/viper/projects/RBit/rwidget.h	/^    Uint8                m_opacity;$/;"	m	class:RWidget	access:private
RWidget::m_palette	/home/viper/projects/RBit/rwidget.h	/^    RPalette             m_palette;$/;"	m	class:RWidget	access:private
RWidget::m_parent	/home/viper/projects/RBit/rwidget.h	/^    RWidget*             m_parent;$/;"	m	class:RWidget	access:private
RWidget::m_widgetFlags	/home/viper/projects/RBit/rwidget.h	/^    RWFlags              m_widgetFlags;$/;"	m	class:RWidget	access:private
RWidget::mapFrom	/home/viper/projects/RBit/rwidget.h	/^    RPoint mapFrom(RWidget* parent, const RPoint& pos) const;$/;"	p	class:RWidget	access:public	signature:(RWidget* parent, const RPoint& pos) const
RWidget::mapFromGlobal	/home/viper/projects/RBit/rwidget.cpp	/^RPoint RWidget::mapFromGlobal(const RPoint& pos) const$/;"	f	class:RWidget	signature:(const RPoint& pos) const
RWidget::mapFromGlobal	/home/viper/projects/RBit/rwidget.h	/^    RPoint mapFromGlobal(const RPoint& pos) const;$/;"	p	class:RWidget	access:public	signature:(const RPoint& pos) const
RWidget::mapFromParent	/home/viper/projects/RBit/rwidget.h	/^    RPoint mapFromParent (const RPoint& pos) const;$/;"	p	class:RWidget	access:public	signature:(const RPoint& pos) const
RWidget::mapFromParent	/home/viper/projects/RBit/rwidget.h	/^inline RPoint RWidget::mapFromParent(const RPoint& p) const$/;"	f	class:RWidget	signature:(const RPoint& p) const
RWidget::mapTo	/home/viper/projects/RBit/rwidget.cpp	/^RPoint RWidget::mapTo(RWidget* parent, const RPoint& pos) const$/;"	f	class:RWidget	signature:(RWidget* parent, const RPoint& pos) const
RWidget::mapTo	/home/viper/projects/RBit/rwidget.h	/^    RPoint mapTo(RWidget* parent, const RPoint& pos) const;$/;"	p	class:RWidget	access:public	signature:(RWidget* parent, const RPoint& pos) const
RWidget::mapToGlobal	/home/viper/projects/RBit/rwidget.cpp	/^RPoint RWidget::mapToGlobal(const RPoint &pos) const$/;"	f	class:RWidget	signature:(const RPoint &pos) const
RWidget::mapToGlobal	/home/viper/projects/RBit/rwidget.h	/^    RPoint mapToGlobal(const RPoint& pos) const;$/;"	p	class:RWidget	access:public	signature:(const RPoint& pos) const
RWidget::mapToParent	/home/viper/projects/RBit/rwidget.h	/^    RPoint mapToParent(const RPoint& pos) const;$/;"	p	class:RWidget	access:public	signature:(const RPoint& pos) const
RWidget::mapToParent	/home/viper/projects/RBit/rwidget.h	/^inline RPoint RWidget::mapToParent(const RPoint& p) const$/;"	f	class:RWidget	signature:(const RPoint& p) const
RWidget::mouseGrabbed	/home/viper/projects/RBit/rwidget.h	/^    bool mouseGrabbed() const;$/;"	p	class:RWidget	access:public	signature:() const
RWidget::mouseGrabbed	/home/viper/projects/RBit/rwidget.h	/^inline bool RWidget::mouseGrabbed() const$/;"	f	class:RWidget	signature:() const
RWidget::mouseTrackingEnabled	/home/viper/projects/RBit/rwidget.h	/^	bool mouseTrackingEnabled() const;$/;"	p	class:RWidget	access:public	signature:() const
RWidget::mouseTrackingEnabled	/home/viper/projects/RBit/rwidget.h	/^inline bool RWidget::mouseTrackingEnabled() const$/;"	f	class:RWidget	signature:() const
RWidget::naturalPalette	/home/viper/projects/RBit/rwidget.cpp	/^RPalette RWidget::naturalPalette(RWidget* w)$/;"	f	class:RWidget	signature:(RWidget* w)
RWidget::naturalPalette	/home/viper/projects/RBit/rwidget.h	/^    static RPalette naturalPalette(RWidget* w);$/;"	p	class:RWidget	access:private	signature:(RWidget* w)
RWidget::nextSiblingWidget	/home/viper/projects/RBit/rwidget.h	/^    RWidget* nextSiblingWidget() const;$/;"	p	class:RWidget	access:public	signature:() const
RWidget::nextSiblingWidget	/home/viper/projects/RBit/rwidget.h	/^inline RWidget* RWidget::nextSiblingWidget() const$/;"	f	class:RWidget	signature:() const
RWidget::nextTabWidget	/home/viper/projects/RBit/rwidget.h	/^    RWidget* nextTabWidget() const;$/;"	p	class:RWidget	access:public	signature:() const
RWidget::nextTabWidget	/home/viper/projects/RBit/rwidget.h	/^inline RWidget* RWidget::nextTabWidget() const$/;"	f	class:RWidget	signature:() const
RWidget::operator =	/home/viper/projects/RBit/rwidget.h	/^    RWidget& operator=(const RWidget&);$/;"	p	class:RWidget	access:private	signature:(const RWidget&)
RWidget::palette	/home/viper/projects/RBit/rwidget.cpp	/^const RPalette& RWidget::palette() const$/;"	f	class:RWidget	signature:() const
RWidget::palette	/home/viper/projects/RBit/rwidget.h	/^    const RPalette& palette() const;$/;"	p	class:RWidget	access:public	signature:() const
RWidget::parentWidget	/home/viper/projects/RBit/rwidget.h	/^    RWidget* parentWidget() const;$/;"	p	class:RWidget	access:public	signature:() const
RWidget::parentWidget	/home/viper/projects/RBit/rwidget.h	/^inline RWidget* RWidget::parentWidget() const$/;"	f	class:RWidget	signature:() const
RWidget::pos	/home/viper/projects/RBit/rwidget.h	/^    RPoint pos() const;$/;"	p	class:RWidget	access:public	signature:() const
RWidget::pos	/home/viper/projects/RBit/rwidget.h	/^inline RPoint RWidget::pos() const$/;"	f	class:RWidget	signature:() const
RWidget::prevSiblingWidget	/home/viper/projects/RBit/rwidget.h	/^    RWidget* prevSiblingWidget() const;$/;"	p	class:RWidget	access:public	signature:() const
RWidget::prevSiblingWidget	/home/viper/projects/RBit/rwidget.h	/^inline RWidget* RWidget::prevSiblingWidget() const$/;"	f	class:RWidget	signature:() const
RWidget::prevTabWidget	/home/viper/projects/RBit/rwidget.h	/^    RWidget* prevTabWidget() const;$/;"	p	class:RWidget	access:public	signature:() const
RWidget::prevTabWidget	/home/viper/projects/RBit/rwidget.h	/^inline RWidget* RWidget::prevTabWidget() const$/;"	f	class:RWidget	signature:() const
RWidget::propagatePaletteChange	/home/viper/projects/RBit/rwidget.cpp	/^void RWidget::propagatePaletteChange()$/;"	f	class:RWidget	signature:()
RWidget::propagatePaletteChange	/home/viper/projects/RBit/rwidget.h	/^    void propagatePaletteChange();$/;"	p	class:RWidget	access:private	signature:()
RWidget::propogateUpdatePendingFlag	/home/viper/projects/RBit/rwidget.cpp	/^void RWidget::propogateUpdatePendingFlag(const RRect& r, bool upper)$/;"	f	class:RWidget	signature:(const RRect& r, bool upper)
RWidget::propogateUpdatePendingFlag	/home/viper/projects/RBit/rwidget.h	/^    void propogateUpdatePendingFlag(const RRect& r, bool upper);$/;"	p	class:RWidget	access:private	signature:(const RRect& r, bool upper)
RWidget::raise	/home/viper/projects/RBit/rwidget.cpp	/^void RWidget::raise()$/;"	f	class:RWidget	signature:()
RWidget::raise	/home/viper/projects/RBit/rwidget.h	/^    void raise();$/;"	p	class:RWidget	access:public	signature:()
RWidget::rect	/home/viper/projects/RBit/rwidget.h	/^    RRect rect() const;$/;"	p	class:RWidget	access:public	signature:() const
RWidget::rect	/home/viper/projects/RBit/rwidget.h	/^inline RRect RWidget::rect() const$/;"	f	class:RWidget	signature:() const
RWidget::registerWidget	/home/viper/projects/RBit/rwidget.h	/^    void registerWidget();$/;"	p	class:RWidget	access:private	signature:()
RWidget::registerWidget	/home/viper/projects/RBit/rwidget.h	/^inline void RWidget::registerWidget()$/;"	f	class:RWidget	signature:()
RWidget::releaseMouse	/home/viper/projects/RBit/rwidget.h	/^    void releaseMouse();$/;"	p	class:RWidget	access:public	signature:()
RWidget::releaseMouse	/home/viper/projects/RBit/rwidget.h	/^inline void RWidget::releaseMouse()$/;"	f	class:RWidget	signature:()
RWidget::repaint	/home/viper/projects/RBit/rwidget.cpp	/^void RWidget::repaint(const RRect& r)$/;"	f	class:RWidget	signature:(const RRect& r)
RWidget::repaint	/home/viper/projects/RBit/rwidget.h	/^    void repaint();$/;"	p	class:RWidget	access:public	signature:()
RWidget::repaint	/home/viper/projects/RBit/rwidget.h	/^    void repaint(const RRect& r);$/;"	p	class:RWidget	access:public	signature:(const RRect& r)
RWidget::repaint	/home/viper/projects/RBit/rwidget.h	/^inline void RWidget::repaint()$/;"	f	class:RWidget	signature:()
RWidget::repaintImpl	/home/viper/projects/RBit/rwidget.cpp	/^void RWidget::repaintImpl(const RRect&)$/;"	f	class:RWidget	signature:(const RRect&)
RWidget::repaintImpl	/home/viper/projects/RBit/rwidget.h	/^    virtual void repaintImpl(const RRect& rect);$/;"	p	class:RWidget	access:protected	signature:(const RRect& rect)
RWidget::resolvePalette	/home/viper/projects/RBit/rwidget.cpp	/^void RWidget::resolvePalette()$/;"	f	class:RWidget	signature:()
RWidget::resolvePalette	/home/viper/projects/RBit/rwidget.h	/^    void resolvePalette();$/;"	p	class:RWidget	access:private	signature:()
RWidget::screen	/home/viper/projects/RBit/rwidget.h	/^    SDL_Surface* screen();$/;"	p	class:RWidget	access:protected	signature:()
RWidget::screen	/home/viper/projects/RBit/rwidget.h	/^inline SDL_Surface* RWidget::screen()$/;"	f	class:RWidget	signature:()
RWidget::setBackgroundRole	/home/viper/projects/RBit/rwidget.cpp	/^void RWidget::setBackgroundRole(RPalette::ColorRole role)$/;"	f	class:RWidget	signature:(RPalette::ColorRole role)
RWidget::setBackgroundRole	/home/viper/projects/RBit/rwidget.h	/^    void setBackgroundRole(RPalette::ColorRole);$/;"	p	class:RWidget	access:public	signature:(RPalette::ColorRole)
RWidget::setEnabled	/home/viper/projects/RBit/rwidget.cpp	/^void RWidget::setEnabled(bool enabled)$/;"	f	class:RWidget	signature:(bool enabled)
RWidget::setEnabled	/home/viper/projects/RBit/rwidget.h	/^    void setEnabled(bool enabled);$/;"	p	class:RWidget	access:public	signature:(bool enabled)
RWidget::setEnabled_helper	/home/viper/projects/RBit/rwidget.cpp	/^void RWidget::setEnabled_helper(bool enabled)$/;"	f	class:RWidget	signature:(bool enabled)
RWidget::setEnabled_helper	/home/viper/projects/RBit/rwidget.h	/^    void setEnabled_helper(bool enabled);$/;"	p	class:RWidget	access:private	signature:(bool enabled)
RWidget::setFocus	/home/viper/projects/RBit/rwidget.h	/^    void setFocus();$/;"	p	class:RWidget	access:public	signature:()
RWidget::setFocus	/home/viper/projects/RBit/rwidget.h	/^inline void RWidget::setFocus()$/;"	f	class:RWidget	signature:()
RWidget::setForegroundRole	/home/viper/projects/RBit/rwidget.cpp	/^void RWidget::setForegroundRole(RPalette::ColorRole role)$/;"	f	class:RWidget	signature:(RPalette::ColorRole role)
RWidget::setForegroundRole	/home/viper/projects/RBit/rwidget.h	/^    void setForegroundRole(RPalette::ColorRole);$/;"	p	class:RWidget	access:public	signature:(RPalette::ColorRole)
RWidget::setGeometry	/home/viper/projects/RBit/rwidget.cpp	/^void RWidget::setGeometry(const RPoint& p, const RSize& s)$/;"	f	class:RWidget	signature:(const RPoint& p, const RSize& s)
RWidget::setGeometry	/home/viper/projects/RBit/rwidget.h	/^    virtual void setGeometry(const RPoint& p, const RSize& s);$/;"	p	class:RWidget	access:public	signature:(const RPoint& p, const RSize& s)
RWidget::setGeometry	/home/viper/projects/RBit/rwidget.h	/^    void setGeometry(const RRect& r);$/;"	p	class:RWidget	access:public	signature:(const RRect& r)
RWidget::setGeometry	/home/viper/projects/RBit/rwidget.h	/^inline void RWidget::setGeometry(const RRect& g)$/;"	f	class:RWidget	signature:(const RRect& g)
RWidget::setMouseTrackingEnabled	/home/viper/projects/RBit/rwidget.h	/^    void setMouseTrackingEnabled(bool enabled);			\/* ‡ÁÂ¯‡ÂÚ ÎÓ‚ËÚ¸ „ÎÓ·‡Î¸ÌÓÂ ‰‚ËÊÂÌËÂ Ï˚¯¸˛ (‚ ‚Ë‰ÊËÚÂ Ó·‡·ÓÚÍ‡)*\/$/;"	p	class:RWidget	access:public	signature:(bool enabled)
RWidget::setMouseTrackingEnabled	/home/viper/projects/RBit/rwidget.h	/^inline void RWidget::setMouseTrackingEnabled(bool enabled)$/;"	f	class:RWidget	signature:(bool enabled)
RWidget::setPalette	/home/viper/projects/RBit/rwidget.cpp	/^void RWidget::setPalette(const RPalette& pal)$/;"	f	class:RWidget	signature:(const RPalette& pal)
RWidget::setPalette	/home/viper/projects/RBit/rwidget.h	/^    void setPalette(const RPalette&);$/;"	p	class:RWidget	access:public	signature:(const RPalette&)
RWidget::setPos	/home/viper/projects/RBit/rwidget.h	/^    void setPos(Sint16 x, Sint16 y);$/;"	p	class:RWidget	access:public	signature:(Sint16 x, Sint16 y)
RWidget::setPos	/home/viper/projects/RBit/rwidget.h	/^    void setPos(const RPoint& p);$/;"	p	class:RWidget	access:public	signature:(const RPoint& p)
RWidget::setPos	/home/viper/projects/RBit/rwidget.h	/^inline void RWidget::setPos(Sint16 x, Sint16 y)$/;"	f	class:RWidget	signature:(Sint16 x, Sint16 y)
RWidget::setPos	/home/viper/projects/RBit/rwidget.h	/^inline void RWidget::setPos(const RPoint& p)$/;"	f	class:RWidget	signature:(const RPoint& p)
RWidget::setSize	/home/viper/projects/RBit/rwidget.h	/^    void setSize(Uint16 w, Uint16 h);$/;"	p	class:RWidget	access:public	signature:(Uint16 w, Uint16 h)
RWidget::setSize	/home/viper/projects/RBit/rwidget.h	/^    void setSize(const RSize& s);$/;"	p	class:RWidget	access:public	signature:(const RSize& s)
RWidget::setSize	/home/viper/projects/RBit/rwidget.h	/^inline void RWidget::setSize(Uint16 w, Uint16 h)$/;"	f	class:RWidget	signature:(Uint16 w, Uint16 h)
RWidget::setSize	/home/viper/projects/RBit/rwidget.h	/^inline void RWidget::setSize(const RSize& s)$/;"	f	class:RWidget	signature:(const RSize& s)
RWidget::setTabOrder	/home/viper/projects/RBit/rwidget.h	/^    static void setTabOrder(RWidget* a, RWidget* b);$/;"	p	class:RWidget	access:public	signature:(RWidget* a, RWidget* b)
RWidget::setTabOrder	/home/viper/projects/RBit/rwidget.h	/^inline void RWidget::setTabOrder(RWidget* a, RWidget* b)$/;"	f	class:RWidget	signature:(RWidget* a, RWidget* b)
RWidget::setUpdatesEnabled	/home/viper/projects/RBit/rwidget.cpp	/^void RWidget::setUpdatesEnabled(bool enable)$/;"	f	class:RWidget	signature:(bool enable)
RWidget::setUpdatesEnabled	/home/viper/projects/RBit/rwidget.h	/^    void setUpdatesEnabled(bool enabled);$/;"	p	class:RWidget	access:public	signature:(bool enabled)
RWidget::setUpdatesEnabled_helper	/home/viper/projects/RBit/rwidget.cpp	/^void RWidget::setUpdatesEnabled_helper(bool enable)$/;"	f	class:RWidget	signature:(bool enable)
RWidget::setUpdatesEnabled_helper	/home/viper/projects/RBit/rwidget.h	/^    void setUpdatesEnabled_helper(bool enabled);$/;"	p	class:RWidget	access:private	signature:(bool enabled)
RWidget::setVisible	/home/viper/projects/RBit/rwidget.h	/^    void setVisible(bool visible);$/;"	p	class:RWidget	access:public	signature:(bool visible)
RWidget::setVisible	/home/viper/projects/RBit/rwidget.h	/^inline void RWidget::setVisible(bool visible)$/;"	f	class:RWidget	signature:(bool visible)
RWidget::setWFlags	/home/viper/projects/RBit/rwidget.h	/^    void setWFlags(RWFlags f);$/;"	p	class:RWidget	access:public	signature:(RWFlags f)
RWidget::setWFlags	/home/viper/projects/RBit/rwidget.h	/^inline void RWidget::setWFlags(RWFlags f) $/;"	f	class:RWidget	signature:(RWFlags f)
RWidget::setWidgetOpacity	/home/viper/projects/RBit/rwidget.cpp	/^void RWidget::setWidgetOpacity(Uint8 level)$/;"	f	class:RWidget	signature:(Uint8 level)
RWidget::setWidgetOpacity	/home/viper/projects/RBit/rwidget.h	/^    void setWidgetOpacity(Uint8 level);$/;"	p	class:RWidget	access:public	signature:(Uint8 level)
RWidget::show	/home/viper/projects/RBit/rwidget.cpp	/^void RWidget::show()$/;"	f	class:RWidget	signature:()
RWidget::show	/home/viper/projects/RBit/rwidget.h	/^    void show();$/;"	p	class:RWidget	access:public	signature:()
RWidget::size	/home/viper/projects/RBit/rwidget.h	/^    RSize size() const;$/;"	p	class:RWidget	access:public	signature:() const
RWidget::size	/home/viper/projects/RBit/rwidget.h	/^inline RSize RWidget::size() const$/;"	f	class:RWidget	signature:() const
RWidget::stackUnder	/home/viper/projects/RBit/rwidget.cpp	/^void RWidget::stackUnder(RWidget* w)$/;"	f	class:RWidget	signature:(RWidget* w)
RWidget::stackUnder	/home/viper/projects/RBit/rwidget.h	/^    void stackUnder(RWidget* w);$/;"	p	class:RWidget	access:public	signature:(RWidget* w)
RWidget::testWFlags	/home/viper/projects/RBit/rwidget.h	/^    RWFlags testWFlags(RWFlags f) const;    $/;"	p	class:RWidget	access:public	signature:(RWFlags f) const
RWidget::testWFlags	/home/viper/projects/RBit/rwidget.h	/^inline RWFlags RWidget::testWFlags(RWFlags f) const$/;"	f	class:RWidget	signature:(RWFlags f) const
RWidget::topLevelWidget	/home/viper/projects/RBit/rwidget.cpp	/^RWidget* RWidget::topLevelWidget() const$/;"	f	class:RWidget	signature:() const
RWidget::topLevelWidget	/home/viper/projects/RBit/rwidget.h	/^    RWidget* topLevelWidget() const;$/;"	p	class:RWidget	access:public	signature:() const
RWidget::unregisterWidget	/home/viper/projects/RBit/rwidget.cpp	/^void RWidget::unregisterWidget()$/;"	f	class:RWidget	signature:()
RWidget::unregisterWidget	/home/viper/projects/RBit/rwidget.h	/^    void unregisterWidget();$/;"	p	class:RWidget	access:private	signature:()
RWidget::update	/home/viper/projects/RBit/rwidget.cpp	/^void RWidget::update(const RRect& r)$/;"	f	class:RWidget	signature:(const RRect& r)
RWidget::update	/home/viper/projects/RBit/rwidget.h	/^    void update();$/;"	p	class:RWidget	access:public	signature:()
RWidget::update	/home/viper/projects/RBit/rwidget.h	/^    void update(const RRect& r);$/;"	p	class:RWidget	access:public	signature:(const RRect& r)
RWidget::update	/home/viper/projects/RBit/rwidget.h	/^inline void RWidget::update()$/;"	f	class:RWidget	signature:()
RWidget::updatesEnabled	/home/viper/projects/RBit/rwidget.h	/^    bool updatesEnabled() const;$/;"	p	class:RWidget	access:public	signature:() const
RWidget::updatesEnabled	/home/viper/projects/RBit/rwidget.h	/^inline bool RWidget::updatesEnabled() const$/;"	f	class:RWidget	signature:() const
RWidget::widgetAt	/home/viper/projects/RBit/rwidget.cpp	/^RWidget* RWidget::widgetAt(const RPoint& p)$/;"	f	class:RWidget	signature:(const RPoint& p)
RWidget::widgetAt	/home/viper/projects/RBit/rwidget.h	/^    static RWidget* widgetAt(Sint16 x, Sint16 y);$/;"	p	class:RWidget	access:public	signature:(Sint16 x, Sint16 y)
RWidget::widgetAt	/home/viper/projects/RBit/rwidget.h	/^    static RWidget* widgetAt(const RPoint& p);$/;"	p	class:RWidget	access:public	signature:(const RPoint& p)
RWidget::widgetAt	/home/viper/projects/RBit/rwidget.h	/^inline RWidget* RWidget::widgetAt(Sint16 x, Sint16 y)$/;"	f	class:RWidget	signature:(Sint16 x, Sint16 y)
RWidget::widgetMouseTrackingEnabled	/home/viper/projects/RBit/rwidget.h	/^    bool widgetMouseTrackingEnabled() const;$/;"	p	class:RWidget	access:public	signature:() const
RWidget::widgetOpacity	/home/viper/projects/RBit/rwidget.cpp	/^float RWidget::widgetOpacity() const$/;"	f	class:RWidget	signature:() const
RWidget::widgetOpacity	/home/viper/projects/RBit/rwidget.h	/^    float widgetOpacity() const;$/;"	p	class:RWidget	access:public	signature:() const
RWidget::width	/home/viper/projects/RBit/rwidget.h	/^    Uint16 width() const;$/;"	p	class:RWidget	access:public	signature:() const
RWidget::width	/home/viper/projects/RBit/rwidget.h	/^inline Uint16 RWidget::width() const$/;"	f	class:RWidget	signature:() const
RWidget::x	/home/viper/projects/RBit/rwidget.h	/^    Sint16 x() const;$/;"	p	class:RWidget	access:public	signature:() const
RWidget::x	/home/viper/projects/RBit/rwidget.h	/^inline Sint16 RWidget::x() const$/;"	f	class:RWidget	signature:() const
RWidget::y	/home/viper/projects/RBit/rwidget.h	/^    Sint16 y() const;$/;"	p	class:RWidget	access:public	signature:() const
RWidget::y	/home/viper/projects/RBit/rwidget.h	/^inline Sint16 RWidget::y() const$/;"	f	class:RWidget	signature:() const
RWidget::~RWidget	/home/viper/projects/RBit/rwidget.cpp	/^RWidget::~RWidget()$/;"	f	class:RWidget	signature:()
RWidget::~RWidget	/home/viper/projects/RBit/rwidget.h	/^    virtual ~RWidget();$/;"	p	class:RWidget	access:public	signature:()
RWidgetDefaultSettings	/home/viper/projects/RBit/rwidgetdefaultsettings.h	/^template<class T> class RWidgetDefaultSettings$/;"	c
RWidgetDefaultSettings::palette	/home/viper/projects/RBit/rwidgetdefaultsettings.h	/^    static RPalette palette()$/;"	f	class:RWidgetDefaultSettings	access:public	signature:()
RWidgetDefaultSettings::setPalette	/home/viper/projects/RBit/rwidgetdefaultsettings.h	/^    static void setPalette(const RPalette& pal)$/;"	f	class:RWidgetDefaultSettings	access:public	signature:(const RPalette& pal)
RWidgetDefaultSettingsHelper	/home/viper/projects/RBit/rwidgetdefaultsettings.h	/^    RWidgetDefaultSettingsHelper() {}$/;"	f	class:RWidgetDefaultSettingsHelper	access:private	signature:()
RWidgetDefaultSettingsHelper	/home/viper/projects/RBit/rwidgetdefaultsettings.h	/^class RBIT_CORE_EXPORT RWidgetDefaultSettingsHelper$/;"	c
RWidgetDefaultSettingsHelper::Internal	/home/viper/projects/RBit/rwidgetdefaultsettings.h	/^    struct Internal$/;"	s	class:RWidgetDefaultSettingsHelper	access:private
RWidgetDefaultSettingsHelper::Internal::pal	/home/viper/projects/RBit/rwidgetdefaultsettings.h	/^        RPalette pal;$/;"	m	struct:RWidgetDefaultSettingsHelper::Internal	access:public
RWidgetDefaultSettingsHelper::RWidgetDefaultSettingsHelper	/home/viper/projects/RBit/rwidgetdefaultsettings.h	/^    RWidgetDefaultSettingsHelper() {}$/;"	f	class:RWidgetDefaultSettingsHelper	access:private	signature:()
RWidgetDefaultSettingsHelper::SettingsMap	/home/viper/projects/RBit/rwidgetdefaultsettings.h	/^    typedef std::map<const char*, Internal, StrCmp> SettingsMap;$/;"	t	class:RWidgetDefaultSettingsHelper	access:private
RWidgetDefaultSettingsHelper::StrCmp	/home/viper/projects/RBit/rwidgetdefaultsettings.h	/^    struct StrCmp$/;"	s	class:RWidgetDefaultSettingsHelper	access:private
RWidgetDefaultSettingsHelper::StrCmp::operator ()	/home/viper/projects/RBit/rwidgetdefaultsettings.h	/^        bool operator() (const char* t1, const char* t2) const$/;"	f	struct:RWidgetDefaultSettingsHelper::StrCmp	access:public	signature:(const char* t1, const char* t2) const
RWidgetDefaultSettingsHelper::instance	/home/viper/projects/RBit/rwidgetdefaultsettings.cpp	/^RWidgetDefaultSettingsHelper* RWidgetDefaultSettingsHelper::instance()$/;"	f	class:RWidgetDefaultSettingsHelper	signature:()
RWidgetDefaultSettingsHelper::instance	/home/viper/projects/RBit/rwidgetdefaultsettings.h	/^    static RWidgetDefaultSettingsHelper* instance();$/;"	p	class:RWidgetDefaultSettingsHelper	access:public	signature:()
RWidgetDefaultSettingsHelper::operator =	/home/viper/projects/RBit/rwidgetdefaultsettings.h	/^    RWidgetDefaultSettingsHelper& operator=(const RWidgetDefaultSettingsHelper&);$/;"	p	class:RWidgetDefaultSettingsHelper	access:private	signature:(const RWidgetDefaultSettingsHelper&)
RWidgetDefaultSettingsHelper::palette	/home/viper/projects/RBit/rwidgetdefaultsettings.cpp	/^RPalette RWidgetDefaultSettingsHelper::palette(const RWidget* w)$/;"	f	class:RWidgetDefaultSettingsHelper	signature:(const RWidget* w)
RWidgetDefaultSettingsHelper::palette	/home/viper/projects/RBit/rwidgetdefaultsettings.cpp	/^RPalette RWidgetDefaultSettingsHelper::palette(const char* className)$/;"	f	class:RWidgetDefaultSettingsHelper	signature:(const char* className)
RWidgetDefaultSettingsHelper::palette	/home/viper/projects/RBit/rwidgetdefaultsettings.h	/^    RPalette palette(const RWidget* w);    $/;"	p	class:RWidgetDefaultSettingsHelper	access:public	signature:(const RWidget* w)
RWidgetDefaultSettingsHelper::palette	/home/viper/projects/RBit/rwidgetdefaultsettings.h	/^    RPalette palette(const char* className);$/;"	p	class:RWidgetDefaultSettingsHelper	access:public	signature:(const char* className)
RWidgetDefaultSettingsHelper::setPalette	/home/viper/projects/RBit/rwidgetdefaultsettings.cpp	/^void RWidgetDefaultSettingsHelper::setPalette(const RPalette& pal, const char* className)$/;"	f	class:RWidgetDefaultSettingsHelper	signature:(const RPalette& pal, const char* className)
RWidgetDefaultSettingsHelper::setPalette	/home/viper/projects/RBit/rwidgetdefaultsettings.h	/^    void setPalette(const RPalette& pal, const char* className);$/;"	p	class:RWidgetDefaultSettingsHelper	access:public	signature:(const RPalette& pal, const char* className)
RWidgetDefaultSettingsHelper::settings_map	/home/viper/projects/RBit/rwidgetdefaultsettings.h	/^    SettingsMap settings_map;$/;"	m	class:RWidgetDefaultSettingsHelper	access:private
RWidgetFlags	/home/viper/projects/RBit/rwidget.h	/^enum RWidgetFlags$/;"	g
RWindow	/home/viper/projects/RBit/rwindow.h	/^    RWindow(RWidget* parent = 0, RWFlags f = RWFlags(0));$/;"	p	class:RWindow	access:public	signature:(RWidget* parent = 0, RWFlags f = RWFlags(0))
RWindow	/home/viper/projects/RBit/rwindow.h	/^    RWindow(const RWindow&);$/;"	p	class:RWindow	access:private	signature:(const RWindow&)
RWindow	/home/viper/projects/RBit/rwindow.h	/^class RBIT_CORE_EXPORT RWindow : public RWidget,$/;"	c	inherits:RWidget,RFramePainter
RWindow	/home/viper/projects/RBit/rwindow.h	/^inline RWindow::RWindow(RWidget* parent, RWFlags f) : RWidget(parent, f)$/;"	f	class:RWindow	signature:(RWidget* parent, RWFlags f)
RWindow::RWindow	/home/viper/projects/RBit/rwindow.h	/^    RWindow(RWidget* parent = 0, RWFlags f = RWFlags(0));$/;"	p	class:RWindow	access:public	signature:(RWidget* parent = 0, RWFlags f = RWFlags(0))
RWindow::RWindow	/home/viper/projects/RBit/rwindow.h	/^    RWindow(const RWindow&);$/;"	p	class:RWindow	access:private	signature:(const RWindow&)
RWindow::RWindow	/home/viper/projects/RBit/rwindow.h	/^inline RWindow::RWindow(RWidget* parent, RWFlags f) : RWidget(parent, f)$/;"	f	class:RWindow	signature:(RWidget* parent, RWFlags f)
RWindow::operator =	/home/viper/projects/RBit/rwindow.h	/^    RWindow& operator=(const RWindow&);$/;"	p	class:RWindow	access:private	signature:(const RWindow&)
RWindow::repaintImpl	/home/viper/projects/RBit/rwindow.cpp	/^void RWindow::repaintImpl(const RRect& r)$/;"	f	class:RWindow	signature:(const RRect& r)
RWindow::repaintImpl	/home/viper/projects/RBit/rwindow.h	/^    virtual void repaintImpl(const RRect& r);    $/;"	p	class:RWindow	access:protected	signature:(const RRect& r)
RWread	/home/viper/projects/RBit/rsdlttf.cpp	/^static unsigned long RWread($/;"	f	file:	signature:( FT_Stream stream, unsigned long offset, unsigned char* buffer, unsigned long count )
R_NOTIFY_OBSERVERS	/home/viper/projects/RBit/rsubjectobserver.h	111;"	d
R_UNUSED	/home/viper/projects/RBit/rglobal.h	16;"	d
Raised	/home/viper/projects/RBit/rdrawutil.h	/^    Raised  = 0x0020,$/;"	e	enum:RFrameShadowFlags
Rejected	/home/viper/projects/RBit/rdialog.h	/^        Rejected=0,$/;"	e	enum:RDialog::__anon2
ResizeMode	/home/viper/projects/RBit/rheaderview.h	/^    enum ResizeMode$/;"	g	class:RHeaderView	access:public
ResizeSection	/home/viper/projects/RBit/rheaderview.h	/^    enum State { NoState, ResizeSection } m_state;$/;"	e	enum:RHeaderView::State
ResizeState	/home/viper/projects/RBit/rsplitter.cpp	/^	enum State { NoState, ResizeState };$/;"	e	enum:RSplitterPrivate::State	file:
Retry	/home/viper/projects/RBit/rmessagebox.h	/^    enum Button { NoButton = 0, Ok = 1, Cancel = 2, Yes = 3, No = 4, Abort = 5, Retry = 6, Ignore = 7,$/;"	e	enum:RMessageBox::Button
RowSeparator	/home/viper/projects/RBit/rgridmodel.h	/^		RowSeparator = 0x02,$/;"	e	enum:RGridModel::RowType
RowSimple	/home/viper/projects/RBit/rgridmodel.h	/^		RowSimple = 0x01,$/;"	e	enum:RGridModel::RowType
RowType	/home/viper/projects/RBit/rgridmodel.h	/^	enum RowType {$/;"	g	class:RGridModel	access:public
SC_AddLine	/home/viper/projects/RBit/rscrollbar.h	/^        SC_AddLine = 0x01,$/;"	e	enum:RScrollBar::SubControl
SC_AddPage	/home/viper/projects/RBit/rscrollbar.h	/^        SC_AddPage = 0x04,$/;"	e	enum:RScrollBar::SubControl
SC_ComboBoxArrow	/home/viper/projects/RBit/rcombobox.h	/^        SC_ComboBoxArrow     = 0x04$/;"	e	enum:RComboBox::SubControl
SC_ComboBoxEditField	/home/viper/projects/RBit/rcombobox.h	/^        SC_ComboBoxEditField = 0x02,$/;"	e	enum:RComboBox::SubControl
SC_ComboBoxFrame	/home/viper/projects/RBit/rcombobox.h	/^        SC_ComboBoxFrame     = 0x01,$/;"	e	enum:RComboBox::SubControl
SC_Groove	/home/viper/projects/RBit/rscrollbar.h	/^        SC_Groove  = 0x40$/;"	e	enum:RScrollBar::SubControl
SC_None	/home/viper/projects/RBit/rcombobox.h	/^        SC_None              = 0x00,$/;"	e	enum:RComboBox::SubControl
SC_None	/home/viper/projects/RBit/rscrollbar.h	/^        SC_None    = 0x00,$/;"	e	enum:RScrollBar::SubControl
SC_Slider	/home/viper/projects/RBit/rscrollbar.h	/^        SC_Slider  = 0x20,$/;"	e	enum:RScrollBar::SubControl
SC_SubLine	/home/viper/projects/RBit/rscrollbar.h	/^        SC_SubLine = 0x02,$/;"	e	enum:RScrollBar::SubControl
SC_SubPage	/home/viper/projects/RBit/rscrollbar.h	/^        SC_SubPage = 0x10,$/;"	e	enum:RScrollBar::SubControl
SDL_TTF_MAJOR_VERSION	/home/viper/projects/RBit/rsdlttf.h	15;"	d
SDL_TTF_MINOR_VERSION	/home/viper/projects/RBit/rsdlttf.h	16;"	d
SDL_TTF_PATCHLEVEL	/home/viper/projects/RBit/rsdlttf.h	17;"	d
SDL_TTF_VERSION	/home/viper/projects/RBit/rsdlttf.h	22;"	d
SELECTED_BUTTON	/home/viper/projects/RBit/rpalette.h	/^					SELECTED_BUTTON,			\/\/ÙÓÌ ‚˚·‡ÌÌÓÈ ÍÌÓÔÍË$/;"	e	enum:RPalette::ColorRole
SELECTED_BUTTON_TEXT	/home/viper/projects/RBit/rpalette.h	/^					SELECTED_BUTTON_TEXT,		\/\/ÚÂÍÒÚ ‚˚·‡ÌÌÓÈ ÍÌÓÔÍË$/;"	e	enum:RPalette::ColorRole
ScrollAction	/home/viper/projects/RBit/rscrollbar.h	/^    enum ScrollAction {$/;"	g	class:RScrollBar	access:public
ScrollBar	/home/viper/projects/RBit/rscrollarea.h	/^        ScrollBar(RBit::Orientation o, RScrollAreaBase* parent, RWFlags flags = 0);         $/;"	p	class:RScrollAreaBase::ScrollBar	access:public	signature:(RBit::Orientation o, RScrollAreaBase* parent, RWFlags flags = 0)
ScrollBar	/home/viper/projects/RBit/rscrollarea.h	/^    class ScrollBar : public RScrollBar$/;"	c	class:RScrollAreaBase	inherits:RScrollBar	access:protected
ScrollBar	/home/viper/projects/RBit/rscrollarea.h	/^inline RScrollAreaBase::ScrollBar::ScrollBar(RBit::Orientation o, RScrollAreaBase* parent, RWFlags flags)$/;"	f	class:RScrollAreaBase::ScrollBar	signature:(RBit::Orientation o, RScrollAreaBase* parent, RWFlags flags)
ScrollBarAlwaysOff	/home/viper/projects/RBit/rscrollarea.h	/^        ScrollBarAlwaysOff,$/;"	e	enum:RScrollAreaBase::ScrollBarPolicy
ScrollBarAlwaysOn	/home/viper/projects/RBit/rscrollarea.h	/^        ScrollBarAlwaysOn$/;"	e	enum:RScrollAreaBase::ScrollBarPolicy
ScrollBarAsNeeded	/home/viper/projects/RBit/rscrollarea.h	/^        ScrollBarAsNeeded,$/;"	e	enum:RScrollAreaBase::ScrollBarPolicy
ScrollBarPolicy	/home/viper/projects/RBit/rscrollarea.h	/^    enum ScrollBarPolicy {$/;"	g	class:RScrollAreaBase	access:public
ScrollChange	/home/viper/projects/RBit/rscrollbar.h	/^    enum ScrollChange { $/;"	g	class:RScrollBar	access:protected
ScrollMove	/home/viper/projects/RBit/rscrollbar.h	/^        ScrollMove$/;"	e	enum:RScrollBar::ScrollAction
ScrollNoAction	/home/viper/projects/RBit/rscrollbar.h	/^        ScrollNoAction = 0,$/;"	e	enum:RScrollBar::ScrollAction
ScrollPageStepAdd	/home/viper/projects/RBit/rscrollbar.h	/^        ScrollPageStepAdd,$/;"	e	enum:RScrollBar::ScrollAction
ScrollPageStepSub	/home/viper/projects/RBit/rscrollbar.h	/^        ScrollPageStepSub,$/;"	e	enum:RScrollBar::ScrollAction
ScrollRangeChange	/home/viper/projects/RBit/rscrollbar.h	/^        ScrollRangeChange,        $/;"	e	enum:RScrollBar::ScrollChange
ScrollSingleStepAdd	/home/viper/projects/RBit/rscrollbar.h	/^        ScrollSingleStepAdd,$/;"	e	enum:RScrollBar::ScrollAction
ScrollSingleStepSub	/home/viper/projects/RBit/rscrollbar.h	/^        ScrollSingleStepSub,$/;"	e	enum:RScrollBar::ScrollAction
ScrollStepsChange	/home/viper/projects/RBit/rscrollbar.h	/^        ScrollStepsChange, $/;"	e	enum:RScrollBar::ScrollChange
ScrollToMaximum	/home/viper/projects/RBit/rscrollbar.h	/^        ScrollToMaximum,$/;"	e	enum:RScrollBar::ScrollAction
ScrollToMinimum	/home/viper/projects/RBit/rscrollbar.h	/^        ScrollToMinimum,$/;"	e	enum:RScrollBar::ScrollAction
ScrollValueChange	/home/viper/projects/RBit/rscrollbar.h	/^        ScrollValueChange $/;"	e	enum:RScrollBar::ScrollChange
ScrollWidget	/home/viper/projects/RBit/rscrollwidgetarea.h	/^    ScrollWidget(RWidget* parent=0, RWFlags flags=0) : T(parent, flags) {}$/;"	f	class:ScrollWidget	access:public	signature:(RWidget* parent=0, RWFlags flags=0)
ScrollWidget	/home/viper/projects/RBit/rscrollwidgetarea.h	/^    ScrollWidget<T>(const ScrollWidget<T>&);$/;"	p	class:ScrollWidget	access:private	signature:(const ScrollWidget<T>&)
ScrollWidget	/home/viper/projects/RBit/rscrollwidgetarea.h	/^class ScrollWidget : public T$/;"	c	inherits:T
ScrollWidget::ScrollWidget	/home/viper/projects/RBit/rscrollwidgetarea.h	/^    ScrollWidget(RWidget* parent=0, RWFlags flags=0) : T(parent, flags) {}$/;"	f	class:ScrollWidget	access:public	signature:(RWidget* parent=0, RWFlags flags=0)
ScrollWidget::ScrollWidget	/home/viper/projects/RBit/rscrollwidgetarea.h	/^    ScrollWidget<T>(const ScrollWidget<T>&);$/;"	p	class:ScrollWidget	access:private	signature:(const ScrollWidget<T>&)
ScrollWidget::operator =	/home/viper/projects/RBit/rscrollwidgetarea.h	/^    ScrollWidget<T>& operator=(const ScrollWidget<T>&);$/;"	p	class:ScrollWidget	access:private	signature:(const ScrollWidget<T>&)
ScrollWidget::scrollArea	/home/viper/projects/RBit/rscrollwidgetarea.h	/^    inline RScrollWidgetArea<T>* scrollArea() const$/;"	f	class:ScrollWidget	access:protected	signature:() const
ScrollWidget::setGeometry	/home/viper/projects/RBit/rscrollwidgetarea.h	/^    virtual void setGeometry(const RPoint& p, const RSize& s)$/;"	f	class:ScrollWidget	access:protected	signature:(const RPoint& p, const RSize& s)
Sections	/home/viper/projects/RBit/rsimpleheadermodel.h	/^    typedef std::vector<ItemAutoPtr> Sections;    $/;"	t	class:RSimpleHeaderModel	access:private
SelectSingleItem	/home/viper/projects/RBit/rgridview.h	/^        SelectSingleItem,$/;"	e	enum:RGridView::SelectionPolicy
SelectSingleRow	/home/viper/projects/RBit/rgridview.h	/^        SelectSingleRow,$/;"	e	enum:RGridView::SelectionPolicy
SelectedButton	/home/viper/projects/RBit/rpalette.h	/^	inline const RColor& SelectedButton() const { return color(SELECTED_BUTTON); }$/;"	f	class:RPalette	access:public	signature:() const
SelectedButtonText	/home/viper/projects/RBit/rpalette.h	/^	inline const RColor& SelectedButtonText() const { return color(SELECTED_BUTTON_TEXT); }$/;"	f	class:RPalette	access:public	signature:() const
SelectionPolicy	/home/viper/projects/RBit/rgridview.h	/^    enum SelectionPolicy {$/;"	g	class:RGridView	access:public
SettingsMap	/home/viper/projects/RBit/rwidgetdefaultsettings.h	/^    typedef std::map<const char*, Internal, StrCmp> SettingsMap;$/;"	t	class:RWidgetDefaultSettingsHelper	access:private
Shadow	/home/viper/projects/RBit/rpalette.h	/^					Shadow,$/;"	e	enum:RPalette::ColorRole
SharedCounter	/home/viper/projects/RBit/rsharedptr.h	/^		SharedCounter(P p, U d) :$/;"	f	class:RSharedPtr::SharedCounter	access:public	signature:(P p, U d)
SharedCounter	/home/viper/projects/RBit/rsharedptr.h	/^        SharedCounter() $/;"	f	class:RSharedPtr::SharedCounter	access:public	signature:()
SharedCounter	/home/viper/projects/RBit/rsharedptr.h	/^        SharedCounter(const SharedCounter& rh)$/;"	f	class:RSharedPtr::SharedCounter	access:public	signature:(const SharedCounter& rh)
SharedCounter	/home/viper/projects/RBit/rsharedptr.h	/^    class SharedCounter {$/;"	c	class:RSharedPtr	access:private
SharedCounterHelper	/home/viper/projects/RBit/rsharedptr.h	/^	class SharedCounterHelper : public SharedCounterHelperBase {$/;"	c	class:RSharedPtr	inherits:SharedCounterHelperBase	access:private
SharedCounterHelper	/home/viper/projects/RBit/rsharedptr.h	/^        SharedCounterHelper(P p, U d) $/;"	f	class:RSharedPtr::SharedCounterHelper	access:public	signature:(P p, U d)
SharedCounterHelperBase	/home/viper/projects/RBit/rsharedptr.h	/^        SharedCounterHelperBase() $/;"	f	class:RSharedPtr::SharedCounterHelperBase	access:public	signature:()
SharedCounterHelperBase	/home/viper/projects/RBit/rsharedptr.h	/^        SharedCounterHelperBase(const SharedCounterHelperBase&);$/;"	p	class:RSharedPtr::SharedCounterHelperBase	access:private	signature:(const SharedCounterHelperBase&)
SharedCounterHelperBase	/home/viper/projects/RBit/rsharedptr.h	/^    class SharedCounterHelperBase {$/;"	c	class:RSharedPtr	access:private
SingleLine	/home/viper/projects/RBit/rdrawutil.h	/^    SingleLine        = 0x0080,$/;"	e	enum:RTextFlags
SortOrder	/home/viper/projects/RBit/rbit.h	/^    enum SortOrder$/;"	g	namespace:RBit
State	/home/viper/projects/RBit/rheaderview.h	/^    enum State { NoState, ResizeSection } m_state;$/;"	g	class:RHeaderView	access:private
State	/home/viper/projects/RBit/rsplitter.cpp	/^	enum State { NoState, ResizeState };$/;"	g	class:RSplitterPrivate	file:	access:public
StrCmp	/home/viper/projects/RBit/rwidget.h	/^    struct StrCmp$/;"	s	class:RMetaRegistrator	access:private
StrCmp	/home/viper/projects/RBit/rwidgetdefaultsettings.h	/^    struct StrCmp$/;"	s	class:RWidgetDefaultSettingsHelper	access:private
Stretch	/home/viper/projects/RBit/rheaderview.h	/^        Stretch,$/;"	e	enum:RHeaderView::ResizeMode
SubControl	/home/viper/projects/RBit/rcombobox.h	/^    enum SubControl {$/;"	g	class:RComboBox	access:protected
SubControl	/home/viper/projects/RBit/rscrollbar.h	/^    enum SubControl {$/;"	g	class:RScrollBar	access:protected
Subject	/home/viper/projects/RBit/rsubjectobserver.h	/^	typedef S Subject;$/;"	t	class:RObserver	access:public
SubjectList	/home/viper/projects/RBit/rsubjectobserver.h	/^    typedef RSimpleList<SubjectListNode> SubjectList;$/;"	t	class:RObserver	access:private
SubjectListNode	/home/viper/projects/RBit/rsubjectobserver.h	/^    typedef RSimpleListNode<Subject> SubjectListNode;$/;"	t	class:RObserver	access:private
Sunken	/home/viper/projects/RBit/rdrawutil.h	/^    Sunken  = 0x0030,$/;"	e	enum:RFrameShadowFlags
TTF_ByteSwappedUNICODE	/home/viper/projects/RBit/rsdlttf.h	/^void TTF_ByteSwappedUNICODE(int swapped);$/;"	p	signature:(int swapped)
TTF_CloseFont	/home/viper/projects/RBit/rsdlttf.cpp	/^void TTF_CloseFont( TTF_Font* font )$/;"	f	signature:( TTF_Font* font )
TTF_CloseFont	/home/viper/projects/RBit/rsdlttf.h	/^void RBIT_CORE_EXPORT TTF_CloseFont(TTF_Font* font);$/;"	p	signature:(TTF_Font* font)
TTF_Font	/home/viper/projects/RBit/rsdlttf.h	/^typedef struct _TTF_Font TTF_Font;$/;"	t	typeref:struct:_TTF_Font
TTF_FontAscent	/home/viper/projects/RBit/rsdlttf.cpp	/^int TTF_FontAscent(TTF_Font *font)$/;"	f	signature:(TTF_Font *font)
TTF_FontAscent	/home/viper/projects/RBit/rsdlttf.h	/^int RBIT_CORE_EXPORT TTF_FontAscent(TTF_Font* font);$/;"	p	signature:(TTF_Font* font)
TTF_FontDescent	/home/viper/projects/RBit/rsdlttf.cpp	/^int TTF_FontDescent(TTF_Font *font)$/;"	f	signature:(TTF_Font *font)
TTF_FontDescent	/home/viper/projects/RBit/rsdlttf.h	/^int RBIT_CORE_EXPORT TTF_FontDescent(TTF_Font* font);$/;"	p	signature:(TTF_Font* font)
TTF_FontFaceFamilyName	/home/viper/projects/RBit/rsdlttf.cpp	/^char *TTF_FontFaceFamilyName(TTF_Font *font)$/;"	f	signature:(TTF_Font *font)
TTF_FontFaceFamilyName	/home/viper/projects/RBit/rsdlttf.h	/^char* TTF_FontFaceFamilyName(TTF_Font* font);$/;"	p	signature:(TTF_Font* font)
TTF_FontFaceIsFixedWidth	/home/viper/projects/RBit/rsdlttf.cpp	/^int TTF_FontFaceIsFixedWidth(TTF_Font *font)$/;"	f	signature:(TTF_Font *font)
TTF_FontFaceIsFixedWidth	/home/viper/projects/RBit/rsdlttf.h	/^int TTF_FontFaceIsFixedWidth(TTF_Font* font);$/;"	p	signature:(TTF_Font* font)
TTF_FontFaceStyleName	/home/viper/projects/RBit/rsdlttf.cpp	/^char *TTF_FontFaceStyleName(TTF_Font *font)$/;"	f	signature:(TTF_Font *font)
TTF_FontFaceStyleName	/home/viper/projects/RBit/rsdlttf.h	/^char* TTF_FontFaceStyleName(TTF_Font* font);$/;"	p	signature:(TTF_Font* font)
TTF_FontFaces	/home/viper/projects/RBit/rsdlttf.cpp	/^long TTF_FontFaces(TTF_Font *font)$/;"	f	signature:(TTF_Font *font)
TTF_FontFaces	/home/viper/projects/RBit/rsdlttf.h	/^long TTF_FontFaces(TTF_Font* font);$/;"	p	signature:(TTF_Font* font)
TTF_FontHeight	/home/viper/projects/RBit/rsdlttf.cpp	/^int TTF_FontHeight(TTF_Font *font)$/;"	f	signature:(TTF_Font *font)
TTF_FontHeight	/home/viper/projects/RBit/rsdlttf.h	/^int RBIT_CORE_EXPORT TTF_FontHeight(TTF_Font* font);$/;"	p	signature:(TTF_Font* font)
TTF_FontLineSkip	/home/viper/projects/RBit/rsdlttf.cpp	/^int TTF_FontLineSkip(TTF_Font *font)$/;"	f	signature:(TTF_Font *font)
TTF_FontLineSkip	/home/viper/projects/RBit/rsdlttf.h	/^int RBIT_CORE_EXPORT TTF_FontLineSkip(TTF_Font* font);$/;"	p	signature:(TTF_Font* font)
TTF_GetError	/home/viper/projects/RBit/rsdlttf.h	125;"	d
TTF_GetFontStyle	/home/viper/projects/RBit/rsdlttf.cpp	/^int TTF_GetFontStyle( TTF_Font* font )$/;"	f	signature:( TTF_Font* font )
TTF_GetFontStyle	/home/viper/projects/RBit/rsdlttf.h	/^int TTF_GetFontStyle(TTF_Font* font);$/;"	p	signature:(TTF_Font* font)
TTF_Init	/home/viper/projects/RBit/rsdlttf.cpp	/^int TTF_Init( void )$/;"	f	signature:( void )
TTF_Init	/home/viper/projects/RBit/rsdlttf.h	/^int TTF_Init(void);$/;"	p	signature:(void)
TTF_Linked_Version	/home/viper/projects/RBit/rsdlttf.cpp	/^const SDL_version *TTF_Linked_Version(void)$/;"	f	signature:(void)
TTF_Linked_Version	/home/viper/projects/RBit/rsdlttf.h	/^const SDL_version* TTF_Linked_Version(void);$/;"	p	signature:(void)
TTF_MAJOR_VERSION	/home/viper/projects/RBit/rsdlttf.h	30;"	d
TTF_MINOR_VERSION	/home/viper/projects/RBit/rsdlttf.h	31;"	d
TTF_OpenFont	/home/viper/projects/RBit/rsdlttf.cpp	/^TTF_Font* TTF_OpenFont( const char *file, int ptsize )$/;"	f	signature:( const char *file, int ptsize )
TTF_OpenFont	/home/viper/projects/RBit/rsdlttf.h	/^TTF_Font RBIT_CORE_EXPORT * TTF_OpenFont(const char *file, int ptsize);$/;"	p	signature:(const char *file, int ptsize)
TTF_OpenFontIndex	/home/viper/projects/RBit/rsdlttf.cpp	/^TTF_Font* TTF_OpenFontIndex( const char *file, int ptsize, long index )$/;"	f	signature:( const char *file, int ptsize, long index )
TTF_OpenFontIndex	/home/viper/projects/RBit/rsdlttf.h	/^TTF_Font* TTF_OpenFontIndex(const char *file, int ptsize, long index);$/;"	p	signature:(const char *file, int ptsize, long index)
TTF_OpenFontIndexRW	/home/viper/projects/RBit/rsdlttf.cpp	/^TTF_Font* TTF_OpenFontIndexRW( SDL_RWops *src, int freesrc, int ptsize, long index )$/;"	f	signature:( SDL_RWops *src, int freesrc, int ptsize, long index )
TTF_OpenFontIndexRW	/home/viper/projects/RBit/rsdlttf.h	/^TTF_Font* TTF_OpenFontIndexRW(SDL_RWops *src, int freesrc, int ptsize, long index);$/;"	p	signature:(SDL_RWops *src, int freesrc, int ptsize, long index)
TTF_OpenFontRW	/home/viper/projects/RBit/rsdlttf.cpp	/^TTF_Font* TTF_OpenFontRW( SDL_RWops *src, int freesrc, int ptsize )$/;"	f	signature:( SDL_RWops *src, int freesrc, int ptsize )
TTF_OpenFontRW	/home/viper/projects/RBit/rsdlttf.h	/^TTF_Font* TTF_OpenFontRW(SDL_RWops *src, int freesrc, int ptsize);$/;"	p	signature:(SDL_RWops *src, int freesrc, int ptsize)
TTF_PATCHLEVEL	/home/viper/projects/RBit/rsdlttf.h	32;"	d
TTF_Quit	/home/viper/projects/RBit/rsdlttf.cpp	/^void TTF_Quit( void )$/;"	f	signature:( void )
TTF_Quit	/home/viper/projects/RBit/rsdlttf.h	/^void TTF_Quit(void);$/;"	p	signature:(void)
TTF_RenderText	/home/viper/projects/RBit/rsdlttf.cpp	/^extern void TTF_RenderText(TTF_Font* font, const char* text, int pos, int len, $/;"	f	signature:(TTF_Font* font, const char* text, int pos, int len, const RColor& fg, const RPoint& topleft, const RRect& clip, bool PushPopOpenGL )
TTF_RenderText	/home/viper/projects/RBit/rsdlttf.h	/^void TTF_RenderText(TTF_Font* font, const char* text, int pos, int len, $/;"	p	signature:(TTF_Font* font, const char* text, int pos, int len, const RColor& fg, const RPoint& topleft, const RRect& clip, bool PushPopOpenGL=true)
TTF_RenderTextBlended	/home/viper/projects/RBit/rsdlttf.cpp	/^SDL_Surface* SDLCALL TTF_RenderTextBlended(TTF_Font *font, const char *text, $/;"	f	signature:(TTF_Font *font, const char *text, int pos, int len, const RColor& fg, const RRect& textr, const RRect& clip, SDL_Surface* s)
TTF_RenderTextBlended	/home/viper/projects/RBit/rsdlttf.h	/^SDL_Surface* TTF_RenderTextBlended(TTF_Font *font,$/;"	p	signature:(TTF_Font *font, const char *text, int pos, int len, const RColor& fg, const RRect& textr, const RRect& clip, SDL_Surface* s)
TTF_RenderTextPixmap	/home/viper/projects/RBit/rsdlttf.cpp	/^extern void TTF_RenderTextPixmap(TTF_Font* font, const char *text, int pos, int len,                                  $/;"	f	signature:(TTF_Font* font, const char *text, int pos, int len, RSize& tsize, float texcoord[4], RArrayContainer<Uint8>& pixmap)
TTF_RenderTextPixmap	/home/viper/projects/RBit/rsdlttf.h	/^void TTF_RenderTextPixmap(TTF_Font* font, const char *text, int pos, int len, $/;"	p	signature:(TTF_Font* font, const char *text, int pos, int len, RSize& size, float texcoord[4], RArrayContainer<Uint8>& pixmap)
TTF_RenderTextShaded	/home/viper/projects/RBit/rsdlttf.cpp	/^SDL_Surface* TTF_RenderTextShaded(TTF_Font *font, const char *text, $/;"	f	signature:(TTF_Font *font, const char *text, int pos, int len, const RColor& fg, const RColor& bg, const RRect& textr, const RRect& clip, SDL_Surface* s)
TTF_RenderTextShaded	/home/viper/projects/RBit/rsdlttf.h	/^SDL_Surface* TTF_RenderTextShaded(TTF_Font *font,$/;"	p	signature:(TTF_Font *font, const char *text, int pos, int len, const RColor& fg, const RColor& bg, const RRect& textr, const RRect& clip, SDL_Surface* s)
TTF_STYLE_BOLD	/home/viper/projects/RBit/rsdlttf.h	67;"	d
TTF_STYLE_ITALIC	/home/viper/projects/RBit/rsdlttf.h	68;"	d
TTF_STYLE_NORMAL	/home/viper/projects/RBit/rsdlttf.h	66;"	d
TTF_STYLE_UNDERLINE	/home/viper/projects/RBit/rsdlttf.h	69;"	d
TTF_SetError	/home/viper/projects/RBit/rsdlttf.h	124;"	d
TTF_SetFTError	/home/viper/projects/RBit/rsdlttf.cpp	/^static void TTF_SetFTError(const char *msg, FT_Error )$/;"	f	file:	signature:(const char *msg, FT_Error )
TTF_SetFontStyle	/home/viper/projects/RBit/rsdlttf.cpp	/^void TTF_SetFontStyle( TTF_Font* font, int style )$/;"	f	signature:( TTF_Font* font, int style )
TTF_SetFontStyle	/home/viper/projects/RBit/rsdlttf.h	/^void TTF_SetFontStyle(TTF_Font* font, int style);$/;"	p	signature:(TTF_Font* font, int style)
TTF_SizeText	/home/viper/projects/RBit/rsdlttf.cpp	/^int TTF_SizeText(TTF_Font *font, const char *text, int *w, int *h, int pos, int len)$/;"	f	signature:(TTF_Font *font, const char *text, int *w, int *h, int pos, int len)
TTF_SizeText	/home/viper/projects/RBit/rsdlttf.h	/^int TTF_SizeText(TTF_Font* font, const char *text, int *w, int *h, int pos, int len);$/;"	p	signature:(TTF_Font* font, const char *text, int *w, int *h, int pos, int len)
TTF_VERSION	/home/viper/projects/RBit/rsdlttf.h	33;"	d
TTF_WasInit	/home/viper/projects/RBit/rsdlttf.cpp	/^int TTF_WasInit( void )$/;"	f	signature:( void )
TTF_WasInit	/home/viper/projects/RBit/rsdlttf.h	/^int TTF_WasInit(void);$/;"	p	signature:(void)
TTF_initialized	/home/viper/projects/RBit/rsdlttf.cpp	/^static int TTF_initialized = 0;$/;"	v	file:
Table	/home/viper/projects/RBit/rsimplegridmodel.h	/^    typedef std::vector<ItemAutoPtr> Table;$/;"	t	class:RSimpleGridModel	access:private
Text	/home/viper/projects/RBit/rpalette.h	/^                    Text, $/;"	e	enum:RPalette::ColorRole
TextFlagsMask	/home/viper/projects/RBit/rdrawutil.h	/^    TextFlagsMask     = 0xFF80$/;"	e	enum:RTextFlags
Type	/home/viper/projects/RBit/rsimplegridmodel.h	/^        enum { Type = 0, UserType = 1000 };$/;"	e	enum:RSimpleGridModel::Item::__anon4
Type	/home/viper/projects/RBit/rsimpleheadermodel.h	/^        enum { Type = 0, UserType = 1000 };$/;"	e	enum:RSimpleHeaderModel::Item::__anon19
Types	/home/viper/projects/RBit/rsimplegridmodel.h	/^    typedef std::vector<RModelDataTypeBase*> Types;$/;"	t	class:RSimpleGridModel	access:private
Unchecked	/home/viper/projects/RBit/rbit.h	/^        Unchecked=0,$/;"	e	enum:RBit::CheckState
UnknownBackground	/home/viper/projects/RBit/rdrawutil.h	/^    UnknownBackground = 0x0100,$/;"	e	enum:RTextFlags
UserType	/home/viper/projects/RBit/rsimplegridmodel.h	/^        enum { Type = 0, UserType = 1000 };$/;"	e	enum:RSimpleGridModel::Item::__anon4
UserType	/home/viper/projects/RBit/rsimpleheadermodel.h	/^        enum { Type = 0, UserType = 1000 };$/;"	e	enum:RSimpleHeaderModel::Item::__anon19
Vertical	/home/viper/projects/RBit/rbit.h	/^        Vertical$/;"	e	enum:RBit::Orientation
VerticalLines	/home/viper/projects/RBit/rgridview.h	/^        VerticalLines           = 0x01,$/;"	e	enum:RGridView::LineDecorationFlags
Viewport	/home/viper/projects/RBit/rgridview.h	/^        Viewport(RWidget* parent, RWFlags flags);$/;"	p	class:RGridView::Viewport	access:public	signature:(RWidget* parent, RWFlags flags)
Viewport	/home/viper/projects/RBit/rgridview.h	/^    class Viewport : public RWidget$/;"	c	class:RGridView	inherits:RWidget	access:protected
Viewport	/home/viper/projects/RBit/rgridview.h	/^inline RGridView::Viewport::Viewport(RWidget* parent, RWFlags flags)$/;"	f	class:RGridView::Viewport	signature:(RWidget* parent, RWFlags flags)
Viewport	/home/viper/projects/RBit/rscrollarea.h	/^        Viewport(RWidget* parent=0, RWFlags flags=0);$/;"	p	class:RScrollArea::Viewport	access:public	signature:(RWidget* parent=0, RWFlags flags=0)
Viewport	/home/viper/projects/RBit/rscrollarea.h	/^    class Viewport : public RWidget$/;"	c	class:RScrollArea	inherits:RWidget	access:protected
Viewport	/home/viper/projects/RBit/rscrollarea.h	/^inline RScrollArea::Viewport::Viewport(RWidget* parent, RWFlags flags)$/;"	f	class:RScrollArea::Viewport	signature:(RWidget* parent, RWFlags flags)
Warning	/home/viper/projects/RBit/rmessagebox.h	/^    enum Icon { NoIcon = 0, Information = 1, Warning = 2, Critical = 3 };$/;"	e	enum:RMessageBox::Icon
Window	/home/viper/projects/RBit/rpalette.h	/^					Window, $/;"	e	enum:RPalette::ColorRole
WindowText	/home/viper/projects/RBit/rpalette.h	/^    enum ColorRole {WindowText, $/;"	e	enum:RPalette::ColorRole
Y	/home/viper/projects/RBit/rframepainter.o	/^Â/;"	v
Yes	/home/viper/projects/RBit/rmessagebox.h	/^    enum Button { NoButton = 0, Ok = 1, Cancel = 2, Yes = 3, No = 4, Abort = 5, Retry = 6, Ignore = 7,$/;"	e	enum:RMessageBox::Button
_TTF_Font	/home/viper/projects/RBit/rsdlttf.cpp	/^struct _TTF_Font {$/;"	s	file:
_TTF_Font::args	/home/viper/projects/RBit/rsdlttf.cpp	/^	FT_Open_Args args;$/;"	m	struct:_TTF_Font	file:	access:public
_TTF_Font::ascent	/home/viper/projects/RBit/rsdlttf.cpp	/^	int ascent;$/;"	m	struct:_TTF_Font	file:	access:public
_TTF_Font::cache	/home/viper/projects/RBit/rsdlttf.cpp	/^	c_glyph cache[256];	$/;"	m	struct:_TTF_Font	file:	access:public
_TTF_Font::current	/home/viper/projects/RBit/rsdlttf.cpp	/^	c_glyph *current;$/;"	m	struct:_TTF_Font	file:	access:public
_TTF_Font::descent	/home/viper/projects/RBit/rsdlttf.cpp	/^	int descent;$/;"	m	struct:_TTF_Font	file:	access:public
_TTF_Font::face	/home/viper/projects/RBit/rsdlttf.cpp	/^	FT_Face face;$/;"	m	struct:_TTF_Font	file:	access:public
_TTF_Font::font_size_family	/home/viper/projects/RBit/rsdlttf.cpp	/^	int font_size_family;$/;"	m	struct:_TTF_Font	file:	access:public
_TTF_Font::freesrc	/home/viper/projects/RBit/rsdlttf.cpp	/^	int freesrc;$/;"	m	struct:_TTF_Font	file:	access:public
_TTF_Font::glyph_italics	/home/viper/projects/RBit/rsdlttf.cpp	/^	float glyph_italics;$/;"	m	struct:_TTF_Font	file:	access:public
_TTF_Font::glyph_overhang	/home/viper/projects/RBit/rsdlttf.cpp	/^	int glyph_overhang;$/;"	m	struct:_TTF_Font	file:	access:public
_TTF_Font::height	/home/viper/projects/RBit/rsdlttf.cpp	/^	int height;$/;"	m	struct:_TTF_Font	file:	access:public
_TTF_Font::lineskip	/home/viper/projects/RBit/rsdlttf.cpp	/^	int lineskip;$/;"	m	struct:_TTF_Font	file:	access:public
_TTF_Font::m_List	/home/viper/projects/RBit/rsdlttf.cpp	/^	GLuint m_List;$/;"	m	struct:_TTF_Font	file:	access:public
_TTF_Font::pTexture	/home/viper/projects/RBit/rsdlttf.cpp	/^	GLuint *pTexture;$/;"	m	struct:_TTF_Font	file:	access:public
_TTF_Font::src	/home/viper/projects/RBit/rsdlttf.cpp	/^	SDL_RWops *src;$/;"	m	struct:_TTF_Font	file:	access:public
_TTF_Font::style	/home/viper/projects/RBit/rsdlttf.cpp	/^	int style;$/;"	m	struct:_TTF_Font	file:	access:public
_TTF_Font::underline_height	/home/viper/projects/RBit/rsdlttf.cpp	/^	int underline_height;$/;"	m	struct:_TTF_Font	file:	access:public
_TTF_Font::underline_offset	/home/viper/projects/RBit/rsdlttf.cpp	/^	int underline_offset;$/;"	m	struct:_TTF_Font	file:	access:public
__anon10::rDrawDashedHLine	/home/viper/projects/RBit/rdrawutil.cpp	/^void rDrawDashedHLine(SDL_Surface* dst, const RPoint& p, Uint16 len, Uint32 color)$/;"	f	namespace:__anon10	signature:(SDL_Surface* dst, const RPoint& p, Uint16 len, Uint32 color)
__anon11::rClipVLine	/home/viper/projects/RBit/rdrawutil.cpp	/^    bool rClipVLine(RPoint& p, Uint16& l, const RRect& clip)$/;"	f	namespace:__anon11	signature:(RPoint& p, Uint16& l, const RRect& clip)
__anon12::rDrawVLine	/home/viper/projects/RBit/rdrawutil.cpp	/^void rDrawVLine(SDL_Surface* dst, const RPoint& p, Uint16 len, Uint32 color)$/;"	f	namespace:__anon12	signature:(SDL_Surface* dst, const RPoint& p, Uint16 len, Uint32 color)
__anon13::rDrawDashedVLine	/home/viper/projects/RBit/rdrawutil.cpp	/^void rDrawDashedVLine(SDL_Surface* dst, const RPoint& p, Uint16 len, Uint32 color)$/;"	f	namespace:__anon13	signature:(SDL_Surface* dst, const RPoint& p, Uint16 len, Uint32 color)
__anon14::octant0	/home/viper/projects/RBit/rdrawutil.cpp	/^void octant0(SDL_Surface* dst, Uint32 x0, Uint32 y0, Uint32 deltax, Uint32 deltay,$/;"	f	namespace:__anon14	signature:(SDL_Surface* dst, Uint32 x0, Uint32 y0, Uint32 deltax, Uint32 deltay, Sint16 xdirection, const RColor& color)
__anon14::octant1	/home/viper/projects/RBit/rdrawutil.cpp	/^void octant1(SDL_Surface* dst, Uint32 x0, Uint32 y0, Uint32 deltax, Uint32 deltay,$/;"	f	namespace:__anon14	signature:(SDL_Surface* dst, Uint32 x0, Uint32 y0, Uint32 deltax, Uint32 deltay, Sint16 xdirection, const RColor& color)
__anon15::rDrawRect	/home/viper/projects/RBit/rdrawutil.cpp	/^void rDrawRect(SDL_Surface* dst, const RRect& rect, Uint32 color)$/;"	f	namespace:__anon15	signature:(SDL_Surface* dst, const RRect& rect, Uint32 color)
__anon16::rDrawDashedRect	/home/viper/projects/RBit/rdrawutil.cpp	/^void rDrawDashedRect(SDL_Surface* dst, const RRect& rect, Uint32 color)$/;"	f	namespace:__anon16	signature:(SDL_Surface* dst, const RRect& rect, Uint32 color)
__anon17::init_system_cursor	/home/viper/projects/RBit/rheaderview.cpp	/^    SDL_Cursor *init_system_cursor(const char *image[])$/;"	f	namespace:__anon17	signature:(const char *image[])
__anon17::splitHCursor	/home/viper/projects/RBit/rheaderview.cpp	/^    const char *splitHCursor[] = {      $/;"	v
__anon17::splitVCursor	/home/viper/projects/RBit/rheaderview.cpp	/^    const char *splitVCursor[] = {      $/;"	v
__anon18::round	/home/viper/projects/RBit/rcolor.cpp	/^    inline int round(double d)$/;"	f	namespace:__anon18	signature:(double d)
__anon1::powerOfTwo	/home/viper/projects/RBit/rimage.cpp	/^int powerOfTwo(int input)$/;"	f	namespace:__anon1	signature:(int input)
__anon20::RSharedPtrTraits	/home/viper/projects/RBit/rsharedptr.h	/^	struct RSharedPtrTraits {    $/;"	s	namespace:__anon20
__anon20::RSharedPtrTraits	/home/viper/projects/RBit/rsharedptr.h	/^	struct RSharedPtrTraits<void> {$/;"	s	namespace:__anon20
__anon20::RSharedPtrTraits::reference_type	/home/viper/projects/RBit/rsharedptr.h	/^		typedef T& reference_type;$/;"	t	struct:__anon20::RSharedPtrTraits	access:public
__anon20::RSharedPtrTraits::reference_type	/home/viper/projects/RBit/rsharedptr.h	/^		typedef void reference_type;$/;"	t	struct:__anon20::RSharedPtrTraits	access:public
__anon21::FPS	/home/viper/projects/RBit/rapplication.cpp	/^struct FPS$/;"	s	namespace:__anon21	file:
__anon21::FPS::frames	/home/viper/projects/RBit/rapplication.cpp	/^    int frames;$/;"	m	struct:__anon21::FPS	file:	access:public
__anon21::FPS::ratio	/home/viper/projects/RBit/rapplication.cpp	/^    int ratio;$/;"	m	struct:__anon21::FPS	file:	access:public
__anon21::FPS::ratio_average	/home/viper/projects/RBit/rapplication.cpp	/^    double ratio_average;$/;"	m	struct:__anon21::FPS	file:	access:public
__anon21::FPS::time	/home/viper/projects/RBit/rapplication.cpp	/^    uint time;$/;"	m	struct:__anon21::FPS	file:	access:public
__anon21::FPS::valid	/home/viper/projects/RBit/rapplication.cpp	/^    bool valid;$/;"	m	struct:__anon21::FPS	file:	access:public
__anon21::fps	/home/viper/projects/RBit/rapplication.cpp	/^} fps;$/;"	v	typeref:struct:__anon21::FPS
__anon21::fps_label	/home/viper/projects/RBit/rapplication.cpp	/^RLabel* fps_label = 0;$/;"	v
__anon22::windows1251_unicode	/home/viper/projects/RBit/rapplication.cpp	/^const Uint16 windows1251_unicode[256] = {$/;"	v
__anon23::create_cursor	/home/viper/projects/RBit/rsplitter.cpp	/^	SDL_Cursor *create_cursor(const char *image[])$/;"	f	namespace:__anon23	signature:(const char *image[])
__anon23::splitHCursor	/home/viper/projects/RBit/rsplitter.cpp	/^	const char *splitHCursor[] = {      $/;"	v
__anon23::splitVCursor	/home/viper/projects/RBit/rsplitter.cpp	/^	const char *splitVCursor[] = {      $/;"	v
__anon3::powerOfTwo	/home/viper/projects/RBit/rsdlttf.cpp	/^int powerOfTwo(int input)$/;"	f	namespace:__anon3	signature:(int input)
__anon5::criticalBmp	/home/viper/projects/RBit/rmessagebox.cpp	/^    const unsigned char criticalBmp[] = {$/;"	v
__anon5::informationBmp	/home/viper/projects/RBit/rmessagebox.cpp	/^    const unsigned char informationBmp[] = {$/;"	v
__anon5::standardIcon	/home/viper/projects/RBit/rmessagebox.cpp	/^    RSurface standardIcon(RMessageBox::Icon i)$/;"	f	namespace:__anon5	signature:(RMessageBox::Icon i)
__anon5::warningBmp	/home/viper/projects/RBit/rmessagebox.cpp	/^    const unsigned char warningBmp[] = {$/;"	v
__anon6::rFormatText	/home/viper/projects/RBit/rdrawutil.cpp	/^    void rFormatText(const RRect& rect, const char* text, int pos, int len, const RFont& f, RTextParag& internal)$/;"	f	namespace:__anon6	signature:(const RRect& rect, const char* text, int pos, int len, const RFont& f, RTextParag& internal)
__anon7::rDrawPoint	/home/viper/projects/RBit/rdrawutil.cpp	/^void rDrawPoint(SDL_Surface* dst, const RPoint& p, Uint32 color)$/;"	f	namespace:__anon7	signature:(SDL_Surface* dst, const RPoint& p, Uint32 color)
__anon8::rClipHLine	/home/viper/projects/RBit/rdrawutil.cpp	/^    bool rClipHLine(RPoint& p, Uint16& l, const RRect& clip)$/;"	f	namespace:__anon8	signature:(RPoint& p, Uint16& l, const RRect& clip)
__anon9::rDrawHLine	/home/viper/projects/RBit/rdrawutil.cpp	/^    void rDrawHLine(SDL_Surface* dst, const RPoint& p, Uint16 len, Uint32 color)$/;"	f	namespace:__anon9	signature:(SDL_Surface* dst, const RPoint& p, Uint16 len, Uint32 color)
accept	/home/viper/projects/RBit/rdialog.cpp	/^void RDialog::accept()$/;"	f	class:RDialog	signature:()
accept	/home/viper/projects/RBit/rdialog.h	/^	virtual void accept();$/;"	p	class:RDialog	access:public	signature:()
accept	/home/viper/projects/RBit/rmessagebox.cpp	/^void RMessageBox::accept()$/;"	f	class:RMessageBox	signature:()
accept	/home/viper/projects/RBit/rmessagebox.h	/^    virtual void accept();$/;"	p	class:RMessageBox	access:public	signature:()
actionTriggered	/home/viper/projects/RBit/rscrollarea.cpp	/^void RScrollAreaBase::ScrollBar::actionTriggered(ScrollAction action)$/;"	f	class:RScrollAreaBase::ScrollBar	signature:(ScrollAction action)
actionTriggered	/home/viper/projects/RBit/rscrollarea.h	/^        virtual void actionTriggered(ScrollAction action);$/;"	p	class:RScrollAreaBase::ScrollBar	access:protected	signature:(ScrollAction action)
actionTriggered	/home/viper/projects/RBit/rscrollbar.cpp	/^void RScrollBar::actionTriggered(RScrollBar::ScrollAction)$/;"	f	class:RScrollBar	signature:(RScrollBar::ScrollAction)
actionTriggered	/home/viper/projects/RBit/rscrollbar.h	/^    virtual void actionTriggered(ScrollAction action);$/;"	p	class:RScrollBar	access:protected	signature:(ScrollAction action)
activateSubControl	/home/viper/projects/RBit/rcombobox.h	/^    void activateSubControl(SubControl c);$/;"	p	class:RComboBox	access:protected	signature:(SubControl c)
activateSubControl	/home/viper/projects/RBit/rscrollbar.cpp	/^void RScrollBar::activateSubControl(SubControl control)$/;"	f	class:RScrollBar	signature:(SubControl control)
activateSubControl	/home/viper/projects/RBit/rscrollbar.h	/^    void activateSubControl(SubControl c);$/;"	p	class:RScrollBar	access:protected	signature:(SubControl c)
activated	/home/viper/projects/RBit/rcombobox.cpp	/^    virtual void activated(Sint32 row, Sint32 column)$/;"	f	class:RComboBox::Popup	access:protected	signature:(Sint32 row, Sint32 column)
activated	/home/viper/projects/RBit/rcombobox.cpp	/^void RComboBox::activated(Sint32 row)$/;"	f	class:RComboBox	signature:(Sint32 row)
activated	/home/viper/projects/RBit/rcombobox.h	/^    virtual void activated(Sint32 row);$/;"	p	class:RComboBox	access:protected	signature:(Sint32 row)
activated	/home/viper/projects/RBit/rgridview.h	/^    virtual void activated(Sint32 row, Sint32 column)$/;"	f	class:RGridViewObserver	access:public	signature:(Sint32 row, Sint32 column)
addItem	/home/viper/projects/RBit/rcombobox.h	/^    void addItem(const char* text);$/;"	p	class:RComboBox	access:public	signature:(const char* text)
addItem	/home/viper/projects/RBit/rcombobox.h	/^inline void RComboBox::addItem(const char* text)$/;"	f	class:RComboBox	signature:(const char* text)
addLine	/home/viper/projects/RBit/rdrawutil.cpp	/^    void addLine(int pos, int len, Uint16 width);$/;"	p	struct:RTextParag	file:	access:public	signature:(int pos, int len, Uint16 width)
addLine	/home/viper/projects/RBit/rdrawutil.cpp	/^inline void RTextParag::addLine(int p, int l, Uint16 w)$/;"	f	class:RTextParag	signature:(int p, int l, Uint16 w)
adjust	/home/viper/projects/RBit/rrect.h	/^    void adjust(Sint16 x1, Sint16 y1, Sint16 x2, Sint16 y2);$/;"	p	class:RRect	access:public	signature:(Sint16 x1, Sint16 y1, Sint16 x2, Sint16 y2)
adjust	/home/viper/projects/RBit/rrect.h	/^inline void RRect::adjust(Sint16 dx1, Sint16 dy1, Sint16 dx2, Sint16 dy2)$/;"	f	class:RRect	signature:(Sint16 dx1, Sint16 dy1, Sint16 dx2, Sint16 dy2)
adjustLayout	/home/viper/projects/RBit/rmessagebox.cpp	/^void RMessageBox::adjustLayout()$/;"	f	class:RMessageBox	signature:()
adjustLayout	/home/viper/projects/RBit/rmessagebox.h	/^    void adjustLayout();$/;"	p	class:RMessageBox	access:private	signature:()
adjusted	/home/viper/projects/RBit/rrect.h	/^    RRect adjusted(Sint16 x1, Sint16 y1, Sint16 x2, Sint16 y2) const;$/;"	p	class:RRect	access:public	signature:(Sint16 x1, Sint16 y1, Sint16 x2, Sint16 y2) const
adjusted	/home/viper/projects/RBit/rrect.h	/^inline RRect RRect::adjusted(Sint16 dx1, Sint16 dy1, Sint16 dx2, Sint16 dy2) const$/;"	f	class:RRect	signature:(Sint16 dx1, Sint16 dy1, Sint16 dx2, Sint16 dy2) const
advance	/home/viper/projects/RBit/rsdlttf.cpp	/^	int advance;$/;"	m	struct:cached_glyph	file:	access:public
alignment	/home/viper/projects/RBit/rsimplegridmodel.h	/^            int alignment;$/;"	m	struct:RSimpleGridModel::Item::MetaData	access:public
alignment	/home/viper/projects/RBit/rsimpleheadermodel.h	/^            int alignment;$/;"	m	struct:RSimpleHeaderModel::Item::MetaData	access:public
alignmentOffset	/home/viper/projects/RBit/reditbox.cpp	/^RPoint REditBox::alignmentOffset() const$/;"	f	class:REditBox	signature:() const
alignmentOffset	/home/viper/projects/RBit/reditbox.h	/^    RPoint alignmentOffset() const;$/;"	p	class:REditBox	access:private	signature:() const
alnumSequence	/home/viper/projects/RBit/rrandomgenerator.h	/^    const char* alnumSequence(char* dst, Uint32 size) const$/;"	f	class:RRandomGenerator	access:public	signature:(char* dst, Uint32 size) const
alpha	/home/viper/projects/RBit/rcolor.h	/^    Uint8  alpha() const;$/;"	p	class:RColor	access:public	signature:() const
alpha	/home/viper/projects/RBit/rcolor.h	/^inline Uint8 RColor::alpha() const$/;"	f	class:RColor	signature:() const
alternateBase	/home/viper/projects/RBit/rpalette.h	/^    inline const RColor& alternateBase() const { return color(AlternateBase); }$/;"	f	class:RPalette	access:public	signature:() const
animMsec	/home/viper/projects/RBit/rbutton.cpp	/^    int animMsec;$/;"	m	class:RButtonPrivate	file:	access:public
animTicks	/home/viper/projects/RBit/rbutton.cpp	/^    uint animTicks;$/;"	m	class:RButtonPrivate	file:	access:public
animateClick	/home/viper/projects/RBit/rbutton.cpp	/^void RButton::animateClick(int msec)$/;"	f	class:RButton	signature:(int msec)
animateClick	/home/viper/projects/RBit/rbutton.h	/^    void animateClick(int msec = 100);$/;"	p	class:RButton	access:public	signature:(int msec = 100)
args	/home/viper/projects/RBit/rsdlttf.cpp	/^	FT_Open_Args args;$/;"	m	struct:_TTF_Font	file:	access:public
ascent	/home/viper/projects/RBit/rfont.h	/^    Uint8 ascent() const$/;"	f	class:RFont	access:public	signature:() const
ascent	/home/viper/projects/RBit/rsdlttf.cpp	/^	int ascent;$/;"	m	struct:_TTF_Font	file:	access:public
ascii	/home/viper/projects/RBit/rrandomgenerator.h	/^    inline char ascii() const$/;"	f	class:RRandomGenerator	access:public	signature:() const
autoRepeat	/home/viper/projects/RBit/rbutton.cpp	/^bool RButton::autoRepeat() const$/;"	f	class:RButton	signature:() const
autoRepeat	/home/viper/projects/RBit/rbutton.h	/^    bool autoRepeat() const;$/;"	p	class:RButton	access:public	signature:() const
backgroundColor	/home/viper/projects/RBit/rcombobox.cpp	/^        virtual const RColor* backgroundColor(Sint32 row, Sint32 column) const$/;"	f	class:RComboBox::Popup::PopupModel	access:public	signature:(Sint32 row, Sint32 column) const
backgroundColor	/home/viper/projects/RBit/rgridmodel.h	/^    virtual const RColor* backgroundColor(Sint32 row, Sint32 column) const$/;"	f	class:RGridModel	access:public	signature:(Sint32 row, Sint32 column) const
backgroundColor	/home/viper/projects/RBit/rheadermodel.h	/^    virtual const RColor* backgroundColor(Sint32 section) const$/;"	f	class:RHeaderModel	access:public	signature:(Sint32 section) const
backgroundColor	/home/viper/projects/RBit/rsimplegridmodel.cpp	/^const RColor* RSimpleGridModel::backgroundColor(Sint32 row, Sint32 column) const$/;"	f	class:RSimpleGridModel	signature:(Sint32 row, Sint32 column) const
backgroundColor	/home/viper/projects/RBit/rsimplegridmodel.h	/^            RColor backgroundColor;$/;"	m	struct:RSimpleGridModel::Item::MetaData	access:public
backgroundColor	/home/viper/projects/RBit/rsimplegridmodel.h	/^        const RColor& backgroundColor() const;$/;"	p	class:RSimpleGridModel::Item	access:public	signature:() const
backgroundColor	/home/viper/projects/RBit/rsimplegridmodel.h	/^    virtual const RColor* backgroundColor(Sint32 row, Sint32 column) const;$/;"	p	class:RSimpleGridModel	access:public	signature:(Sint32 row, Sint32 column) const
backgroundColor	/home/viper/projects/RBit/rsimplegridmodel.h	/^inline const RColor& RSimpleGridModel::Item::backgroundColor() const$/;"	f	class:RSimpleGridModel::Item	signature:() const
backgroundColor	/home/viper/projects/RBit/rsimpleheadermodel.cpp	/^const RColor* RSimpleHeaderModel::backgroundColor(Sint32 section) const$/;"	f	class:RSimpleHeaderModel	signature:(Sint32 section) const
backgroundColor	/home/viper/projects/RBit/rsimpleheadermodel.h	/^            RColor backgroundColor;$/;"	m	struct:RSimpleHeaderModel::Item::MetaData	access:public
backgroundColor	/home/viper/projects/RBit/rsimpleheadermodel.h	/^        const RColor& backgroundColor() const;$/;"	p	class:RSimpleHeaderModel::Item	access:public	signature:() const
backgroundColor	/home/viper/projects/RBit/rsimpleheadermodel.h	/^    virtual const RColor* backgroundColor(Sint32 section) const;$/;"	p	class:RSimpleHeaderModel	access:public	signature:(Sint32 section) const
backgroundColor	/home/viper/projects/RBit/rsimpleheadermodel.h	/^inline const RColor& RSimpleHeaderModel::Item::backgroundColor() const$/;"	f	class:RSimpleHeaderModel::Item	signature:() const
backgroundRole	/home/viper/projects/RBit/rwidget.cpp	/^RPalette::ColorRole RWidget::backgroundRole() const$/;"	f	class:RWidget	signature:() const
backgroundRole	/home/viper/projects/RBit/rwidget.h	/^    RPalette::ColorRole backgroundRole() const;$/;"	p	class:RWidget	access:public	signature:() const
backspace	/home/viper/projects/RBit/reditbox.cpp	/^void REditBox::backspace()$/;"	f	class:REditBox	signature:()
backspace	/home/viper/projects/RBit/reditbox.h	/^	virtual void backspace();$/;"	p	class:REditBox	access:public	signature:()
base	/home/viper/projects/RBit/rpalette.h	/^    inline const RColor& base() const { return color(Base); }$/;"	f	class:RPalette	access:public	signature:() const
bitmap	/home/viper/projects/RBit/rsdlttf.cpp	/^	FT_Bitmap bitmap;$/;"	m	struct:cached_glyph	file:	access:public
black	/home/viper/projects/RBit/rbit.h	/^        black,$/;"	e	enum:RBit::GlobalColor
blendColor	/home/viper/projects/RBit/rcolormanager.cpp	/^    virtual Uint32 blendColor(const RColor& fg, Uint32 bg, Uint8 i, SDL_PixelFormat* format);$/;"	p	class:RBlendingMap	file:	access:public	signature:(const RColor& fg, Uint32 bg, Uint8 i, SDL_PixelFormat* format)
blendColor	/home/viper/projects/RBit/rcolormanager.cpp	/^    virtual Uint32 blendColor(const RColor& fg, Uint32 bg, Uint8 i, SDL_PixelFormat* format);$/;"	p	class:RBlendingMap1	file:	access:public	signature:(const RColor& fg, Uint32 bg, Uint8 i, SDL_PixelFormat* format)
blendColor	/home/viper/projects/RBit/rcolormanager.cpp	/^Uint32 RBlendingMap1::blendColor(const RColor& fg, Uint32 bgi, Uint8 intencity, SDL_PixelFormat* format)$/;"	f	class:RBlendingMap1	signature:(const RColor& fg, Uint32 bgi, Uint8 intencity, SDL_PixelFormat* format)
blendColor	/home/viper/projects/RBit/rcolormanager.cpp	/^Uint32 RBlendingMap::blendColor(const RColor& fg, Uint32 bgi, Uint8 i, SDL_PixelFormat* format)$/;"	f	class:RBlendingMap	signature:(const RColor& fg, Uint32 bgi, Uint8 i, SDL_PixelFormat* format)
blendColor	/home/viper/projects/RBit/rcolormanager.cpp	/^Uint32 RColorManager::blendColor(const RColor& fg, Uint32 bg, Uint8 i, SDL_PixelFormat* format)$/;"	f	class:RColorManager	signature:(const RColor& fg, Uint32 bg, Uint8 i, SDL_PixelFormat* format)
blendColor	/home/viper/projects/RBit/rcolormanager.h	/^    Uint32 blendColor(const RColor& fg, Uint32 bg, Uint8 i, SDL_PixelFormat* format = SDL_GetVideoSurface()->format);$/;"	p	class:RColorManager	access:public	signature:(const RColor& fg, Uint32 bg, Uint8 i, SDL_PixelFormat* format = SDL_GetVideoSurface()->format)
blue	/home/viper/projects/RBit/rbit.h	/^        blue,$/;"	e	enum:RBit::GlobalColor
blue	/home/viper/projects/RBit/rcolor.h	/^	Uint8  blue() const;$/;"	p	class:RColor	access:public	signature:() const
blue	/home/viper/projects/RBit/rcolor.h	/^inline Uint8 RColor::blue() const$/;"	f	class:RColor	signature:() const
bottom	/home/viper/projects/RBit/rrect.h	/^    Sint16 bottom() const;$/;"	p	class:RRect	access:public	signature:() const
bottom	/home/viper/projects/RBit/rrect.h	/^inline Sint16 RRect::bottom() const$/;"	f	class:RRect	signature:() const
bottomLeft	/home/viper/projects/RBit/rrect.h	/^    RPoint bottomLeft() const;$/;"	p	class:RRect	access:public	signature:() const
bottomLeft	/home/viper/projects/RBit/rrect.h	/^inline RPoint RRect::bottomLeft() const$/;"	f	class:RRect	signature:() const
bottomRight	/home/viper/projects/RBit/rrect.h	/^    RPoint bottomRight() const;$/;"	p	class:RRect	access:public	signature:() const
bottomRight	/home/viper/projects/RBit/rrect.h	/^inline RPoint RRect::bottomRight() const$/;"	f	class:RRect	signature:() const
bottomTextMargin	/home/viper/projects/RBit/rgridview.h	/^    Sint32 bottomTextMargin() const;$/;"	p	class:RGridView	access:public	signature:() const
bottomTextMargin	/home/viper/projects/RBit/rgridview.h	/^inline Sint32 RGridView::bottomTextMargin() const$/;"	f	class:RGridView	signature:() const
bound	/home/viper/projects/RBit/rscrollbar.h	/^    Sint32 bound(Sint32);$/;"	p	class:RScrollBar	access:private	signature:(Sint32)
bound	/home/viper/projects/RBit/rscrollbar.h	/^inline Sint32 RScrollBar::bound(Sint32 value)$/;"	f	class:RScrollBar	signature:(Sint32 value)
boundedTo	/home/viper/projects/RBit/rsize.h	/^    RSize boundedTo(const RSize&) const;$/;"	p	class:RSize	access:public	signature:(const RSize&) const
boundedTo	/home/viper/projects/RBit/rsize.h	/^inline RSize RSize::boundedTo(const RSize& s) const$/;"	f	class:RSize	signature:(const RSize& s) const
brightText	/home/viper/projects/RBit/rpalette.h	/^    inline const RColor& brightText() const { return color(BrightText); }$/;"	f	class:RPalette	access:public	signature:() const
buff	/home/viper/projects/RBit/rbutton.cpp	/^    RString buff;$/;"	m	class:RButtonPrivate	file:	access:public
button	/home/viper/projects/RBit/rpalette.h	/^    inline const RColor& button() const { return color(Button); }$/;"	f	class:RPalette	access:public	signature:() const
buttonSize	/home/viper/projects/RBit/rmessagebox.h	/^    const RSize& buttonSize() const;$/;"	p	class:RMessageBox	access:public	signature:() const
buttonSize	/home/viper/projects/RBit/rmessagebox.h	/^inline const RSize& RMessageBox::buttonSize() const$/;"	f	class:RMessageBox	signature:() const
buttonText	/home/viper/projects/RBit/rpalette.h	/^    inline const RColor& buttonText() const { return color(ButtonText); }$/;"	f	class:RPalette	access:public	signature:() const
c	/home/viper/projects/RBit/rcolormanager.cpp	/^        Uint8 c;    \/\/ ˆ‚ÂÚ$/;"	m	struct:RBlendingMap1::ColorNode	file:	access:public
c_glyph	/home/viper/projects/RBit/rsdlttf.cpp	/^} c_glyph;$/;"	t	typeref:struct:cached_glyph	file:
cache	/home/viper/projects/RBit/rsdlttf.cpp	/^	c_glyph cache[256];	$/;"	m	struct:_TTF_Font	file:	access:public
cached	/home/viper/projects/RBit/rsdlttf.cpp	/^	Uint16 cached;$/;"	m	struct:cached_glyph	file:	access:public
cached_glyph	/home/viper/projects/RBit/rsdlttf.cpp	/^typedef struct cached_glyph {$/;"	s	file:
cached_glyph::advance	/home/viper/projects/RBit/rsdlttf.cpp	/^	int advance;$/;"	m	struct:cached_glyph	file:	access:public
cached_glyph::bitmap	/home/viper/projects/RBit/rsdlttf.cpp	/^	FT_Bitmap bitmap;$/;"	m	struct:cached_glyph	file:	access:public
cached_glyph::cached	/home/viper/projects/RBit/rsdlttf.cpp	/^	Uint16 cached;$/;"	m	struct:cached_glyph	file:	access:public
cached_glyph::index	/home/viper/projects/RBit/rsdlttf.cpp	/^	FT_UInt index;$/;"	m	struct:cached_glyph	file:	access:public
cached_glyph::maxx	/home/viper/projects/RBit/rsdlttf.cpp	/^	int maxx;$/;"	m	struct:cached_glyph	file:	access:public
cached_glyph::maxy	/home/viper/projects/RBit/rsdlttf.cpp	/^	int maxy;$/;"	m	struct:cached_glyph	file:	access:public
cached_glyph::minx	/home/viper/projects/RBit/rsdlttf.cpp	/^	int minx;$/;"	m	struct:cached_glyph	file:	access:public
cached_glyph::miny	/home/viper/projects/RBit/rsdlttf.cpp	/^	int miny;$/;"	m	struct:cached_glyph	file:	access:public
cached_glyph::pixmap	/home/viper/projects/RBit/rsdlttf.cpp	/^	FT_Bitmap pixmap;$/;"	m	struct:cached_glyph	file:	access:public
cached_glyph::stored	/home/viper/projects/RBit/rsdlttf.cpp	/^	int stored;$/;"	m	struct:cached_glyph	file:	access:public
cached_glyph::yoffset	/home/viper/projects/RBit/rsdlttf.cpp	/^	int yoffset;$/;"	m	struct:cached_glyph	file:	access:public
caption	/home/viper/projects/RBit/rmessagebox.h	/^    const char* caption() const;$/;"	p	class:RMessageBox	access:public	signature:() const
center	/home/viper/projects/RBit/rrect.h	/^    RPoint center() const;$/;"	p	class:RRect	access:public	signature:() const
center	/home/viper/projects/RBit/rrect.h	/^inline RPoint RRect::center() const$/;"	f	class:RRect	signature:() const
character	/home/viper/projects/RBit/reditbox.cpp	/^bool REditBox::character(char ch)$/;"	f	class:REditBox	signature:(char ch)
character	/home/viper/projects/RBit/reditbox.h	/^    virtual bool character(char ch);$/;"	p	class:REditBox	access:public	signature:(char ch)
checkState	/home/viper/projects/RBit/rcheckbox.h	/^    RBit::CheckState checkState() const;$/;"	p	class:RCheckBox	access:public	signature:() const
checkState	/home/viper/projects/RBit/rcheckbox.h	/^inline RBit::CheckState RCheckBox::checkState() const$/;"	f	class:RCheckBox	signature:() const
childAt	/home/viper/projects/RBit/rwidget.cpp	/^RWidget* RWidget::childAt(const RPoint& p) const$/;"	f	class:RWidget	signature:(const RPoint& p) const
childAt	/home/viper/projects/RBit/rwidget.h	/^    RWidget* childAt(Sint16 x, Sint16 y) const;$/;"	p	class:RWidget	access:public	signature:(Sint16 x, Sint16 y) const
childAt	/home/viper/projects/RBit/rwidget.h	/^    RWidget* childAt(const RPoint& p) const;  $/;"	p	class:RWidget	access:public	signature:(const RPoint& p) const
childAt	/home/viper/projects/RBit/rwidget.h	/^inline RWidget* RWidget::childAt(Sint16 x, Sint16 y) const$/;"	f	class:RWidget	signature:(Sint16 x, Sint16 y) const
circularLinkAfter	/home/viper/projects/RBit/rsimplelist.h	/^	inline RSimpleListNodeBase* circularLinkAfter(RSimpleListNodeBase* after) $/;"	f	class:RSimpleListNodeBase	access:protected	signature:(RSimpleListNodeBase* after)
circularLinkBefore	/home/viper/projects/RBit/rsimplelist.h	/^	inline RSimpleListNodeBase* circularLinkBefore(RSimpleListNodeBase* before) $/;"	f	class:RSimpleListNodeBase	access:protected	signature:(RSimpleListNodeBase* before)
className	/home/viper/projects/RBit/rwidget.h	/^    inline const char* className() const$/;"	f	class:RMetaObject	access:public	signature:() const
clear	/home/viper/projects/RBit/rcombobox.cpp	/^void RComboBox::clear()$/;"	f	class:RComboBox	signature:()
clear	/home/viper/projects/RBit/rcombobox.h	/^    void clear();$/;"	p	class:RComboBox	access:public	signature:()
clearFormating	/home/viper/projects/RBit/rmultilinelabel.h	/^	void clearFormating();$/;"	p	class:RMultilineLabel	access:private	signature:()
clearFormating	/home/viper/projects/RBit/rmultilinelabel.h	/^inline void RMultilineLabel::clearFormating()$/;"	f	class:RMultilineLabel	signature:()
clearLines	/home/viper/projects/RBit/rdrawutil.cpp	/^    void clearLines();$/;"	p	struct:RTextParag	file:	access:public	signature:()
clearLines	/home/viper/projects/RBit/rdrawutil.cpp	/^inline void RTextParag::clearLines()$/;"	f	class:RTextParag	signature:()
clearSdlPoll	/home/viper/projects/RBit/rapplication.cpp	/^void RApplication::clearSdlPoll()$/;"	f	class:RApplication	signature:()
clearSdlPoll	/home/viper/projects/RBit/rapplication.h	/^	void clearSdlPoll();$/;"	p	class:RApplication	access:public	signature:()
clearWFlags	/home/viper/projects/RBit/rwidget.h	/^    void clearWFlags(RWFlags f);$/;"	p	class:RWidget	access:public	signature:(RWFlags f)
clearWFlags	/home/viper/projects/RBit/rwidget.h	/^inline void RWidget::clearWFlags(RWFlags f)$/;"	f	class:RWidget	signature:(RWFlags f)
click	/home/viper/projects/RBit/rbutton.cpp	/^void RButton::click()$/;"	f	class:RButton	signature:()
click	/home/viper/projects/RBit/rbutton.h	/^    virtual void click();$/;"	p	class:RButton	access:public	signature:()
click	/home/viper/projects/RBit/rcheckbox.cpp	/^void RCheckBox::click()$/;"	f	class:RCheckBox	signature:()
click	/home/viper/projects/RBit/rcheckbox.h	/^    virtual void click();$/;"	p	class:RCheckBox	access:public	signature:()
click	/home/viper/projects/RBit/rmessagebox.h	/^        virtual void click()$/;"	f	class:RMessageBox::PrivateButton	access:public	signature:()
clicked	/home/viper/projects/RBit/rcombobox.cpp	/^    virtual void clicked(Sint32 row, Sint32 column)$/;"	f	class:RComboBox::Popup	access:protected	signature:(Sint32 row, Sint32 column)
clicked	/home/viper/projects/RBit/rgridview.h	/^    virtual void clicked(Sint32 row, Sint32 column)$/;"	f	class:RGridViewObserver	access:public	signature:(Sint32 row, Sint32 column)
clone	/home/viper/projects/RBit/rsimplegridmodel.h	/^        virtual Item* clone() const;$/;"	p	class:RSimpleGridModel::Item	access:public	signature:() const
clone	/home/viper/projects/RBit/rsimplegridmodel.h	/^inline RSimpleGridModel::Item* RSimpleGridModel::Item::clone() const$/;"	f	class:RSimpleGridModel::Item	signature:() const
clone	/home/viper/projects/RBit/rsimpleheadermodel.h	/^        virtual Item* clone() const;$/;"	p	class:RSimpleHeaderModel::Item	access:public	signature:() const
clone	/home/viper/projects/RBit/rsimpleheadermodel.h	/^inline RSimpleHeaderModel::Item* RSimpleHeaderModel::Item::clone() const$/;"	f	class:RSimpleHeaderModel::Item	signature:() const
close	/home/viper/projects/RBit/rwidget.cpp	/^bool RWidget::close(bool forcibly)$/;"	f	class:RWidget	signature:(bool forcibly)
close	/home/viper/projects/RBit/rwidget.h	/^    bool close();$/;"	p	class:RWidget	access:public	signature:()
close	/home/viper/projects/RBit/rwidget.h	/^    bool close(bool forcibly);$/;"	p	class:RWidget	access:private	signature:(bool forcibly)
close	/home/viper/projects/RBit/rwidget.h	/^inline bool RWidget::close()$/;"	f	class:RWidget	signature:()
closeWidgets	/home/viper/projects/RBit/rapplication.cpp	/^void RApplication::closeWidgets()$/;"	f	class:RApplication	signature:()
closeWidgets	/home/viper/projects/RBit/rapplication.h	/^    void closeWidgets();$/;"	p	class:RApplication	access:private	signature:()
close_helper	/home/viper/projects/RBit/rwidget.cpp	/^bool RWidget::close_helper(bool forcibly)$/;"	f	class:RWidget	signature:(bool forcibly)
close_helper	/home/viper/projects/RBit/rwidget.h	/^    bool close_helper(bool forcibly);$/;"	p	class:RWidget	access:private	signature:(bool forcibly)
col	/home/viper/projects/RBit/rpalette.cpp	/^    RColor col[RPalette::NColorRoles];$/;"	m	class:RPalette::RPalettePrivate	file:	access:public
color	/home/viper/projects/RBit/rpalette.cpp	/^const RColor& RPalette::color(ColorRole cr) const$/;"	f	class:RPalette	signature:(ColorRole cr) const
color	/home/viper/projects/RBit/rpalette.h	/^    const RColor& color(ColorRole cr) const;$/;"	p	class:RPalette	access:public	signature:(ColorRole cr) const
columnAt	/home/viper/projects/RBit/rgridview.h	/^    Sint32 columnAt(Sint16 x) const;$/;"	p	class:RGridView	access:public	signature:(Sint16 x) const
columnAt	/home/viper/projects/RBit/rgridview.h	/^inline Sint32 RGridView::columnAt(Sint16 x) const$/;"	f	class:RGridView	signature:(Sint16 x) const
columnCount	/home/viper/projects/RBit/rgridmodel.h	/^    virtual Uint32 columnCount() const = 0;$/;"	p	class:RGridModel	access:public	signature:() const
columnCount	/home/viper/projects/RBit/rsimplegridmodel.h	/^    virtual Uint32 columnCount() const { return m_columns; }$/;"	f	class:RSimpleGridModel	access:public	signature:() const
columnCountChanged	/home/viper/projects/RBit/rgridview.cpp	/^void RGridView::columnCountChanged(Sint32, Sint32)$/;"	f	class:RGridView	signature:(Sint32, Sint32)
columnCountChanged	/home/viper/projects/RBit/rgridview.h	/^    void columnCountChanged(Sint32 oldCount, Sint32 newCount);$/;"	p	class:RGridView	access:protected	signature:(Sint32 oldCount, Sint32 newCount)
columnResized	/home/viper/projects/RBit/rgridview.cpp	/^void RGridView::columnResized(Sint32 column, Sint32, Sint32)$/;"	f	class:RGridView	signature:(Sint32 column, Sint32, Sint32)
columnResized	/home/viper/projects/RBit/rgridview.h	/^    void columnResized(Sint32 column, Sint32 oldWidth, Sint32 newWidth);$/;"	p	class:RGridView	access:protected	signature:(Sint32 column, Sint32 oldWidth, Sint32 newWidth)
columnViewportPosition	/home/viper/projects/RBit/rgridview.h	/^    Sint32 columnViewportPosition(Sint32 column) const;$/;"	p	class:RGridView	access:public	signature:(Sint32 column) const
columnViewportPosition	/home/viper/projects/RBit/rgridview.h	/^inline Sint32 RGridView::columnViewportPosition(Sint32 column) const$/;"	f	class:RGridView	signature:(Sint32 column) const
columnWidth	/home/viper/projects/RBit/rgridview.h	/^    Uint16 columnWidth(Sint32 column) const;    $/;"	p	class:RGridView	access:public	signature:(Sint32 column) const
columnWidth	/home/viper/projects/RBit/rgridview.h	/^inline Uint16 RGridView::columnWidth(Sint32 column) const$/;"	f	class:RGridView	signature:(Sint32 column) const
columnsAboutToBeInserted	/home/viper/projects/RBit/rgridmodel.h	/^    virtual void columnsAboutToBeInserted(Sint32 firstColumn, Sint32 lastColumn)$/;"	f	class:RGridModelObserverBase	access:protected	signature:(Sint32 firstColumn, Sint32 lastColumn)
columnsAboutToBeRemoved	/home/viper/projects/RBit/rgridmodel.h	/^    virtual void columnsAboutToBeRemoved(Sint32 firstColumn, Sint32 lastColumn)$/;"	f	class:RGridModelObserverBase	access:protected	signature:(Sint32 firstColumn, Sint32 lastColumn)
columnsInserted	/home/viper/projects/RBit/rgridmodel.h	/^    virtual void columnsInserted(Sint32 firstColumn, Sint32 lastColumn)$/;"	f	class:RGridModelObserverBase	access:protected	signature:(Sint32 firstColumn, Sint32 lastColumn)
columnsInserted	/home/viper/projects/RBit/rgridview.cpp	/^void RGridView::columnsInserted(Sint32 firstColumn, Sint32 lastColumn)    $/;"	f	class:RGridView	signature:(Sint32 firstColumn, Sint32 lastColumn)
columnsInserted	/home/viper/projects/RBit/rgridview.h	/^    virtual void columnsInserted(Sint32 firstColumn, Sint32 lastColumn);    $/;"	p	class:RGridView	access:protected	signature:(Sint32 firstColumn, Sint32 lastColumn)
columnsRemoved	/home/viper/projects/RBit/rgridmodel.h	/^    virtual void columnsRemoved(Sint32 firstColumn, Sint32 lastColumn)$/;"	f	class:RGridModelObserverBase	access:protected	signature:(Sint32 firstColumn, Sint32 lastColumn)
columnsRemoved	/home/viper/projects/RBit/rgridview.cpp	/^void RGridView::columnsRemoved(Sint32 firstColumn, Sint32 lastColumn)$/;"	f	class:RGridView	signature:(Sint32 firstColumn, Sint32 lastColumn)
columnsRemoved	/home/viper/projects/RBit/rgridview.h	/^    virtual void columnsRemoved(Sint32 firstColumn, Sint32 lastColumn);    $/;"	p	class:RGridView	access:protected	signature:(Sint32 firstColumn, Sint32 lastColumn)
compare	/home/viper/projects/RBit/rgridmodeldatatype.h	/^    virtual int compare(const char* lh, const char* rh) const = 0;$/;"	p	class:RModelDataTypeBase	access:public	signature:(const char* lh, const char* rh) const
compare	/home/viper/projects/RBit/rgridmodeldatatype.h	/^    virtual int compare(const char* lh, const char* rh) const$/;"	f	class:RModelDataType	access:public	signature:(const char* lh, const char* rh) const
contains	/home/viper/projects/RBit/rrect.h	/^    bool contains(Sint16 x, Sint16 y, bool proper=false) const;$/;"	p	class:RRect	access:public	signature:(Sint16 x, Sint16 y, bool proper=false) const
contains	/home/viper/projects/RBit/rrect.h	/^    bool contains(const RPoint& p, bool proper=false) const;    $/;"	p	class:RRect	access:public	signature:(const RPoint& p, bool proper=false) const
contains	/home/viper/projects/RBit/rrect.h	/^    bool contains(const RRect& r, bool proper=false) const;$/;"	p	class:RRect	access:public	signature:(const RRect& r, bool proper=false) const
contains	/home/viper/projects/RBit/rrect.h	/^inline bool RRect::contains(Sint16 x, Sint16 y, bool proper) const$/;"	f	class:RRect	signature:(Sint16 x, Sint16 y, bool proper) const
contains	/home/viper/projects/RBit/rrect.h	/^inline bool RRect::contains(const RPoint &p, bool proper) const$/;"	f	class:RRect	signature:(const RPoint &p, bool proper) const
contains	/home/viper/projects/RBit/rrect.h	/^inline bool RRect::contains(const RRect& r, bool proper) const$/;"	f	class:RRect	signature:(const RRect& r, bool proper) const
contains	/home/viper/projects/RBit/rsimplelist.h	/^    inline bool contains(Node* node) const$/;"	f	class:RSimpleList	access:public	signature:(Node* node) const
contentsRect	/home/viper/projects/RBit/rframepainter.cpp	/^RRect RFramePainter::contentsRect(const RRect& frame) const$/;"	f	class:RFramePainter	signature:(const RRect& frame) const
contentsRect	/home/viper/projects/RBit/rframepainter.h	/^    RRect contentsRect(const RRect& frame) const;$/;"	p	class:RFramePainter	access:protected	signature:(const RRect& frame) const
copy	/home/viper/projects/RBit/rarraycontainer.h	/^	void    copy(const T* array, Uint32 size);$/;"	p	class:RArrayContainer	access:public	signature:(const T* array, Uint32 size)
copy	/home/viper/projects/RBit/rarraycontainer.h	/^inline void RArrayContainer<T>::copy(const T* array, Uint32 size)$/;"	f	class:RArrayContainer	signature:(const T* array, Uint32 size)
count	/home/viper/projects/RBit/rcombobox.cpp	/^Sint32 RComboBox::count() const$/;"	f	class:RComboBox	signature:() const
count	/home/viper/projects/RBit/rcombobox.h	/^    Sint32 count() const;$/;"	p	class:RComboBox	access:public	signature:() const
count	/home/viper/projects/RBit/rheaderview.cpp	/^Uint32 RHeaderView::count() const$/;"	f	class:RHeaderView	signature:() const
count	/home/viper/projects/RBit/rheaderview.h	/^    Uint32 count() const;$/;"	p	class:RHeaderView	access:public	signature:() const
count	/home/viper/projects/RBit/rsharedptr.h	/^        int count() const$/;"	f	class:RSharedPtr::SharedCounter	access:public	signature:() const
count	/home/viper/projects/RBit/rsharedptr.h	/^        int count() const$/;"	f	class:RSharedPtr::SharedCounterHelperBase	access:public	signature:() const
createBlendingMap	/home/viper/projects/RBit/rcolormanager.cpp	/^void RColorManager::createBlendingMap()$/;"	f	class:RColorManager	signature:()
createBlendingMap	/home/viper/projects/RBit/rcolormanager.h	/^    void createBlendingMap();$/;"	p	class:RColorManager	access:private	signature:()
createButton	/home/viper/projects/RBit/rmessagebox.cpp	/^RButton* RMessageBox::createButton(int button)$/;"	f	class:RMessageBox	signature:(int button)
createButton	/home/viper/projects/RBit/rmessagebox.h	/^    RButton* createButton(int button);   $/;"	p	class:RMessageBox	access:private	signature:(int button)
createCursors	/home/viper/projects/RBit/rsplitter.cpp	/^	void createCursors()$/;"	f	class:RSplitterPrivate	access:public	signature:()
createFont	/home/viper/projects/RBit/rapplication.cpp	/^TTF_Font* RApplication::createFont(const char* font, Uint8 size) const$/;"	f	class:RApplication	signature:(const char* font, Uint8 size) const
createFont	/home/viper/projects/RBit/rapplication.h	/^    virtual TTF_Font* createFont(const char* font, Uint8 size) const;$/;"	p	class:RApplication	access:public	signature:(const char* font, Uint8 size) const
createItem	/home/viper/projects/RBit/rsimplegridmodel.h	/^    Item* createItem() const;$/;"	p	class:RSimpleGridModel	access:public	signature:() const
createItem	/home/viper/projects/RBit/rsimplegridmodel.h	/^inline RSimpleGridModel::Item* RSimpleGridModel::createItem() const$/;"	f	class:RSimpleGridModel	signature:() const
createItem	/home/viper/projects/RBit/rsimpleheadermodel.h	/^    Item* createItem() const;$/;"	p	class:RSimpleHeaderModel	access:public	signature:() const
createItem	/home/viper/projects/RBit/rsimpleheadermodel.h	/^inline RSimpleHeaderModel::Item* RSimpleHeaderModel::createItem() const$/;"	f	class:RSimpleHeaderModel	signature:() const
createViewport	/home/viper/projects/RBit/rgridview.cpp	/^RWidget* RGridView::createViewport(RWidget* parent, RWFlags flags)$/;"	f	class:RGridView	signature:(RWidget* parent, RWFlags flags)
createViewport	/home/viper/projects/RBit/rgridview.h	/^    virtual RWidget* createViewport(RWidget* parent, RWFlags flags);$/;"	p	class:RGridView	access:protected	signature:(RWidget* parent, RWFlags flags)
createViewport	/home/viper/projects/RBit/rscrollarea.cpp	/^RWidget* RScrollArea::createViewport(RWidget* parent, RWFlags flags)$/;"	f	class:RScrollArea	signature:(RWidget* parent, RWFlags flags)
createViewport	/home/viper/projects/RBit/rscrollarea.cpp	/^RWidget* RScrollAreaBase::createViewport(RWidget* parent, RWFlags flags)$/;"	f	class:RScrollAreaBase	signature:(RWidget* parent, RWFlags flags)
createViewport	/home/viper/projects/RBit/rscrollarea.h	/^    virtual RWidget* createViewport(RWidget* parent, RWFlags flags);$/;"	p	class:RScrollArea	access:protected	signature:(RWidget* parent, RWFlags flags)
createViewport	/home/viper/projects/RBit/rscrollarea.h	/^    virtual RWidget* createViewport(RWidget* parent, RWFlags flags);$/;"	p	class:RScrollAreaBase	access:protected	signature:(RWidget* parent, RWFlags flags)
createViewport	/home/viper/projects/RBit/rscrollwidgetarea.h	/^    virtual RWidget* createViewport(RWidget* parent, RWFlags flags);$/;"	p	class:RScrollWidgetAreaBase	access:protected	signature:(RWidget* parent, RWFlags flags)
createViewport	/home/viper/projects/RBit/rscrollwidgetarea.h	/^inline RWidget* RScrollWidgetAreaBase::createViewport(RWidget* parent, RWFlags flags)$/;"	f	class:RScrollWidgetAreaBase	signature:(RWidget* parent, RWFlags flags)
createWidget	/home/viper/projects/RBit/rscrollwidgetarea.h	/^    virtual RWidget* createWidget(RWidget* parent, RWFlags flags);    $/;"	p	class:RScrollWidgetArea	access:protected	signature:(RWidget* parent, RWFlags flags)
createWidget	/home/viper/projects/RBit/rscrollwidgetarea.h	/^    virtual RWidget* createWidget(RWidget* parent, RWFlags flags)=0;$/;"	p	class:RScrollWidgetAreaBase	access:protected	signature:(RWidget* parent, RWFlags flags)
createWidget	/home/viper/projects/RBit/rscrollwidgetarea.h	/^inline RWidget* RScrollWidgetArea<W>::createWidget(RWidget* parent, RWFlags flags)    $/;"	f	class:RScrollWidgetArea	signature:(RWidget* parent, RWFlags flags)
create_cursor	/home/viper/projects/RBit/rsplitter.cpp	/^	SDL_Cursor *create_cursor(const char *image[])$/;"	f	namespace:__anon23	signature:(const char *image[])
critical	/home/viper/projects/RBit/rmessagebox.cpp	/^int RMessageBox::critical(RWidget* parent, const char* caption, const char* text, $/;"	f	class:RMessageBox	signature:(RWidget* parent, const char* caption, const char* text, int button0, int button1, int button2)
critical	/home/viper/projects/RBit/rmessagebox.h	/^    static int critical(RWidget* parent, const char* caption, const char* text, $/;"	p	class:RMessageBox	access:public	signature:(RWidget* parent, const char* caption, const char* text, int button0 = Ok | Default | Escape, int button1 = NoButton, int button2 = NoButton)
criticalBmp	/home/viper/projects/RBit/rmessagebox.cpp	/^    const unsigned char criticalBmp[] = {$/;"	v
current	/home/viper/projects/RBit/rsdlttf.cpp	/^	c_glyph *current;$/;"	m	struct:_TTF_Font	file:	access:public
currentColumn	/home/viper/projects/RBit/rgridview.h	/^    Sint32 currentColumn() const;    $/;"	p	class:RGridView	access:public	signature:() const
currentColumn	/home/viper/projects/RBit/rgridview.h	/^inline Sint32 RGridView::currentColumn() const$/;"	f	class:RGridView	signature:() const
currentColumnChanged	/home/viper/projects/RBit/rgridview.h	/^    virtual void currentColumnChanged(Sint32 oldColumn, Sint32 newColumn)$/;"	f	class:RGridViewObserver	access:public	signature:(Sint32 oldColumn, Sint32 newColumn)
currentRow	/home/viper/projects/RBit/rcombobox.cpp	/^Sint32 RComboBox::currentRow() const$/;"	f	class:RComboBox	signature:() const
currentRow	/home/viper/projects/RBit/rcombobox.h	/^    Sint32 currentRow() const;$/;"	p	class:RComboBox	access:public	signature:() const
currentRow	/home/viper/projects/RBit/rgridview.h	/^    Sint32 currentRow() const;$/;"	p	class:RGridView	access:public	signature:() const
currentRow	/home/viper/projects/RBit/rgridview.h	/^inline Sint32 RGridView::currentRow() const$/;"	f	class:RGridView	signature:() const
currentRowChanged	/home/viper/projects/RBit/rcombobox.cpp	/^    virtual void currentRowChanged(Sint32 oldRow, Sint32 newRow) $/;"	f	class:RComboBox::Popup	access:protected	signature:(Sint32 oldRow, Sint32 newRow)
currentRowChanged	/home/viper/projects/RBit/rcombobox.cpp	/^void RComboBox::currentRowChanged(Sint32 row)$/;"	f	class:RComboBox	signature:(Sint32 row)
currentRowChanged	/home/viper/projects/RBit/rcombobox.h	/^    virtual void currentRowChanged(Sint32 row);$/;"	p	class:RComboBox	access:protected	signature:(Sint32 row)
currentRowChanged	/home/viper/projects/RBit/rgridview.h	/^    virtual void currentRowChanged(Sint32 oldRow, Sint32 newRow) $/;"	f	class:RGridViewObserver	access:public	signature:(Sint32 oldRow, Sint32 newRow)
cursorBackward	/home/viper/projects/RBit/reditbox.cpp	/^void REditBox::cursorBackward(bool mark)$/;"	f	class:REditBox	signature:(bool mark)
cursorBackward	/home/viper/projects/RBit/reditbox.h	/^    void cursorBackward(bool mark);    $/;"	p	class:REditBox	access:public	signature:(bool mark)
cursorFlashTime	/home/viper/projects/RBit/rapplication.h	/^    uint cursorFlashTime() const;$/;"	p	class:RApplication	access:public	signature:() const
cursorFlashTime	/home/viper/projects/RBit/rapplication.h	/^inline uint RApplication::cursorFlashTime() const$/;"	f	class:RApplication	signature:() const
cursorForward	/home/viper/projects/RBit/reditbox.cpp	/^void REditBox::cursorForward(bool mark)$/;"	f	class:REditBox	signature:(bool mark)
cursorForward	/home/viper/projects/RBit/reditbox.h	/^    void cursorForward(bool mark);$/;"	p	class:REditBox	access:public	signature:(bool mark)
cursorInternalRect	/home/viper/projects/RBit/reditbox.cpp	/^RRect REditBox::cursorInternalRect() const$/;"	f	class:REditBox	signature:() const
cursorInternalRect	/home/viper/projects/RBit/reditbox.h	/^    RRect cursorInternalRect() const;$/;"	p	class:REditBox	access:private	signature:() const
cursorInternalX	/home/viper/projects/RBit/reditbox.cpp	/^Sint32 REditBox::cursorInternalX() const$/;"	f	class:REditBox	signature:() const
cursorInternalX	/home/viper/projects/RBit/reditbox.h	/^    Sint32 cursorInternalX() const;$/;"	p	class:REditBox	access:private	signature:() const
cursorPosition	/home/viper/projects/RBit/reditbox.h	/^    Sint32 cursorPosition() const;$/;"	p	class:REditBox	access:public	signature:() const
cursorPosition	/home/viper/projects/RBit/reditbox.h	/^inline Sint32 REditBox::cursorPosition() const$/;"	f	class:REditBox	signature:() const
cursorRect	/home/viper/projects/RBit/reditbox.cpp	/^RRect REditBox::cursorRect() const$/;"	f	class:REditBox	signature:() const
cursorRect	/home/viper/projects/RBit/reditbox.h	/^    RRect cursorRect() const;$/;"	p	class:REditBox	access:protected	signature:() const
cursorSize	/home/viper/projects/RBit/reditbox.cpp	/^RSize REditBox::cursorSize() const$/;"	f	class:REditBox	signature:() const
cursorSize	/home/viper/projects/RBit/reditbox.h	/^    RSize cursorSize() const; $/;"	p	class:REditBox	access:private	signature:() const
cyan	/home/viper/projects/RBit/rbit.h	/^        cyan,$/;"	e	enum:RBit::GlobalColor
d	/home/viper/projects/RBit/libRBit.so	/^/;"	v
dark	/home/viper/projects/RBit/rcolor.cpp	/^RColor RColor::dark(Uint8 factor) const$/;"	f	class:RColor	signature:(Uint8 factor) const
dark	/home/viper/projects/RBit/rcolor.h	/^    RColor dark(Uint8 factor = 200) const;$/;"	p	class:RColor	access:public	signature:(Uint8 factor = 200) const
dark	/home/viper/projects/RBit/rpalette.h	/^    inline const RColor& dark() const { return color(Dark); }$/;"	f	class:RPalette	access:public	signature:() const
darkBlue	/home/viper/projects/RBit/rbit.h	/^        darkBlue,$/;"	e	enum:RBit::GlobalColor
darkColor	/home/viper/projects/RBit/rheadermodel.h	/^    virtual const RColor* darkColor(Sint32 section) const$/;"	f	class:RHeaderModel	access:public	signature:(Sint32 section) const
darkColor	/home/viper/projects/RBit/rsimpleheadermodel.cpp	/^const RColor* RSimpleHeaderModel::darkColor(Sint32 section) const$/;"	f	class:RSimpleHeaderModel	signature:(Sint32 section) const
darkColor	/home/viper/projects/RBit/rsimpleheadermodel.h	/^            RColor darkColor;$/;"	m	struct:RSimpleHeaderModel::Item::MetaData	access:public
darkColor	/home/viper/projects/RBit/rsimpleheadermodel.h	/^        const RColor& darkColor() const;$/;"	p	class:RSimpleHeaderModel::Item	access:public	signature:() const
darkColor	/home/viper/projects/RBit/rsimpleheadermodel.h	/^    virtual const RColor* darkColor(Sint32 section) const;$/;"	p	class:RSimpleHeaderModel	access:public	signature:(Sint32 section) const
darkColor	/home/viper/projects/RBit/rsimpleheadermodel.h	/^inline const RColor& RSimpleHeaderModel::Item::darkColor() const$/;"	f	class:RSimpleHeaderModel::Item	signature:() const
darkCyan	/home/viper/projects/RBit/rbit.h	/^        darkCyan,$/;"	e	enum:RBit::GlobalColor
darkGray	/home/viper/projects/RBit/rbit.h	/^        darkGray,$/;"	e	enum:RBit::GlobalColor
darkGreen	/home/viper/projects/RBit/rbit.h	/^        darkGreen,$/;"	e	enum:RBit::GlobalColor
darkMagenta	/home/viper/projects/RBit/rbit.h	/^        darkMagenta,$/;"	e	enum:RBit::GlobalColor
darkRed	/home/viper/projects/RBit/rbit.h	/^        darkRed,$/;"	e	enum:RBit::GlobalColor
darkYellow	/home/viper/projects/RBit/rbit.h	/^        darkYellow        $/;"	e	enum:RBit::GlobalColor
dataChanged	/home/viper/projects/RBit/rgridmodel.h	/^    virtual void dataChanged(Sint32 topRow, Sint32 topColumn, Sint32 bottomRow, Sint32 bottomColumn) $/;"	f	class:RGridModelObserverBase	access:protected	signature:(Sint32 topRow, Sint32 topColumn, Sint32 bottomRow, Sint32 bottomColumn)
dataChanged	/home/viper/projects/RBit/rgridview.cpp	/^void RGridView::dataChanged(Sint32 topLeftRow, Sint32 topLeftColumn, Sint32 bottomRightRow, Sint32 bottomRightColumn)$/;"	f	class:RGridView	signature:(Sint32 topLeftRow, Sint32 topLeftColumn, Sint32 bottomRightRow, Sint32 bottomRightColumn)
dataChanged	/home/viper/projects/RBit/rgridview.h	/^    virtual void dataChanged(Sint32 topLeftRow, Sint32 topLeftColumn, Sint32 bottomRightRow, Sint32 bottomRightColumn);$/;"	p	class:RGridView	access:protected	signature:(Sint32 topLeftRow, Sint32 topLeftColumn, Sint32 bottomRightRow, Sint32 bottomRightColumn)
dataChanged	/home/viper/projects/RBit/rheadermodel.h	/^    virtual void dataChanged(Sint32 firstSection, Sint32 lastSection) $/;"	f	class:RHeaderModelObserver	access:protected	signature:(Sint32 firstSection, Sint32 lastSection)
dataChanged	/home/viper/projects/RBit/rheaderview.cpp	/^void RHeaderView::dataChanged(Sint32 first, Sint32 last)$/;"	f	class:RHeaderView	signature:(Sint32 first, Sint32 last)
dataChanged	/home/viper/projects/RBit/rheaderview.h	/^    virtual void dataChanged(Sint32 firstSection, Sint32 lastSection);$/;"	p	class:RHeaderView	access:public	signature:(Sint32 firstSection, Sint32 lastSection)
dataType	/home/viper/projects/RBit/rgridmodel.h	/^    virtual RModelDataTypeBase* dataType(Sint32 column) $/;"	f	class:RGridModel	access:public	signature:(Sint32 column)
dataType	/home/viper/projects/RBit/rsimplegridmodel.cpp	/^RModelDataTypeBase* RSimpleGridModel::dataType(Sint32 column)$/;"	f	class:RSimpleGridModel	signature:(Sint32 column)
dataType	/home/viper/projects/RBit/rsimplegridmodel.h	/^    virtual RModelDataTypeBase* dataType(Sint32 column);$/;"	p	class:RSimpleGridModel	access:public	signature:(Sint32 column)
decSize	/home/viper/projects/RBit/rsimplelist.h	/^	inline void decSize()$/;"	f	class:RSLPolicy_DontTrackSize	access:protected	signature:()
decSize	/home/viper/projects/RBit/rsimplelist.h	/^	inline void decSize()$/;"	f	class:RSLPolicy_TrackSize	access:protected	signature:()
defaultPalette	/home/viper/projects/RBit/rwidget.cpp	/^RPalette RWidget::defaultPalette() const$/;"	f	class:RWidget	signature:() const
defaultPalette	/home/viper/projects/RBit/rwidget.h	/^    RPalette defaultPalette() const;    $/;"	p	class:RWidget	access:protected	signature:() const
defaultSectionSize	/home/viper/projects/RBit/rheaderview.h	/^    Uint16 defaultSectionSize() const;$/;"	p	class:RHeaderView	access:public	signature:() const
defaultSectionSize	/home/viper/projects/RBit/rheaderview.h	/^inline Uint16 RHeaderView::defaultSectionSize() const$/;"	f	class:RHeaderView	signature:() const
del	/home/viper/projects/RBit/reditbox.cpp	/^void REditBox::del()$/;"	f	class:REditBox	signature:()
del	/home/viper/projects/RBit/reditbox.h	/^    void del();$/;"	p	class:REditBox	access:public	signature:()
deleteCursors	/home/viper/projects/RBit/rsplitter.cpp	/^	void deleteCursors()$/;"	f	class:RSplitterPrivate	access:public	signature:()
deleteLater	/home/viper/projects/RBit/rwidget.cpp	/^void RWidget::deleteLater()$/;"	f	class:RWidget	signature:()
deleteLater	/home/viper/projects/RBit/rwidget.h	/^    void deleteLater();$/;"	p	class:RWidget	access:protected	signature:()
deleter_type	/home/viper/projects/RBit/rsharedptr.h	/^    typedef D deleter_type;$/;"	t	class:RSharedPtr	access:public
deliverScreenUpdate	/home/viper/projects/RBit/rapplication.cpp	/^void RApplication::deliverScreenUpdate()$/;"	f	class:RApplication	signature:()
deliverScreenUpdate	/home/viper/projects/RBit/rapplication.h	/^    void deliverScreenUpdate();    $/;"	p	class:RApplication	access:protected	signature:()
deliverScreenUpdate_helper	/home/viper/projects/RBit/rapplication.cpp	/^void RApplication::deliverScreenUpdate_helper(const RRect& r, RWidget* parent)$/;"	f	class:RApplication	signature:(const RRect& r, RWidget* parent)
deliverScreenUpdate_helper	/home/viper/projects/RBit/rapplication.h	/^    void deliverScreenUpdate_helper(const RRect&, RWidget*);$/;"	p	class:RApplication	access:private	signature:(const RRect&, RWidget*)
deref	/home/viper/projects/RBit/rsharedptr.h	/^        void deref()$/;"	f	class:RSharedPtr::SharedCounterHelperBase	access:public	signature:()
descent	/home/viper/projects/RBit/rsdlttf.cpp	/^	int descent;$/;"	m	struct:_TTF_Font	file:	access:public
deselect	/home/viper/projects/RBit/reditbox.cpp	/^void REditBox::deselect()$/;"	f	class:REditBox	signature:()
deselect	/home/viper/projects/RBit/reditbox.h	/^    void deselect();$/;"	p	class:REditBox	access:public	signature:()
deserialize_rcolor	/home/viper/projects/RBit/rcolor.h	/^inline RColor deserialize_rcolor(int i)$/;"	f	signature:(int i)
detach	/home/viper/projects/RBit/rpalette.cpp	/^void RPalette::detach()$/;"	f	class:RPalette	signature:()
detach	/home/viper/projects/RBit/rpalette.h	/^    void detach();$/;"	p	class:RPalette	access:private	signature:()
digit	/home/viper/projects/RBit/rrandomgenerator.h	/^    inline char digit() const$/;"	f	class:RRandomGenerator	access:public	signature:() const
displayText	/home/viper/projects/RBit/reditbox.cpp	/^const char* REditBox::displayText() const$/;"	f	class:REditBox	signature:() const
displayText	/home/viper/projects/RBit/reditbox.h	/^    const char* displayText() const;$/;"	p	class:REditBox	access:protected	signature:() const
doubleClickEnabled	/home/viper/projects/RBit/rapplication.h	/^    bool doubleClickEnabled() const;$/;"	p	class:RApplication	access:public	signature:() const
doubleClickEnabled	/home/viper/projects/RBit/rapplication.h	/^inline bool RApplication::doubleClickEnabled() const$/;"	f	class:RApplication	signature:() const
doubleClickMargin	/home/viper/projects/RBit/rapplication.h	/^    uint doubleClickMargin() const;$/;"	p	class:RApplication	access:public	signature:() const
doubleClickMargin	/home/viper/projects/RBit/rapplication.h	/^inline uint RApplication::doubleClickMargin() const$/;"	f	class:RApplication	signature:() const
doubleClicked	/home/viper/projects/RBit/rgridview.h	/^    virtual void doubleClicked(Sint32 row, Sint32 column)$/;"	f	class:RGridViewObserver	access:public	signature:(Sint32 row, Sint32 column)
drawFocus	/home/viper/projects/RBit/rbutton.cpp	/^void RButton::drawFocus(const RRect& r)$/;"	f	class:RButton	signature:(const RRect& r)
drawFocus	/home/viper/projects/RBit/rbutton.h	/^    void drawFocus(const RRect& r);    $/;"	p	class:RButton	access:protected	signature:(const RRect& r)
drawFrame	/home/viper/projects/RBit/rframepainter.h	/^    void drawFrame(SDL_Surface* surf, const RRect& frame, const RRect& clip, $/;"	p	class:RFramePainter	access:protected	signature:(SDL_Surface* surf, const RRect& frame, const RRect& clip, const RPalette& pal, RPalette::ColorRole foregroundRole)
drawFrame	/home/viper/projects/RBit/rframepainter.h	/^inline void RFramePainter::drawFrame(SDL_Surface* dst, const RRect& frame, $/;"	f	class:RFramePainter	signature:(SDL_Surface* dst, const RRect& frame, const RRect& clip, const RPalette& pal, RPalette::ColorRole fgRole)
echoMode	/home/viper/projects/RBit/reditbox.h	/^    EchoMode echoMode() const;$/;"	p	class:REditBox	access:public	signature:() const
echoMode	/home/viper/projects/RBit/reditbox.h	/^inline REditBox::EchoMode REditBox::echoMode() const$/;"	f	class:REditBox	signature:() const
editbox	/home/viper/projects/RBit/rcombobox.cpp	/^REditBox *RComboBox::editbox()$/;"	f	class:RComboBox	signature:()
editbox	/home/viper/projects/RBit/rcombobox.h	/^	REditBox *editbox();$/;"	p	class:RComboBox	access:public	signature:()
element_type	/home/viper/projects/RBit/rsharedptr.h	/^    typedef T element_type;$/;"	t	class:RSharedPtr	access:public
emitActivated	/home/viper/projects/RBit/rgridview.cpp	/^void RGridView::emitActivated(Sint32 row, Sint32 column)$/;"	f	class:RGridView	signature:(Sint32 row, Sint32 column)
emitActivated	/home/viper/projects/RBit/rgridview.h	/^    void emitActivated(Sint32 row, Sint32 column);$/;"	p	class:RGridView	access:private	signature:(Sint32 row, Sint32 column)
emitClicked	/home/viper/projects/RBit/rgridview.cpp	/^void RGridView::emitClicked(Sint32 row, Sint32 column)$/;"	f	class:RGridView	signature:(Sint32 row, Sint32 column)
emitClicked	/home/viper/projects/RBit/rgridview.h	/^    void emitClicked(Sint32 row, Sint32 column);$/;"	p	class:RGridView	access:private	signature:(Sint32 row, Sint32 column)
emitColumnsAboutToBeInserted	/home/viper/projects/RBit/rgridmodel.cpp	/^void RGridModel::emitColumnsAboutToBeInserted(Sint32 firstColumn, Sint32 lastColumn)$/;"	f	class:RGridModel	signature:(Sint32 firstColumn, Sint32 lastColumn)
emitColumnsAboutToBeInserted	/home/viper/projects/RBit/rgridmodel.h	/^    void emitColumnsAboutToBeInserted(Sint32 firstColumn, Sint32 lastColumn);$/;"	p	class:RGridModel	access:protected	signature:(Sint32 firstColumn, Sint32 lastColumn)
emitColumnsAboutToBeRemoved	/home/viper/projects/RBit/rgridmodel.cpp	/^void RGridModel::emitColumnsAboutToBeRemoved(Sint32 firstColumn, Sint32 lastColumn)$/;"	f	class:RGridModel	signature:(Sint32 firstColumn, Sint32 lastColumn)
emitColumnsAboutToBeRemoved	/home/viper/projects/RBit/rgridmodel.h	/^    void emitColumnsAboutToBeRemoved(Sint32 firstColumn, Sint32 lastColumn);$/;"	p	class:RGridModel	access:protected	signature:(Sint32 firstColumn, Sint32 lastColumn)
emitColumnsInserted	/home/viper/projects/RBit/rgridmodel.cpp	/^void RGridModel::emitColumnsInserted(Sint32 firstColumn, Sint32 lastColumn)$/;"	f	class:RGridModel	signature:(Sint32 firstColumn, Sint32 lastColumn)
emitColumnsInserted	/home/viper/projects/RBit/rgridmodel.h	/^    void emitColumnsInserted(Sint32 firstColumn, Sint32 lastColumn);$/;"	p	class:RGridModel	access:protected	signature:(Sint32 firstColumn, Sint32 lastColumn)
emitColumnsRemoved	/home/viper/projects/RBit/rgridmodel.cpp	/^void RGridModel::emitColumnsRemoved(Sint32 firstColumn, Sint32 lastColumn)$/;"	f	class:RGridModel	signature:(Sint32 firstColumn, Sint32 lastColumn)
emitColumnsRemoved	/home/viper/projects/RBit/rgridmodel.h	/^    void emitColumnsRemoved(Sint32 firstColumn, Sint32 lastColumn);$/;"	p	class:RGridModel	access:protected	signature:(Sint32 firstColumn, Sint32 lastColumn)
emitCurrentColumnChanged	/home/viper/projects/RBit/rgridview.cpp	/^void RGridView::emitCurrentColumnChanged(Sint32 oldColumn, Sint32 newColumn)$/;"	f	class:RGridView	signature:(Sint32 oldColumn, Sint32 newColumn)
emitCurrentColumnChanged	/home/viper/projects/RBit/rgridview.h	/^    void emitCurrentColumnChanged(Sint32 oldColumn, Sint32 newColumn);$/;"	p	class:RGridView	access:private	signature:(Sint32 oldColumn, Sint32 newColumn)
emitCurrentRowChanged	/home/viper/projects/RBit/rgridview.cpp	/^void RGridView::emitCurrentRowChanged(Sint32 oldRow, Sint32 newRow)$/;"	f	class:RGridView	signature:(Sint32 oldRow, Sint32 newRow)
emitCurrentRowChanged	/home/viper/projects/RBit/rgridview.h	/^    void emitCurrentRowChanged(Sint32 oldRow, Sint32 newRow);$/;"	p	class:RGridView	access:private	signature:(Sint32 oldRow, Sint32 newRow)
emitDataChanged	/home/viper/projects/RBit/rgridmodel.cpp	/^void RGridModel::emitDataChanged(Sint32 topLeftRow, Sint32 topLeftColumn, Sint32 bottomRightRow, Sint32 bottomRightColumn)$/;"	f	class:RGridModel	signature:(Sint32 topLeftRow, Sint32 topLeftColumn, Sint32 bottomRightRow, Sint32 bottomRightColumn)
emitDataChanged	/home/viper/projects/RBit/rgridmodel.h	/^    void emitDataChanged(Sint32 topLeftRow, Sint32 topLeftColumn, Sint32 bottomRightRow, Sint32 bottomRightColumn);$/;"	p	class:RGridModel	access:protected	signature:(Sint32 topLeftRow, Sint32 topLeftColumn, Sint32 bottomRightRow, Sint32 bottomRightColumn)
emitDataChanged	/home/viper/projects/RBit/rheadermodel.cpp	/^void RHeaderModel::emitDataChanged(Sint32 firstSection, Sint32 lastSection)$/;"	f	class:RHeaderModel	signature:(Sint32 firstSection, Sint32 lastSection)
emitDataChanged	/home/viper/projects/RBit/rheadermodel.h	/^    void emitDataChanged(Sint32 firstSection, Sint32 lastSection);$/;"	p	class:RHeaderModel	access:protected	signature:(Sint32 firstSection, Sint32 lastSection)
emitDoubleClicked	/home/viper/projects/RBit/rgridview.cpp	/^void RGridView::emitDoubleClicked(Sint32 row, Sint32 column)$/;"	f	class:RGridView	signature:(Sint32 row, Sint32 column)
emitDoubleClicked	/home/viper/projects/RBit/rgridview.h	/^    void emitDoubleClicked(Sint32 row, Sint32 column);$/;"	p	class:RGridView	access:private	signature:(Sint32 row, Sint32 column)
emitEntered	/home/viper/projects/RBit/rgridview.cpp	/^void RGridView::emitEntered(Sint32 row, Sint32 column)$/;"	f	class:RGridView	signature:(Sint32 row, Sint32 column)
emitEntered	/home/viper/projects/RBit/rgridview.h	/^    void emitEntered(Sint32 row, Sint32 column);$/;"	p	class:RGridView	access:private	signature:(Sint32 row, Sint32 column)
emitLayoutAboutToBeChanged	/home/viper/projects/RBit/rgridmodel.cpp	/^void RGridModel::emitLayoutAboutToBeChanged()$/;"	f	class:RGridModel	signature:()
emitLayoutAboutToBeChanged	/home/viper/projects/RBit/rgridmodel.h	/^    void emitLayoutAboutToBeChanged();$/;"	p	class:RGridModel	access:protected	signature:()
emitLayoutChanged	/home/viper/projects/RBit/rgridmodel.cpp	/^void RGridModel::emitLayoutChanged()$/;"	f	class:RGridModel	signature:()
emitLayoutChanged	/home/viper/projects/RBit/rgridmodel.h	/^    void emitLayoutChanged();$/;"	p	class:RGridModel	access:protected	signature:()
emitModelReplaced	/home/viper/projects/RBit/rgridview.cpp	/^void RGridView::emitModelReplaced(RGridModel* model) $/;"	f	class:RGridView	signature:(RGridModel* model)
emitModelReplaced	/home/viper/projects/RBit/rgridview.h	/^    void emitModelReplaced(RGridModel* model);$/;"	p	class:RGridView	access:private	signature:(RGridModel* model)
emitModelReplaced	/home/viper/projects/RBit/rheaderview.cpp	/^void RHeaderView::emitModelReplaced(RHeaderModel* model) $/;"	f	class:RHeaderView	signature:(RHeaderModel* model)
emitModelReplaced	/home/viper/projects/RBit/rheaderview.h	/^    void emitModelReplaced(RHeaderModel* newModel);$/;"	p	class:RHeaderView	access:private	signature:(RHeaderModel* newModel)
emitModelReset	/home/viper/projects/RBit/rgridmodel.cpp	/^void RGridModel::emitModelReset()$/;"	f	class:RGridModel	signature:()
emitModelReset	/home/viper/projects/RBit/rgridmodel.h	/^    void emitModelReset();$/;"	p	class:RGridModel	access:protected	signature:()
emitModelReset	/home/viper/projects/RBit/rheadermodel.cpp	/^void RHeaderModel::emitModelReset()$/;"	f	class:RHeaderModel	signature:()
emitModelReset	/home/viper/projects/RBit/rheadermodel.h	/^    void emitModelReset();$/;"	p	class:RHeaderModel	access:protected	signature:()
emitPressed	/home/viper/projects/RBit/rgridview.cpp	/^void RGridView::emitPressed(Sint32 row, Sint32 column)$/;"	f	class:RGridView	signature:(Sint32 row, Sint32 column)
emitPressed	/home/viper/projects/RBit/rgridview.h	/^    void emitPressed(Sint32 row, Sint32 column);$/;"	p	class:RGridView	access:private	signature:(Sint32 row, Sint32 column)
emitRowsAboutToBeInserted	/home/viper/projects/RBit/rgridmodel.cpp	/^void RGridModel::emitRowsAboutToBeInserted(Sint32 firstRow, Sint32 lastRow)$/;"	f	class:RGridModel	signature:(Sint32 firstRow, Sint32 lastRow)
emitRowsAboutToBeInserted	/home/viper/projects/RBit/rgridmodel.h	/^    void emitRowsAboutToBeInserted(Sint32 firstRow, Sint32 lastRow);$/;"	p	class:RGridModel	access:protected	signature:(Sint32 firstRow, Sint32 lastRow)
emitRowsAboutToBeRemoved	/home/viper/projects/RBit/rgridmodel.cpp	/^void RGridModel::emitRowsAboutToBeRemoved(Sint32 firstRow, Sint32 lastRow)$/;"	f	class:RGridModel	signature:(Sint32 firstRow, Sint32 lastRow)
emitRowsAboutToBeRemoved	/home/viper/projects/RBit/rgridmodel.h	/^    void emitRowsAboutToBeRemoved(Sint32 firstRow, Sint32 lastRow);$/;"	p	class:RGridModel	access:protected	signature:(Sint32 firstRow, Sint32 lastRow)
emitRowsInserted	/home/viper/projects/RBit/rgridmodel.cpp	/^void RGridModel::emitRowsInserted(Sint32 firstRow, Sint32 lastRow)$/;"	f	class:RGridModel	signature:(Sint32 firstRow, Sint32 lastRow)
emitRowsInserted	/home/viper/projects/RBit/rgridmodel.h	/^    void emitRowsInserted(Sint32 firstRow, Sint32 lastRow);$/;"	p	class:RGridModel	access:protected	signature:(Sint32 firstRow, Sint32 lastRow)
emitRowsRemoved	/home/viper/projects/RBit/rgridmodel.cpp	/^void RGridModel::emitRowsRemoved(Sint32 firstRow, Sint32 lastRow)$/;"	f	class:RGridModel	signature:(Sint32 firstRow, Sint32 lastRow)
emitRowsRemoved	/home/viper/projects/RBit/rgridmodel.h	/^    void emitRowsRemoved(Sint32 firstRow, Sint32 lastRow);$/;"	p	class:RGridModel	access:protected	signature:(Sint32 firstRow, Sint32 lastRow)
emitSectionClicked	/home/viper/projects/RBit/rheaderview.cpp	/^void RHeaderView::emitSectionClicked(Sint32 section) $/;"	f	class:RHeaderView	signature:(Sint32 section)
emitSectionClicked	/home/viper/projects/RBit/rheaderview.h	/^    void emitSectionClicked(Sint32 section);$/;"	p	class:RHeaderView	access:private	signature:(Sint32 section)
emitSectionCountChanged	/home/viper/projects/RBit/rheaderview.cpp	/^void RHeaderView::emitSectionCountChanged(Uint32 oldCount, Uint32 newCount) $/;"	f	class:RHeaderView	signature:(Uint32 oldCount, Uint32 newCount)
emitSectionCountChanged	/home/viper/projects/RBit/rheaderview.h	/^    void emitSectionCountChanged(Uint32 oldCount, Uint32 newCount);$/;"	p	class:RHeaderView	access:private	signature:(Uint32 oldCount, Uint32 newCount)
emitSectionPressed	/home/viper/projects/RBit/rheaderview.cpp	/^void RHeaderView::emitSectionPressed(Sint32 section) $/;"	f	class:RHeaderView	signature:(Sint32 section)
emitSectionPressed	/home/viper/projects/RBit/rheaderview.h	/^    void emitSectionPressed(Sint32 section);$/;"	p	class:RHeaderView	access:private	signature:(Sint32 section)
emitSectionResized	/home/viper/projects/RBit/rheaderview.cpp	/^void RHeaderView::emitSectionResized(Sint32 section, Sint32 oldSize, Sint32 newSize)$/;"	f	class:RHeaderView	signature:(Sint32 section, Sint32 oldSize, Sint32 newSize)
emitSectionResized	/home/viper/projects/RBit/rheaderview.h	/^    void emitSectionResized(Sint32 section, Sint32 oldSize, Sint32 newSize);$/;"	p	class:RHeaderView	access:private	signature:(Sint32 section, Sint32 oldSize, Sint32 newSize)
emitSectionsAboutToBeInserted	/home/viper/projects/RBit/rheadermodel.cpp	/^void RHeaderModel::emitSectionsAboutToBeInserted(Sint32 logicalFirst, Sint32 logicalLast)$/;"	f	class:RHeaderModel	signature:(Sint32 logicalFirst, Sint32 logicalLast)
emitSectionsAboutToBeInserted	/home/viper/projects/RBit/rheadermodel.h	/^    void emitSectionsAboutToBeInserted(Sint32 firstSection, Sint32 lastSection);$/;"	p	class:RHeaderModel	access:protected	signature:(Sint32 firstSection, Sint32 lastSection)
emitSectionsAboutToBeRemoved	/home/viper/projects/RBit/rheadermodel.cpp	/^void RHeaderModel::emitSectionsAboutToBeRemoved(Sint32 first, Sint32 last)$/;"	f	class:RHeaderModel	signature:(Sint32 first, Sint32 last)
emitSectionsAboutToBeRemoved	/home/viper/projects/RBit/rheadermodel.h	/^    void emitSectionsAboutToBeRemoved(Sint32 firstSection, Sint32 lastSection);$/;"	p	class:RHeaderModel	access:protected	signature:(Sint32 firstSection, Sint32 lastSection)
emitSectionsInserted	/home/viper/projects/RBit/rheadermodel.cpp	/^void RHeaderModel::emitSectionsInserted(Sint32 logicalFirst, Sint32 logicalLast)$/;"	f	class:RHeaderModel	signature:(Sint32 logicalFirst, Sint32 logicalLast)
emitSectionsInserted	/home/viper/projects/RBit/rheadermodel.h	/^    void emitSectionsInserted(Sint32 firstSection, Sint32 lastSection);$/;"	p	class:RHeaderModel	access:protected	signature:(Sint32 firstSection, Sint32 lastSection)
emitSectionsRemoved	/home/viper/projects/RBit/rheadermodel.cpp	/^void RHeaderModel::emitSectionsRemoved(Sint32 first, Sint32 last)$/;"	f	class:RHeaderModel	signature:(Sint32 first, Sint32 last)
emitSectionsRemoved	/home/viper/projects/RBit/rheadermodel.h	/^    void emitSectionsRemoved(Sint32 firstSection, Sint32 lastSection);$/;"	p	class:RHeaderModel	access:protected	signature:(Sint32 firstSection, Sint32 lastSection)
enableFocus	/home/viper/projects/RBit/rwidget.h	/^    void enableFocus(bool enable);$/;"	p	class:RWidget	access:public	signature:(bool enable)
enableFocus	/home/viper/projects/RBit/rwidget.h	/^inline void RWidget::enableFocus(bool enable)$/;"	f	class:RWidget	signature:(bool enable)
end	/home/viper/projects/RBit/rcheckbox.o	/^2/;"	v
end	/home/viper/projects/RBit/reditbox.cpp	/^void REditBox::end(bool mark)$/;"	f	class:REditBox	signature:(bool mark)
end	/home/viper/projects/RBit/reditbox.h	/^    void end(bool mark);$/;"	p	class:REditBox	access:public	signature:(bool mark)
entered	/home/viper/projects/RBit/rcombobox.cpp	/^    virtual void entered(Sint32 row, Sint32)$/;"	f	class:RComboBox::Popup	access:protected	signature:(Sint32 row, Sint32)
entered	/home/viper/projects/RBit/rgridview.h	/^    virtual void entered(Sint32 row, Sint32 column)$/;"	f	class:RGridViewObserver	access:public	signature:(Sint32 row, Sint32 column)
eventBeginSplit	/home/viper/projects/RBit/rsplitter.cpp	/^void RSplitter::eventBeginSplit()$/;"	f	class:RSplitter	signature:()
eventBeginSplit	/home/viper/projects/RBit/rsplitter.h	/^	virtual void eventBeginSplit();$/;"	p	class:RSplitter	access:protected	signature:()
eventClose	/home/viper/projects/RBit/rwidget.cpp	/^bool RWidget::eventClose()$/;"	f	class:RWidget	signature:()
eventClose	/home/viper/projects/RBit/rwidget.h	/^    virtual bool eventClose();$/;"	p	class:RWidget	access:protected	signature:()
eventEndSplit	/home/viper/projects/RBit/rsplitter.cpp	/^void RSplitter::eventEndSplit(int pos)$/;"	f	class:RSplitter	signature:(int pos)
eventEndSplit	/home/viper/projects/RBit/rsplitter.h	/^	virtual void eventEndSplit(int pos);$/;"	p	class:RSplitter	access:protected	signature:(int pos)
eventFocusLost	/home/viper/projects/RBit/rbutton.cpp	/^void RButton::eventFocusLost()$/;"	f	class:RButton	signature:()
eventFocusLost	/home/viper/projects/RBit/rbutton.h	/^    virtual void eventFocusLost();$/;"	p	class:RButton	access:protected	signature:()
eventFocusLost	/home/viper/projects/RBit/rcheckbox.cpp	/^void RCheckBox::eventFocusLost()$/;"	f	class:RCheckBox	signature:()
eventFocusLost	/home/viper/projects/RBit/rcheckbox.h	/^	virtual void eventFocusLost();$/;"	p	class:RCheckBox	access:protected	signature:()
eventFocusLost	/home/viper/projects/RBit/rcombobox.cpp	/^	virtual void eventFocusLost()$/;"	f	class:RComboBox::EditBox	access:protected	signature:()
eventFocusLost	/home/viper/projects/RBit/rcombobox.cpp	/^void RComboBox::eventFocusLost()$/;"	f	class:RComboBox	signature:()
eventFocusLost	/home/viper/projects/RBit/rcombobox.h	/^    virtual void eventFocusLost();$/;"	p	class:RComboBox	access:protected	signature:()
eventFocusLost	/home/viper/projects/RBit/reditbox.cpp	/^void REditBox::eventFocusLost()$/;"	f	class:REditBox	signature:()
eventFocusLost	/home/viper/projects/RBit/reditbox.h	/^    virtual void eventFocusLost();$/;"	p	class:REditBox	access:protected	signature:()
eventFocusLost	/home/viper/projects/RBit/rgridview.cpp	/^void RGridView::eventFocusLost()$/;"	f	class:RGridView	signature:()
eventFocusLost	/home/viper/projects/RBit/rgridview.h	/^    virtual void eventFocusLost();      $/;"	p	class:RGridView	access:protected	signature:()
eventFocusLost	/home/viper/projects/RBit/rwidget.cpp	/^void RWidget::eventFocusLost()$/;"	f	class:RWidget	signature:()
eventFocusLost	/home/viper/projects/RBit/rwidget.h	/^    virtual void eventFocusLost();$/;"	p	class:RWidget	access:protected	signature:()
eventFocusSet	/home/viper/projects/RBit/rbutton.cpp	/^void RButton::eventFocusSet()$/;"	f	class:RButton	signature:()
eventFocusSet	/home/viper/projects/RBit/rbutton.h	/^    virtual void eventFocusSet();$/;"	p	class:RButton	access:protected	signature:()
eventFocusSet	/home/viper/projects/RBit/rcheckbox.cpp	/^void RCheckBox::eventFocusSet()$/;"	f	class:RCheckBox	signature:()
eventFocusSet	/home/viper/projects/RBit/rcheckbox.h	/^	virtual void eventFocusSet();$/;"	p	class:RCheckBox	access:protected	signature:()
eventFocusSet	/home/viper/projects/RBit/rcombobox.cpp	/^	virtual void eventFocusSet()$/;"	f	class:RComboBox::EditBox	access:protected	signature:()
eventFocusSet	/home/viper/projects/RBit/rcombobox.cpp	/^void RComboBox::eventFocusSet()$/;"	f	class:RComboBox	signature:()
eventFocusSet	/home/viper/projects/RBit/rcombobox.h	/^    virtual void eventFocusSet();$/;"	p	class:RComboBox	access:protected	signature:()
eventFocusSet	/home/viper/projects/RBit/reditbox.cpp	/^void REditBox::eventFocusSet()$/;"	f	class:REditBox	signature:()
eventFocusSet	/home/viper/projects/RBit/reditbox.h	/^    virtual void eventFocusSet();$/;"	p	class:REditBox	access:protected	signature:()
eventFocusSet	/home/viper/projects/RBit/rgridview.cpp	/^void RGridView::eventFocusSet()$/;"	f	class:RGridView	signature:()
eventFocusSet	/home/viper/projects/RBit/rgridview.h	/^    virtual void eventFocusSet();$/;"	p	class:RGridView	access:protected	signature:()
eventFocusSet	/home/viper/projects/RBit/rwidget.cpp	/^void RWidget::eventFocusSet()$/;"	f	class:RWidget	signature:()
eventFocusSet	/home/viper/projects/RBit/rwidget.h	/^    virtual void eventFocusSet();$/;"	p	class:RWidget	access:protected	signature:()
eventHide	/home/viper/projects/RBit/rcombobox.cpp	/^    virtual void eventHide()$/;"	f	class:RComboBox::Popup	access:protected	signature:()
eventHide	/home/viper/projects/RBit/rcombobox.cpp	/^void RComboBox::eventHide()$/;"	f	class:RComboBox	signature:()
eventHide	/home/viper/projects/RBit/rcombobox.h	/^    virtual void eventHide();$/;"	p	class:RComboBox	access:protected	signature:()
eventHide	/home/viper/projects/RBit/rdialog.cpp	/^void RDialog::eventHide()$/;"	f	class:RDialog	signature:()
eventHide	/home/viper/projects/RBit/rdialog.h	/^	virtual void eventHide();    $/;"	p	class:RDialog	access:protected	signature:()
eventHide	/home/viper/projects/RBit/rheaderview.cpp	/^void RHeaderView::eventHide()$/;"	f	class:RHeaderView	signature:()
eventHide	/home/viper/projects/RBit/rheaderview.h	/^    virtual void eventHide();    $/;"	p	class:RHeaderView	access:protected	signature:()
eventHide	/home/viper/projects/RBit/rsplitter.cpp	/^void RSplitter::eventHide()$/;"	f	class:RSplitter	signature:()
eventHide	/home/viper/projects/RBit/rsplitter.h	/^	virtual void eventHide();$/;"	p	class:RSplitter	access:protected	signature:()
eventHide	/home/viper/projects/RBit/rwidget.cpp	/^void RWidget::eventHide()$/;"	f	class:RWidget	signature:()
eventHide	/home/viper/projects/RBit/rwidget.h	/^    virtual void eventHide();$/;"	p	class:RWidget	access:protected	signature:()
eventIdle	/home/viper/projects/RBit/rbutton.cpp	/^void RButton::eventIdle()$/;"	f	class:RButton	signature:()
eventIdle	/home/viper/projects/RBit/rbutton.h	/^    virtual void eventIdle();$/;"	p	class:RButton	access:protected	signature:()
eventIdle	/home/viper/projects/RBit/rcombobox.cpp	/^void RComboBox::eventIdle()$/;"	f	class:RComboBox	signature:()
eventIdle	/home/viper/projects/RBit/rcombobox.h	/^	virtual void eventIdle();$/;"	p	class:RComboBox	access:protected	signature:()
eventIdle	/home/viper/projects/RBit/reditbox.cpp	/^void REditBox::eventIdle()$/;"	f	class:REditBox	signature:()
eventIdle	/home/viper/projects/RBit/reditbox.h	/^    virtual void eventIdle();   $/;"	p	class:REditBox	access:protected	signature:()
eventIdle	/home/viper/projects/RBit/rscrollbar.cpp	/^void RScrollBar::eventIdle()$/;"	f	class:RScrollBar	signature:()
eventIdle	/home/viper/projects/RBit/rscrollbar.h	/^    virtual void eventIdle();    $/;"	p	class:RScrollBar	access:protected	signature:()
eventIdle	/home/viper/projects/RBit/rwidget.cpp	/^void RWidget::eventIdle()$/;"	f	class:RWidget	signature:()
eventIdle	/home/viper/projects/RBit/rwidget.h	/^    virtual void eventIdle();$/;"	p	class:RWidget	access:protected	signature:()
eventKeyDown	/home/viper/projects/RBit/rbutton.cpp	/^bool RButton::eventKeyDown(const SDL_keysym& key, bool autoRepeat)$/;"	f	class:RButton	signature:(const SDL_keysym& key, bool autoRepeat)
eventKeyDown	/home/viper/projects/RBit/rbutton.h	/^    virtual bool eventKeyDown(const SDL_keysym& key, bool autoRepeat);$/;"	p	class:RButton	access:protected	signature:(const SDL_keysym& key, bool autoRepeat)
eventKeyDown	/home/viper/projects/RBit/rcheckbox.cpp	/^bool RCheckBox::eventKeyDown(const SDL_keysym& key, bool autoRepeat)$/;"	f	class:RCheckBox	signature:(const SDL_keysym& key, bool autoRepeat)
eventKeyDown	/home/viper/projects/RBit/rcheckbox.h	/^    virtual bool eventKeyDown(const SDL_keysym& key, bool autoRepeat);$/;"	p	class:RCheckBox	access:protected	signature:(const SDL_keysym& key, bool autoRepeat)
eventKeyDown	/home/viper/projects/RBit/rcombobox.cpp	/^	virtual bool eventKeyDown(const SDL_keysym& key, bool autoRepeat)$/;"	f	class:RComboBox::EditBox	access:protected	signature:(const SDL_keysym& key, bool autoRepeat)
eventKeyDown	/home/viper/projects/RBit/rcombobox.cpp	/^    virtual bool eventKeyDown(const SDL_keysym& key, bool autoRepeat)$/;"	f	class:RComboBox::Popup	access:protected	signature:(const SDL_keysym& key, bool autoRepeat)
eventKeyDown	/home/viper/projects/RBit/rcombobox.cpp	/^bool RComboBox::eventKeyDown(const SDL_keysym& key, bool autoRepeat)$/;"	f	class:RComboBox	signature:(const SDL_keysym& key, bool autoRepeat)
eventKeyDown	/home/viper/projects/RBit/rcombobox.h	/^    virtual bool eventKeyDown(const SDL_keysym& key, bool autoRepeat);$/;"	p	class:RComboBox	access:protected	signature:(const SDL_keysym& key, bool autoRepeat)
eventKeyDown	/home/viper/projects/RBit/rdialog.cpp	/^bool RDialog::eventKeyDown(const SDL_keysym& key, bool autoRepeat)$/;"	f	class:RDialog	signature:(const SDL_keysym& key, bool autoRepeat)
eventKeyDown	/home/viper/projects/RBit/rdialog.h	/^	virtual bool eventKeyDown(const SDL_keysym& key, bool autoRepeat);$/;"	p	class:RDialog	access:protected	signature:(const SDL_keysym& key, bool autoRepeat)
eventKeyDown	/home/viper/projects/RBit/reditbox.cpp	/^bool REditBox::eventKeyDown(const SDL_keysym& key, bool autoRepeat)$/;"	f	class:REditBox	signature:(const SDL_keysym& key, bool autoRepeat)
eventKeyDown	/home/viper/projects/RBit/reditbox.h	/^    virtual bool eventKeyDown(const SDL_keysym& key, bool autoRepeat);$/;"	p	class:REditBox	access:protected	signature:(const SDL_keysym& key, bool autoRepeat)
eventKeyDown	/home/viper/projects/RBit/rgridview.cpp	/^bool RGridView::eventKeyDown(const SDL_keysym& key, bool autoRepeat)$/;"	f	class:RGridView	signature:(const SDL_keysym& key, bool autoRepeat)
eventKeyDown	/home/viper/projects/RBit/rgridview.h	/^    virtual bool eventKeyDown(const SDL_keysym& key, bool autoRepeat);$/;"	p	class:RGridView	access:protected	signature:(const SDL_keysym& key, bool autoRepeat)
eventKeyDown	/home/viper/projects/RBit/rscrollarea.cpp	/^bool RScrollArea::Viewport::eventKeyDown(const SDL_keysym& key, bool autoRepeat)$/;"	f	class:RScrollArea::Viewport	signature:(const SDL_keysym& key, bool autoRepeat)
eventKeyDown	/home/viper/projects/RBit/rscrollarea.cpp	/^bool RScrollAreaBase::eventKeyDown(const SDL_keysym& key, bool autoRepeat)$/;"	f	class:RScrollAreaBase	signature:(const SDL_keysym& key, bool autoRepeat)
eventKeyDown	/home/viper/projects/RBit/rscrollarea.h	/^        virtual bool eventKeyDown(const SDL_keysym& key, bool autoRepeat);$/;"	p	class:RScrollArea::Viewport	access:protected	signature:(const SDL_keysym& key, bool autoRepeat)
eventKeyDown	/home/viper/projects/RBit/rscrollarea.h	/^    virtual bool eventKeyDown(const SDL_keysym& key, bool autoRepeat);    $/;"	p	class:RScrollAreaBase	access:protected	signature:(const SDL_keysym& key, bool autoRepeat)
eventKeyDown	/home/viper/projects/RBit/rwidget.cpp	/^bool RWidget::eventKeyDown(const SDL_keysym& key, bool)$/;"	f	class:RWidget	signature:(const SDL_keysym& key, bool)
eventKeyDown	/home/viper/projects/RBit/rwidget.h	/^    virtual bool eventKeyDown(const SDL_keysym& key, bool autoRepeat);$/;"	p	class:RWidget	access:protected	signature:(const SDL_keysym& key, bool autoRepeat)
eventKeyUp	/home/viper/projects/RBit/rbutton.cpp	/^bool RButton::eventKeyUp(const SDL_keysym& key, bool autoRepeat)$/;"	f	class:RButton	signature:(const SDL_keysym& key, bool autoRepeat)
eventKeyUp	/home/viper/projects/RBit/rbutton.h	/^    virtual bool eventKeyUp(const SDL_keysym& key, bool autoRepeat);$/;"	p	class:RButton	access:protected	signature:(const SDL_keysym& key, bool autoRepeat)
eventKeyUp	/home/viper/projects/RBit/rcheckbox.cpp	/^bool RCheckBox::eventKeyUp(const SDL_keysym& key, bool autoRepeat)$/;"	f	class:RCheckBox	signature:(const SDL_keysym& key, bool autoRepeat)
eventKeyUp	/home/viper/projects/RBit/rcheckbox.h	/^	virtual bool eventKeyUp(const SDL_keysym& key, bool autoRepeat);$/;"	p	class:RCheckBox	access:protected	signature:(const SDL_keysym& key, bool autoRepeat)
eventKeyUp	/home/viper/projects/RBit/rcombobox.cpp	/^bool RComboBox::eventKeyUp(const SDL_keysym& key, bool autoRepeat)$/;"	f	class:RComboBox	signature:(const SDL_keysym& key, bool autoRepeat)
eventKeyUp	/home/viper/projects/RBit/rcombobox.h	/^    virtual bool eventKeyUp(const SDL_keysym& key, bool autoRepeat);$/;"	p	class:RComboBox	access:protected	signature:(const SDL_keysym& key, bool autoRepeat)
eventKeyUp	/home/viper/projects/RBit/rscrollarea.cpp	/^bool RScrollArea::Viewport::eventKeyUp(const SDL_keysym& key, bool autoRepeat)$/;"	f	class:RScrollArea::Viewport	signature:(const SDL_keysym& key, bool autoRepeat)
eventKeyUp	/home/viper/projects/RBit/rscrollarea.h	/^        virtual bool eventKeyUp(const SDL_keysym& key, bool autoRepeat);$/;"	p	class:RScrollArea::Viewport	access:protected	signature:(const SDL_keysym& key, bool autoRepeat)
eventKeyUp	/home/viper/projects/RBit/rwidget.cpp	/^bool RWidget::eventKeyUp(const SDL_keysym&, bool)$/;"	f	class:RWidget	signature:(const SDL_keysym&, bool)
eventKeyUp	/home/viper/projects/RBit/rwidget.h	/^    virtual bool eventKeyUp(const SDL_keysym& key, bool autoRepeat);$/;"	p	class:RWidget	access:protected	signature:(const SDL_keysym& key, bool autoRepeat)
eventMouseDown	/home/viper/projects/RBit/captionwidget.cpp	/^void CCaptionWidget::eventMouseDown(const SDL_MouseButtonEvent &e)$/;"	f	class:CCaptionWidget	signature:(const SDL_MouseButtonEvent &e)
eventMouseDown	/home/viper/projects/RBit/captionwidget.h	/^	virtual void eventMouseDown(const SDL_MouseButtonEvent&);$/;"	p	class:CCaptionWidget	access:protected	signature:(const SDL_MouseButtonEvent&)
eventMouseDown	/home/viper/projects/RBit/rbutton.cpp	/^void RButton::eventMouseDown(const SDL_MouseButtonEvent& m)$/;"	f	class:RButton	signature:(const SDL_MouseButtonEvent& m)
eventMouseDown	/home/viper/projects/RBit/rbutton.h	/^    virtual void eventMouseDown(const SDL_MouseButtonEvent& m);$/;"	p	class:RButton	access:protected	signature:(const SDL_MouseButtonEvent& m)
eventMouseDown	/home/viper/projects/RBit/rcheckbox.cpp	/^void RCheckBox::eventMouseDown(const SDL_MouseButtonEvent& m)$/;"	f	class:RCheckBox	signature:(const SDL_MouseButtonEvent& m)
eventMouseDown	/home/viper/projects/RBit/rcheckbox.h	/^	virtual void eventMouseDown(const SDL_MouseButtonEvent& m);$/;"	p	class:RCheckBox	access:protected	signature:(const SDL_MouseButtonEvent& m)
eventMouseDown	/home/viper/projects/RBit/rcombobox.cpp	/^    virtual void eventMouseDown(const SDL_MouseButtonEvent& m)$/;"	f	class:RComboBox::Popup	access:protected	signature:(const SDL_MouseButtonEvent& m)
eventMouseDown	/home/viper/projects/RBit/rcombobox.cpp	/^void RComboBox::eventMouseDown(const SDL_MouseButtonEvent& m)$/;"	f	class:RComboBox	signature:(const SDL_MouseButtonEvent& m)
eventMouseDown	/home/viper/projects/RBit/rcombobox.h	/^    virtual void eventMouseDown(const SDL_MouseButtonEvent&);$/;"	p	class:RComboBox	access:protected	signature:(const SDL_MouseButtonEvent&)
eventMouseDown	/home/viper/projects/RBit/reditbox.cpp	/^void REditBox::eventMouseDown(const SDL_MouseButtonEvent& m)$/;"	f	class:REditBox	signature:(const SDL_MouseButtonEvent& m)
eventMouseDown	/home/viper/projects/RBit/reditbox.h	/^    virtual void eventMouseDown(const SDL_MouseButtonEvent&);$/;"	p	class:REditBox	access:protected	signature:(const SDL_MouseButtonEvent&)
eventMouseDown	/home/viper/projects/RBit/rgridview.cpp	/^void RGridView::Viewport::eventMouseDown(const SDL_MouseButtonEvent& m)$/;"	f	class:RGridView::Viewport	signature:(const SDL_MouseButtonEvent& m)
eventMouseDown	/home/viper/projects/RBit/rgridview.cpp	/^void RGridView::eventMouseDown(const SDL_MouseButtonEvent& m)$/;"	f	class:RGridView	signature:(const SDL_MouseButtonEvent& m)
eventMouseDown	/home/viper/projects/RBit/rgridview.h	/^        virtual void eventMouseDown(const SDL_MouseButtonEvent&);$/;"	p	class:RGridView::Viewport	access:protected	signature:(const SDL_MouseButtonEvent&)
eventMouseDown	/home/viper/projects/RBit/rgridview.h	/^    virtual void eventMouseDown(const SDL_MouseButtonEvent&);$/;"	p	class:RGridView	access:protected	signature:(const SDL_MouseButtonEvent&)
eventMouseDown	/home/viper/projects/RBit/rheaderview.cpp	/^void RHeaderView::eventMouseDown(const SDL_MouseButtonEvent& m)$/;"	f	class:RHeaderView	signature:(const SDL_MouseButtonEvent& m)
eventMouseDown	/home/viper/projects/RBit/rheaderview.h	/^    virtual void eventMouseDown(const SDL_MouseButtonEvent&);$/;"	p	class:RHeaderView	access:protected	signature:(const SDL_MouseButtonEvent&)
eventMouseDown	/home/viper/projects/RBit/rscrollarea.cpp	/^void RScrollArea::Viewport::eventMouseDown(const SDL_MouseButtonEvent& m)$/;"	f	class:RScrollArea::Viewport	signature:(const SDL_MouseButtonEvent& m)
eventMouseDown	/home/viper/projects/RBit/rscrollarea.cpp	/^void RScrollAreaBase::eventMouseDown(const SDL_MouseButtonEvent& m)$/;"	f	class:RScrollAreaBase	signature:(const SDL_MouseButtonEvent& m)
eventMouseDown	/home/viper/projects/RBit/rscrollarea.h	/^        virtual void eventMouseDown(const SDL_MouseButtonEvent&);$/;"	p	class:RScrollArea::Viewport	access:protected	signature:(const SDL_MouseButtonEvent&)
eventMouseDown	/home/viper/projects/RBit/rscrollarea.h	/^    virtual void eventMouseDown(const SDL_MouseButtonEvent&);$/;"	p	class:RScrollAreaBase	access:protected	signature:(const SDL_MouseButtonEvent&)
eventMouseDown	/home/viper/projects/RBit/rscrollbar.cpp	/^void RScrollBar::eventMouseDown(const SDL_MouseButtonEvent& m)$/;"	f	class:RScrollBar	signature:(const SDL_MouseButtonEvent& m)
eventMouseDown	/home/viper/projects/RBit/rscrollbar.h	/^    virtual void eventMouseDown(const SDL_MouseButtonEvent& m);$/;"	p	class:RScrollBar	access:protected	signature:(const SDL_MouseButtonEvent& m)
eventMouseDown	/home/viper/projects/RBit/rsplitter.cpp	/^void RSplitter::eventMouseDown(const SDL_MouseButtonEvent& m)$/;"	f	class:RSplitter	signature:(const SDL_MouseButtonEvent& m)
eventMouseDown	/home/viper/projects/RBit/rsplitter.h	/^	virtual void eventMouseDown(const SDL_MouseButtonEvent& m);$/;"	p	class:RSplitter	access:protected	signature:(const SDL_MouseButtonEvent& m)
eventMouseDown	/home/viper/projects/RBit/rwidget.cpp	/^void RWidget::eventMouseDown(const SDL_MouseButtonEvent& m)$/;"	f	class:RWidget	signature:(const SDL_MouseButtonEvent& m)
eventMouseDown	/home/viper/projects/RBit/rwidget.h	/^    virtual void eventMouseDown(const SDL_MouseButtonEvent&);$/;"	p	class:RWidget	access:protected	signature:(const SDL_MouseButtonEvent&)
eventMouseMove	/home/viper/projects/RBit/reditbox.cpp	/^void REditBox::eventMouseMove(const SDL_MouseMotionEvent& m)$/;"	f	class:REditBox	signature:(const SDL_MouseMotionEvent& m)
eventMouseMove	/home/viper/projects/RBit/reditbox.h	/^    virtual void eventMouseMove(const SDL_MouseMotionEvent&);$/;"	p	class:REditBox	access:protected	signature:(const SDL_MouseMotionEvent&)
eventMouseMove	/home/viper/projects/RBit/rgridview.cpp	/^void RGridView::eventMouseMove(const SDL_MouseMotionEvent& m)$/;"	f	class:RGridView	signature:(const SDL_MouseMotionEvent& m)
eventMouseMove	/home/viper/projects/RBit/rgridview.h	/^    virtual void eventMouseMove(const SDL_MouseMotionEvent&);$/;"	p	class:RGridView	access:protected	signature:(const SDL_MouseMotionEvent&)
eventMouseMove	/home/viper/projects/RBit/rheaderview.cpp	/^void RHeaderView::eventMouseMove(const SDL_MouseMotionEvent& m)$/;"	f	class:RHeaderView	signature:(const SDL_MouseMotionEvent& m)
eventMouseMove	/home/viper/projects/RBit/rheaderview.h	/^    virtual void eventMouseMove(const SDL_MouseMotionEvent&);$/;"	p	class:RHeaderView	access:protected	signature:(const SDL_MouseMotionEvent&)
eventMouseMove	/home/viper/projects/RBit/rscrollarea.cpp	/^void RScrollArea::Viewport::eventMouseMove(const SDL_MouseMotionEvent& m)$/;"	f	class:RScrollArea::Viewport	signature:(const SDL_MouseMotionEvent& m)
eventMouseMove	/home/viper/projects/RBit/rscrollarea.h	/^        virtual void eventMouseMove(const SDL_MouseMotionEvent&);        $/;"	p	class:RScrollArea::Viewport	access:protected	signature:(const SDL_MouseMotionEvent&)
eventMouseMove	/home/viper/projects/RBit/rscrollbar.cpp	/^void RScrollBar::eventMouseMove(const SDL_MouseMotionEvent& m)$/;"	f	class:RScrollBar	signature:(const SDL_MouseMotionEvent& m)
eventMouseMove	/home/viper/projects/RBit/rscrollbar.h	/^    virtual void eventMouseMove(const SDL_MouseMotionEvent& m);$/;"	p	class:RScrollBar	access:protected	signature:(const SDL_MouseMotionEvent& m)
eventMouseMove	/home/viper/projects/RBit/rsplitter.cpp	/^void RSplitter::eventMouseMove(const SDL_MouseMotionEvent& m)$/;"	f	class:RSplitter	signature:(const SDL_MouseMotionEvent& m)
eventMouseMove	/home/viper/projects/RBit/rsplitter.h	/^	virtual void eventMouseMove(const SDL_MouseMotionEvent&);$/;"	p	class:RSplitter	access:protected	signature:(const SDL_MouseMotionEvent&)
eventMouseMove	/home/viper/projects/RBit/rwidget.cpp	/^void RWidget::eventMouseMove(const SDL_MouseMotionEvent&)$/;"	f	class:RWidget	signature:(const SDL_MouseMotionEvent&)
eventMouseMove	/home/viper/projects/RBit/rwidget.h	/^    virtual void eventMouseMove(const SDL_MouseMotionEvent&);$/;"	p	class:RWidget	access:protected	signature:(const SDL_MouseMotionEvent&)
eventMouseUp	/home/viper/projects/RBit/rbutton.cpp	/^void RButton::eventMouseUp(const SDL_MouseButtonEvent& m)$/;"	f	class:RButton	signature:(const SDL_MouseButtonEvent& m)
eventMouseUp	/home/viper/projects/RBit/rbutton.h	/^    virtual void eventMouseUp(const SDL_MouseButtonEvent& m);$/;"	p	class:RButton	access:protected	signature:(const SDL_MouseButtonEvent& m)
eventMouseUp	/home/viper/projects/RBit/rcheckbox.cpp	/^void RCheckBox::eventMouseUp(const SDL_MouseButtonEvent& m)$/;"	f	class:RCheckBox	signature:(const SDL_MouseButtonEvent& m)
eventMouseUp	/home/viper/projects/RBit/rcheckbox.h	/^	virtual void eventMouseUp(const SDL_MouseButtonEvent& m);$/;"	p	class:RCheckBox	access:protected	signature:(const SDL_MouseButtonEvent& m)
eventMouseUp	/home/viper/projects/RBit/rcombobox.cpp	/^    virtual void eventMouseUp(const SDL_MouseButtonEvent& m)$/;"	f	class:RComboBox::Popup	access:protected	signature:(const SDL_MouseButtonEvent& m)
eventMouseUp	/home/viper/projects/RBit/rcombobox.cpp	/^void RComboBox::eventMouseUp(const SDL_MouseButtonEvent& m)$/;"	f	class:RComboBox	signature:(const SDL_MouseButtonEvent& m)
eventMouseUp	/home/viper/projects/RBit/rcombobox.h	/^    virtual void eventMouseUp(const SDL_MouseButtonEvent&);$/;"	p	class:RComboBox	access:protected	signature:(const SDL_MouseButtonEvent&)
eventMouseUp	/home/viper/projects/RBit/rgridview.cpp	/^void RGridView::Viewport::eventMouseUp(const SDL_MouseButtonEvent& m)$/;"	f	class:RGridView::Viewport	signature:(const SDL_MouseButtonEvent& m)
eventMouseUp	/home/viper/projects/RBit/rgridview.cpp	/^void RGridView::eventMouseUp(const SDL_MouseButtonEvent& m)$/;"	f	class:RGridView	signature:(const SDL_MouseButtonEvent& m)
eventMouseUp	/home/viper/projects/RBit/rgridview.h	/^        virtual void eventMouseUp(const SDL_MouseButtonEvent&);        $/;"	p	class:RGridView::Viewport	access:protected	signature:(const SDL_MouseButtonEvent&)
eventMouseUp	/home/viper/projects/RBit/rgridview.h	/^    virtual void eventMouseUp(const SDL_MouseButtonEvent&);$/;"	p	class:RGridView	access:protected	signature:(const SDL_MouseButtonEvent&)
eventMouseUp	/home/viper/projects/RBit/rheaderview.cpp	/^void RHeaderView::eventMouseUp(const SDL_MouseButtonEvent& m)$/;"	f	class:RHeaderView	signature:(const SDL_MouseButtonEvent& m)
eventMouseUp	/home/viper/projects/RBit/rheaderview.h	/^    virtual void eventMouseUp(const SDL_MouseButtonEvent&);$/;"	p	class:RHeaderView	access:protected	signature:(const SDL_MouseButtonEvent&)
eventMouseUp	/home/viper/projects/RBit/rscrollarea.cpp	/^void RScrollArea::Viewport::eventMouseUp(const SDL_MouseButtonEvent& m)$/;"	f	class:RScrollArea::Viewport	signature:(const SDL_MouseButtonEvent& m)
eventMouseUp	/home/viper/projects/RBit/rscrollarea.h	/^        virtual void eventMouseUp(const SDL_MouseButtonEvent&);$/;"	p	class:RScrollArea::Viewport	access:protected	signature:(const SDL_MouseButtonEvent&)
eventMouseUp	/home/viper/projects/RBit/rscrollbar.cpp	/^void RScrollBar::eventMouseUp(const SDL_MouseButtonEvent& m)$/;"	f	class:RScrollBar	signature:(const SDL_MouseButtonEvent& m)
eventMouseUp	/home/viper/projects/RBit/rscrollbar.h	/^    virtual void eventMouseUp(const SDL_MouseButtonEvent& m);$/;"	p	class:RScrollBar	access:protected	signature:(const SDL_MouseButtonEvent& m)
eventMouseUp	/home/viper/projects/RBit/rsplitter.cpp	/^void RSplitter::eventMouseUp(const SDL_MouseButtonEvent& m)$/;"	f	class:RSplitter	signature:(const SDL_MouseButtonEvent& m)
eventMouseUp	/home/viper/projects/RBit/rsplitter.h	/^	virtual void eventMouseUp(const SDL_MouseButtonEvent& m);$/;"	p	class:RSplitter	access:protected	signature:(const SDL_MouseButtonEvent& m)
eventMouseUp	/home/viper/projects/RBit/rwidget.cpp	/^void RWidget::eventMouseUp(const SDL_MouseButtonEvent&)$/;"	f	class:RWidget	signature:(const SDL_MouseButtonEvent&)
eventMouseUp	/home/viper/projects/RBit/rwidget.h	/^    virtual void eventMouseUp(const SDL_MouseButtonEvent&);$/;"	p	class:RWidget	access:protected	signature:(const SDL_MouseButtonEvent&)
eventScreenChanged	/home/viper/projects/RBit/rcolormanager.cpp	/^void RColorManager::eventScreenChanged()$/;"	f	class:RColorManager	signature:()
eventScreenChanged	/home/viper/projects/RBit/rcolormanager.h	/^    void eventScreenChanged();$/;"	p	class:RColorManager	access:protected	signature:()
eventScreenChanged	/home/viper/projects/RBit/rwidget.cpp	/^void RWidget::eventScreenChanged()$/;"	f	class:RWidget	signature:()
eventScreenChanged	/home/viper/projects/RBit/rwidget.h	/^    virtual void eventScreenChanged();$/;"	p	class:RWidget	access:protected	signature:()
eventShow	/home/viper/projects/RBit/rdialog.cpp	/^void RDialog::eventShow()$/;"	f	class:RDialog	signature:()
eventShow	/home/viper/projects/RBit/rdialog.h	/^	virtual void eventShow();$/;"	p	class:RDialog	access:protected	signature:()
eventShow	/home/viper/projects/RBit/reditbox.cpp	/^void REditBox::eventShow()$/;"	f	class:REditBox	signature:()
eventShow	/home/viper/projects/RBit/reditbox.h	/^    virtual void eventShow();$/;"	p	class:REditBox	access:protected	signature:()
eventShow	/home/viper/projects/RBit/rgridview.cpp	/^void RGridView::eventShow()$/;"	f	class:RGridView	signature:()
eventShow	/home/viper/projects/RBit/rgridview.h	/^    virtual void eventShow();    $/;"	p	class:RGridView	access:protected	signature:()
eventShow	/home/viper/projects/RBit/rheaderview.cpp	/^void RHeaderView::eventShow()$/;"	f	class:RHeaderView	signature:()
eventShow	/home/viper/projects/RBit/rheaderview.h	/^    virtual void eventShow();$/;"	p	class:RHeaderView	access:protected	signature:()
eventShow	/home/viper/projects/RBit/rmessagebox.cpp	/^void RMessageBox::eventShow()$/;"	f	class:RMessageBox	signature:()
eventShow	/home/viper/projects/RBit/rmessagebox.h	/^    virtual void eventShow();    $/;"	p	class:RMessageBox	access:protected	signature:()
eventShow	/home/viper/projects/RBit/rsplitter.cpp	/^void RSplitter::eventShow()$/;"	f	class:RSplitter	signature:()
eventShow	/home/viper/projects/RBit/rsplitter.h	/^	virtual void eventShow();$/;"	p	class:RSplitter	access:protected	signature:()
eventShow	/home/viper/projects/RBit/rwidget.cpp	/^void RWidget::eventShow()$/;"	f	class:RWidget	signature:()
eventShow	/home/viper/projects/RBit/rwidget.h	/^    virtual void eventShow();$/;"	p	class:RWidget	access:protected	signature:()
eventSplit	/home/viper/projects/RBit/rsplitter.cpp	/^void RSplitter::eventSplit()$/;"	f	class:RSplitter	signature:()
eventSplit	/home/viper/projects/RBit/rsplitter.h	/^	virtual void eventSplit();$/;"	p	class:RSplitter	access:protected	signature:()
expandedTo	/home/viper/projects/RBit/rsize.h	/^    RSize expandedTo(const RSize&) const;$/;"	p	class:RSize	access:public	signature:(const RSize&) const
expandedTo	/home/viper/projects/RBit/rsize.h	/^inline RSize RSize::expandedTo(const RSize& s) const$/;"	f	class:RSize	signature:(const RSize& s) const
f	/home/viper/projects/RBit/rheaderview.o	/^∏ˇˇˇˇÈ∆/;"	v
face	/home/viper/projects/RBit/rsdlttf.cpp	/^	FT_Face face;$/;"	m	struct:_TTF_Font	file:	access:public
findData	/home/viper/projects/RBit/rcombobox.cpp	/^		int findData(const char *key)$/;"	f	class:RComboBox::Popup::PopupModel	access:public	signature:(const char *key)
firstChildWidget	/home/viper/projects/RBit/rwidget.h	/^    RWidget* firstChildWidget() const;$/;"	p	class:RWidget	access:public	signature:() const
firstChildWidget	/home/viper/projects/RBit/rwidget.h	/^inline RWidget* RWidget::firstChildWidget() const$/;"	f	class:RWidget	signature:() const
firstObserver	/home/viper/projects/RBit/rsubjectobserver.h	/^    Observer* firstObserver() const$/;"	f	class:RSubject	access:public	signature:() const
firstSubject	/home/viper/projects/RBit/rsubjectobserver.h	/^    Subject* firstSubject() const$/;"	f	class:RObserver	access:public	signature:() const
firstTopLevelWidget	/home/viper/projects/RBit/rapplication.cpp	/^RWidget* RApplication::firstTopLevelWidget()  $/;"	f	class:RApplication	signature:()
firstTopLevelWidget	/home/viper/projects/RBit/rapplication.h	/^    RWidget* firstTopLevelWidget();$/;"	p	class:RApplication	access:public	signature:()
flags	/home/viper/projects/RBit/rgridmodel.h	/^    virtual int flags() { return ItemIsSelectable | ItemIsEditable; }$/;"	f	class:RGridModel	access:public	signature:()
focusNextChildWidget	/home/viper/projects/RBit/rwidget.h	/^    bool focusNextChildWidget();$/;"	p	class:RWidget	access:protected	signature:()
focusNextChildWidget	/home/viper/projects/RBit/rwidget.h	/^inline bool RWidget::focusNextChildWidget()$/;"	f	class:RWidget	signature:()
focusNextPrevChildWidget	/home/viper/projects/RBit/rwidget.cpp	/^bool RWidget::focusNextPrevChildWidget(bool next)$/;"	f	class:RWidget	signature:(bool next)
focusNextPrevChildWidget	/home/viper/projects/RBit/rwidget.h	/^    virtual bool focusNextPrevChildWidget(bool next);    $/;"	p	class:RWidget	access:protected	signature:(bool next)
focusPrevChildWidget	/home/viper/projects/RBit/rwidget.h	/^    bool focusPrevChildWidget();$/;"	p	class:RWidget	access:protected	signature:()
focusPrevChildWidget	/home/viper/projects/RBit/rwidget.h	/^inline bool RWidget::focusPrevChildWidget()$/;"	f	class:RWidget	signature:()
focusWidget	/home/viper/projects/RBit/rapplication.h	/^    RWidget* focusWidget(); $/;"	p	class:RApplication	access:public	signature:()
focusWidget	/home/viper/projects/RBit/rapplication.h	/^inline RWidget* RApplication::focusWidget()  $/;"	f	class:RApplication	signature:()
font	/home/viper/projects/RBit/rapplication.cpp	/^const RFont& RApplication::font() const$/;"	f	class:RApplication	signature:() const
font	/home/viper/projects/RBit/rapplication.h	/^    const RFont& font() const;$/;"	p	class:RApplication	access:public	signature:() const
font	/home/viper/projects/RBit/rgridmodel.h	/^    virtual const RFont& font(Sint32 row, Sint32 column) const $/;"	f	class:RGridModel	access:public	signature:(Sint32 row, Sint32 column) const
font	/home/viper/projects/RBit/rheadermodel.h	/^    virtual const RFont& font(Sint32 section) const $/;"	f	class:RHeaderModel	access:public	signature:(Sint32 section) const
font	/home/viper/projects/RBit/rsimplegridmodel.cpp	/^const RFont& RSimpleGridModel::font(Sint32 row, Sint32 column) const$/;"	f	class:RSimpleGridModel	signature:(Sint32 row, Sint32 column) const
font	/home/viper/projects/RBit/rsimplegridmodel.h	/^            RFont font;$/;"	m	struct:RSimpleGridModel::Item::MetaData	access:public
font	/home/viper/projects/RBit/rsimplegridmodel.h	/^        const RFont& font() const;$/;"	p	class:RSimpleGridModel::Item	access:public	signature:() const
font	/home/viper/projects/RBit/rsimplegridmodel.h	/^    virtual const RFont& font(Sint32 row, Sint32 column) const;$/;"	p	class:RSimpleGridModel	access:public	signature:(Sint32 row, Sint32 column) const
font	/home/viper/projects/RBit/rsimplegridmodel.h	/^inline const RFont& RSimpleGridModel::Item::font() const$/;"	f	class:RSimpleGridModel::Item	signature:() const
font	/home/viper/projects/RBit/rsimpleheadermodel.h	/^            RFont font;$/;"	m	struct:RSimpleHeaderModel::Item::MetaData	access:public
font	/home/viper/projects/RBit/rsimpleheadermodel.h	/^        const RFont& font() const;$/;"	p	class:RSimpleHeaderModel::Item	access:public	signature:() const
font	/home/viper/projects/RBit/rsimpleheadermodel.h	/^inline const RFont& RSimpleHeaderModel::Item::font() const$/;"	f	class:RSimpleHeaderModel::Item	signature:() const
font	/home/viper/projects/RBit/rtextpainter.h	/^    const RFont& font() const;$/;"	p	class:RTextPainter	access:public	signature:() const
font	/home/viper/projects/RBit/rtextpainter.h	/^inline const RFont& RTextPainter::font() const$/;"	f	class:RTextPainter	signature:() const
font_size_family	/home/viper/projects/RBit/rsdlttf.cpp	/^	int font_size_family;$/;"	m	struct:_TTF_Font	file:	access:public
foregroundColor	/home/viper/projects/RBit/rcombobox.cpp	/^        virtual const RColor* foregroundColor(Sint32 row, Sint32 column) const$/;"	f	class:RComboBox::Popup::PopupModel	access:public	signature:(Sint32 row, Sint32 column) const
foregroundColor	/home/viper/projects/RBit/rgridmodel.h	/^    virtual const RColor* foregroundColor(Sint32 row, Sint32 column) const$/;"	f	class:RGridModel	access:public	signature:(Sint32 row, Sint32 column) const
foregroundColor	/home/viper/projects/RBit/rheadermodel.h	/^    virtual const RColor* foregroundColor(Sint32 section) const$/;"	f	class:RHeaderModel	access:public	signature:(Sint32 section) const
foregroundColor	/home/viper/projects/RBit/rsimplegridmodel.cpp	/^const RColor* RSimpleGridModel::foregroundColor(Sint32 row, Sint32 column) const$/;"	f	class:RSimpleGridModel	signature:(Sint32 row, Sint32 column) const
foregroundColor	/home/viper/projects/RBit/rsimplegridmodel.h	/^            RColor foregroundColor;$/;"	m	struct:RSimpleGridModel::Item::MetaData	access:public
foregroundColor	/home/viper/projects/RBit/rsimplegridmodel.h	/^        const RColor& foregroundColor() const;$/;"	p	class:RSimpleGridModel::Item	access:public	signature:() const
foregroundColor	/home/viper/projects/RBit/rsimplegridmodel.h	/^    virtual const RColor* foregroundColor(Sint32 row, Sint32 column) const;$/;"	p	class:RSimpleGridModel	access:public	signature:(Sint32 row, Sint32 column) const
foregroundColor	/home/viper/projects/RBit/rsimplegridmodel.h	/^inline const RColor& RSimpleGridModel::Item::foregroundColor() const$/;"	f	class:RSimpleGridModel::Item	signature:() const
foregroundColor	/home/viper/projects/RBit/rsimpleheadermodel.cpp	/^const RColor* RSimpleHeaderModel::foregroundColor(Sint32 section) const$/;"	f	class:RSimpleHeaderModel	signature:(Sint32 section) const
foregroundColor	/home/viper/projects/RBit/rsimpleheadermodel.h	/^            RColor foregroundColor;$/;"	m	struct:RSimpleHeaderModel::Item::MetaData	access:public
foregroundColor	/home/viper/projects/RBit/rsimpleheadermodel.h	/^        const RColor& foregroundColor() const;$/;"	p	class:RSimpleHeaderModel::Item	access:public	signature:() const
foregroundColor	/home/viper/projects/RBit/rsimpleheadermodel.h	/^    virtual const RColor* foregroundColor(Sint32 section) const;$/;"	p	class:RSimpleHeaderModel	access:public	signature:(Sint32 section) const
foregroundColor	/home/viper/projects/RBit/rsimpleheadermodel.h	/^inline const RColor& RSimpleHeaderModel::Item::foregroundColor() const$/;"	f	class:RSimpleHeaderModel::Item	signature:() const
foregroundRole	/home/viper/projects/RBit/rwidget.cpp	/^RPalette::ColorRole RWidget::foregroundRole() const$/;"	f	class:RWidget	signature:() const
foregroundRole	/home/viper/projects/RBit/rwidget.h	/^    RPalette::ColorRole foregroundRole() const;$/;"	p	class:RWidget	access:public	signature:() const
fps	/home/viper/projects/RBit/rapplication.cpp	/^} fps;$/;"	v	typeref:struct:__anon21::FPS
fps_label	/home/viper/projects/RBit/rapplication.cpp	/^RLabel* fps_label = 0;$/;"	v
frameLineWidth	/home/viper/projects/RBit/rframepainter.h	/^    Uint8 frameLineWidth() const;   $/;"	p	class:RFramePainter	access:public	signature:() const
frameLineWidth	/home/viper/projects/RBit/rframepainter.h	/^inline Uint8 RFramePainter::frameLineWidth() const$/;"	f	class:RFramePainter	signature:() const
frameMidLineWidth	/home/viper/projects/RBit/rframepainter.h	/^    Uint8 frameMidLineWidth() const;$/;"	p	class:RFramePainter	access:public	signature:() const
frameMidLineWidth	/home/viper/projects/RBit/rframepainter.h	/^inline Uint8 RFramePainter::frameMidLineWidth() const$/;"	f	class:RFramePainter	signature:() const
frameShadow	/home/viper/projects/RBit/rframepainter.h	/^    RFrameShadowFlags frameShadow() const;$/;"	p	class:RFramePainter	access:public	signature:() const
frameShadow	/home/viper/projects/RBit/rframepainter.h	/^inline RFrameShadowFlags RFramePainter::frameShadow() const$/;"	f	class:RFramePainter	signature:() const
frameShape	/home/viper/projects/RBit/rframepainter.h	/^    RFrameShapeFlags frameShape() const;$/;"	p	class:RFramePainter	access:public	signature:() const
frameShape	/home/viper/projects/RBit/rframepainter.h	/^inline RFrameShapeFlags RFramePainter::frameShape() const$/;"	f	class:RFramePainter	signature:() const
frameStyle	/home/viper/projects/RBit/rframepainter.h	/^    int frameStyle() const;$/;"	p	class:RFramePainter	access:public	signature:() const
frameStyle	/home/viper/projects/RBit/rframepainter.h	/^inline int RFramePainter::frameStyle() const$/;"	f	class:RFramePainter	signature:() const
frameWidth	/home/viper/projects/RBit/rframepainter.h	/^    Uint8 frameWidth() const;$/;"	p	class:RFramePainter	access:public	signature:() const
frameWidth	/home/viper/projects/RBit/rframepainter.h	/^inline Uint8 RFramePainter::frameWidth() const$/;"	f	class:RFramePainter	signature:() const
frameWidthChanged	/home/viper/projects/RBit/reditbox.cpp	/^void REditBox::frameWidthChanged()$/;"	f	class:REditBox	signature:()
frameWidthChanged	/home/viper/projects/RBit/reditbox.h	/^    virtual void frameWidthChanged();$/;"	p	class:REditBox	access:protected	signature:()
frameWidthChanged	/home/viper/projects/RBit/rframepainter.cpp	/^void RFramePainter::frameWidthChanged()$/;"	f	class:RFramePainter	signature:()
frameWidthChanged	/home/viper/projects/RBit/rframepainter.h	/^    virtual void frameWidthChanged();$/;"	p	class:RFramePainter	access:protected	signature:()
frames	/home/viper/projects/RBit/rapplication.cpp	/^    int frames;$/;"	m	struct:__anon21::FPS	file:	access:public
free	/home/viper/projects/RBit/rarraycontainer.h	/^	void    free();$/;"	p	class:RArrayContainer	access:public	signature:()
free	/home/viper/projects/RBit/rarraycontainer.h	/^inline void RArrayContainer<T>::free()$/;"	f	class:RArrayContainer	signature:()
free	/home/viper/projects/RBit/rcolormanager.cpp	/^void RColorManager::RBlendingMapPtr::free()$/;"	f	class:RColorManager::RBlendingMapPtr	signature:()
free	/home/viper/projects/RBit/rcolormanager.cpp	/^void RColorManager::free()$/;"	f	class:RColorManager	signature:()
free	/home/viper/projects/RBit/rcolormanager.h	/^        void free();$/;"	p	class:RColorManager::RBlendingMapPtr	access:public	signature:()
free	/home/viper/projects/RBit/rcolormanager.h	/^    void free();$/;"	p	class:RColorManager	access:public	signature:()
free	/home/viper/projects/RBit/rfont.h	/^    void free()  \/\/ obsolete, exists for compatibility$/;"	f	class:RFont	access:public	signature:()
free	/home/viper/projects/RBit/rlibrary.h	/^    void free() \/\/ obsolete, exists for compatibility$/;"	f	class:RLibrary	access:public	signature:()
free	/home/viper/projects/RBit/rstring.h	/^	void free();$/;"	p	class:RString	access:public	signature:()
free	/home/viper/projects/RBit/rstring.h	/^inline void RString::free()$/;"	f	class:RString	signature:()
free	/home/viper/projects/RBit/rsurface.h	/^    void free()  \/\/ obsolete, exists for compatibility$/;"	f	class:RSurface	access:public	signature:()
freesrc	/home/viper/projects/RBit/rsdlttf.cpp	/^	int freesrc;$/;"	m	struct:_TTF_Font	file:	access:public
geometry	/home/viper/projects/RBit/rwidget.h	/^    const RRect& geometry() const;  $/;"	p	class:RWidget	access:public	signature:() const
geometry	/home/viper/projects/RBit/rwidget.h	/^inline const RRect& RWidget::geometry() const$/;"	f	class:RWidget	signature:() const
get	/home/viper/projects/RBit/rarraycontainer.h	/^	T*      get() const;		$/;"	p	class:RArrayContainer	access:public	signature:() const
get	/home/viper/projects/RBit/rarraycontainer.h	/^inline T* RArrayContainer<T>::get() const$/;"	f	class:RArrayContainer	signature:() const
get	/home/viper/projects/RBit/rsharedptr.h	/^    T* get() const$/;"	f	class:RSharedPtr	access:public	signature:() const
getCaptionPolicy	/home/viper/projects/RBit/captionwidget.h	/^	CaptionPolicy getCaptionPolicy() const;$/;"	p	class:CCaptionWidget	access:public	signature:() const
getCaptionPolicy	/home/viper/projects/RBit/captionwidget.h	/^inline CCaptionWidget::CaptionPolicy CCaptionWidget::getCaptionPolicy() const$/;"	f	class:CCaptionWidget	signature:() const
getSplitterWidth	/home/viper/projects/RBit/rsplitter.cpp	/^int RSplitter::getSplitterWidth() const$/;"	f	class:RSplitter	signature:() const
getSplitterWidth	/home/viper/projects/RBit/rsplitter.h	/^	int getSplitterWidth() const;$/;"	p	class:RSplitter	access:public	signature:() const
getWFlags	/home/viper/projects/RBit/rwidget.h	/^    RWFlags getWFlags() const;$/;"	p	class:RWidget	access:public	signature:() const
getWFlags	/home/viper/projects/RBit/rwidget.h	/^inline RWFlags RWidget::getWFlags() const$/;"	f	class:RWidget	signature:() const
getWindowHandle	/home/viper/projects/RBit/rapplication.cpp	/^long RApplication::getWindowHandle() {$/;"	f	class:RApplication	signature:()
getWindowHandle	/home/viper/projects/RBit/rapplication.h	/^	long getWindowHandle();$/;"	p	class:RApplication	access:public	signature:()
glColor	/home/viper/projects/RBit/rgl.h	/^inline void glColor(const RColor& c)$/;"	f	signature:(const RColor& c)
glyph_italics	/home/viper/projects/RBit/rsdlttf.cpp	/^	float glyph_italics;$/;"	m	struct:_TTF_Font	file:	access:public
glyph_overhang	/home/viper/projects/RBit/rsdlttf.cpp	/^	int glyph_overhang;$/;"	m	struct:_TTF_Font	file:	access:public
grabMouse	/home/viper/projects/RBit/rapplication.cpp	/^void RApplication::grabMouse(RWidget* w)$/;"	f	class:RApplication	signature:(RWidget* w)
grabMouse	/home/viper/projects/RBit/rapplication.h	/^    void grabMouse(RWidget* w);$/;"	p	class:RApplication	access:protected	signature:(RWidget* w)
grabMouse	/home/viper/projects/RBit/rwidget.h	/^    void grabMouse();$/;"	p	class:RWidget	access:public	signature:()
grabMouse	/home/viper/projects/RBit/rwidget.h	/^inline void RWidget::grabMouse()$/;"	f	class:RWidget	signature:()
gray	/home/viper/projects/RBit/rbit.h	/^        gray,$/;"	e	enum:RBit::GlobalColor
grayed	/home/viper/projects/RBit/rcolor.cpp	/^RColor RColor::grayed() const$/;"	f	class:RColor	signature:() const
grayed	/home/viper/projects/RBit/rcolor.h	/^    RColor grayed() const;	$/;"	p	class:RColor	access:public	signature:() const
green	/home/viper/projects/RBit/rbit.h	/^        green,$/;"	e	enum:RBit::GlobalColor
green	/home/viper/projects/RBit/rcolor.h	/^	Uint8  green() const;$/;"	p	class:RColor	access:public	signature:() const
green	/home/viper/projects/RBit/rcolor.h	/^inline Uint8 RColor::green() const$/;"	f	class:RColor	signature:() const
h	/home/viper/projects/RBit/rgl.h	/^    int h;$/;"	m	struct:rglPicSeq	access:public
handle	/home/viper/projects/RBit/rlibrary.h	/^    void* handle() const \/\/ obsolete, exists for compatibility$/;"	f	class:RLibrary	access:public	signature:() const
handleClick	/home/viper/projects/RBit/rmessagebox.cpp	/^void RMessageBox::handleClick(int button)$/;"	f	class:RMessageBox	signature:(int button)
handleClick	/home/viper/projects/RBit/rmessagebox.h	/^    void handleClick(int button);$/;"	p	class:RMessageBox	access:protected	signature:(int button)
hasFocus	/home/viper/projects/RBit/rwidget.h	/^    bool hasFocus() const;$/;"	p	class:RWidget	access:public	signature:() const
hasFocus	/home/viper/projects/RBit/rwidget.h	/^inline bool RWidget::hasFocus() const$/;"	f	class:RWidget	signature:() const
hasSelectedText	/home/viper/projects/RBit/reditbox.cpp	/^bool REditBox::hasSelectedText() const$/;"	f	class:REditBox	signature:() const
hasSelectedText	/home/viper/projects/RBit/reditbox.h	/^    bool hasSelectedText() const;    $/;"	p	class:REditBox	access:public	signature:() const
head	/home/viper/projects/RBit/rsimplelist.h	/^    inline Contents* head() const$/;"	f	class:RSimpleList	access:public	signature:() const
height	/home/viper/projects/RBit/rfont.h	/^    Uint8 height() const    $/;"	f	class:RFont	access:public	signature:() const
height	/home/viper/projects/RBit/rrect.h	/^    Uint16 height() const;$/;"	p	class:RRect	access:public	signature:() const
height	/home/viper/projects/RBit/rrect.h	/^inline Uint16 RRect::height() const $/;"	f	class:RRect	signature:() const
height	/home/viper/projects/RBit/rsdlttf.cpp	/^	int height;$/;"	m	struct:_TTF_Font	file:	access:public
height	/home/viper/projects/RBit/rsize.h	/^    Uint16 height() const;$/;"	p	class:RSize	access:public	signature:() const
height	/home/viper/projects/RBit/rsize.h	/^inline Uint16 RSize::height() const $/;"	f	class:RSize	signature:() const
height	/home/viper/projects/RBit/rwidget.h	/^    Uint16 height() const;$/;"	p	class:RWidget	access:public	signature:() const
height	/home/viper/projects/RBit/rwidget.h	/^inline Uint16 RWidget::height() const$/;"	f	class:RWidget	signature:() const
hide	/home/viper/projects/RBit/rwidget.cpp	/^void RWidget::hide()$/;"	f	class:RWidget	signature:()
hide	/home/viper/projects/RBit/rwidget.cpp	/^void RWidget::hide(bool explicitly)$/;"	f	class:RWidget	signature:(bool explicitly)
hide	/home/viper/projects/RBit/rwidget.h	/^    void hide();    $/;"	p	class:RWidget	access:public	signature:()
hide	/home/viper/projects/RBit/rwidget.h	/^    void hide(bool explicitly);$/;"	p	class:RWidget	access:private	signature:(bool explicitly)
hidePopup	/home/viper/projects/RBit/rcombobox.cpp	/^void RComboBox::hidePopup()$/;"	f	class:RComboBox	signature:()
hidePopup	/home/viper/projects/RBit/rcombobox.h	/^    virtual void hidePopup();$/;"	p	class:RComboBox	access:public	signature:()
highlight	/home/viper/projects/RBit/rpalette.h	/^    inline const RColor& highlight() const { return color(Highlight); }$/;"	f	class:RPalette	access:public	signature:() const
highlighted	/home/viper/projects/RBit/rcombobox.cpp	/^void RComboBox::highlighted(Sint32 row)$/;"	f	class:RComboBox	signature:(Sint32 row)
highlighted	/home/viper/projects/RBit/rcombobox.h	/^    virtual void highlighted(Sint32 row);$/;"	p	class:RComboBox	access:protected	signature:(Sint32 row)
highlightedText	/home/viper/projects/RBit/rpalette.h	/^    inline const RColor& highlightedText() const { return color(HighlightedText); }$/;"	f	class:RPalette	access:public	signature:() const
hitTestSubControl	/home/viper/projects/RBit/rcombobox.cpp	/^RComboBox::SubControl RComboBox::hitTestSubControl(const RPoint& p) const$/;"	f	class:RComboBox	signature:(const RPoint& p) const
hitTestSubControl	/home/viper/projects/RBit/rcombobox.h	/^    SubControl hitTestSubControl(const RPoint& p) const;$/;"	p	class:RComboBox	access:protected	signature:(const RPoint& p) const
hitTestSubControl	/home/viper/projects/RBit/rscrollbar.cpp	/^RScrollBar::SubControl RScrollBar::hitTestSubControl(const RPoint& p) const$/;"	f	class:RScrollBar	signature:(const RPoint& p) const
hitTestSubControl	/home/viper/projects/RBit/rscrollbar.h	/^    SubControl hitTestSubControl(const RPoint& p) const;$/;"	p	class:RScrollBar	access:protected	signature:(const RPoint& p) const
home	/home/viper/projects/RBit/reditbox.cpp	/^void REditBox::home(bool mark)$/;"	f	class:REditBox	signature:(bool mark)
home	/home/viper/projects/RBit/reditbox.h	/^    void home(bool mark);$/;"	p	class:REditBox	access:public	signature:(bool mark)
horizontalHeader	/home/viper/projects/RBit/rgridview.h	/^    RHeaderView* horizontalHeader() const;$/;"	p	class:RGridView	access:public	signature:() const
horizontalHeader	/home/viper/projects/RBit/rgridview.h	/^inline RHeaderView* RGridView::horizontalHeader() const$/;"	f	class:RGridView	signature:() const
horizontalHeaderPressed	/home/viper/projects/RBit/rgridview.cpp	/^void RGridView::horizontalHeaderPressed(Sint32 section)$/;"	f	class:RGridView	signature:(Sint32 section)
horizontalHeaderPressed	/home/viper/projects/RBit/rgridview.h	/^    virtual void horizontalHeaderPressed(Sint32);$/;"	p	class:RGridView	access:protected	signature:(Sint32)
horizontalOffset	/home/viper/projects/RBit/rgridview.h	/^    Sint32 horizontalOffset() const;$/;"	p	class:RGridView	access:protected	signature:() const
horizontalOffset	/home/viper/projects/RBit/rgridview.h	/^inline Sint32 RGridView::horizontalOffset() const$/;"	f	class:RGridView	signature:() const
horizontalOffset	/home/viper/projects/RBit/rheaderview.h	/^    Sint32 horizontalOffset() const;$/;"	p	class:RHeaderView	access:protected	signature:() const
horizontalScrollBar	/home/viper/projects/RBit/rscrollarea.h	/^    RScrollBar* horizontalScrollBar() const;$/;"	p	class:RScrollAreaBase	access:public	signature:() const
horizontalScrollBar	/home/viper/projects/RBit/rscrollarea.h	/^inline RScrollBar* RScrollAreaBase::horizontalScrollBar() const$/;"	f	class:RScrollAreaBase	signature:() const
horizontalScrollBarAction	/home/viper/projects/RBit/rgridview.cpp	/^void RGridView::horizontalScrollBarAction(RScrollBar::ScrollAction action)$/;"	f	class:RGridView	signature:(RScrollBar::ScrollAction action)
horizontalScrollBarAction	/home/viper/projects/RBit/rgridview.h	/^    virtual void horizontalScrollBarAction(RScrollBar::ScrollAction action);$/;"	p	class:RGridView	access:protected	signature:(RScrollBar::ScrollAction action)
horizontalScrollBarAction	/home/viper/projects/RBit/rscrollarea.h	/^    virtual void horizontalScrollBarAction(RScrollBar::ScrollAction action)$/;"	f	class:RScrollAreaBase	access:protected	signature:(RScrollBar::ScrollAction action)
horizontalScrollBarPolicy	/home/viper/projects/RBit/rscrollarea.h	/^    ScrollBarPolicy horizontalScrollBarPolicy() const;$/;"	p	class:RScrollAreaBase	access:public	signature:() const
horizontalScrollBarPolicy	/home/viper/projects/RBit/rscrollarea.h	/^inline RScrollAreaBase::ScrollBarPolicy RScrollAreaBase::horizontalScrollBarPolicy() const$/;"	f	class:RScrollAreaBase	signature:() const
horizontalStepsPerItem	/home/viper/projects/RBit/rgridview.h	/^    inline Uint32 horizontalStepsPerItem() const { return 64; }$/;"	f	class:RGridView	access:protected	signature:() const
hslide	/home/viper/projects/RBit/rscrollarea.cpp	/^void RScrollAreaBase::hslide(Sint32 x)$/;"	f	class:RScrollAreaBase	signature:(Sint32 x)
hslide	/home/viper/projects/RBit/rscrollarea.h	/^    void hslide(Sint32);$/;"	p	class:RScrollAreaBase	access:private	signature:(Sint32)
hue	/home/viper/projects/RBit/rcolor.cpp	/^Uint16 RColor::hue() const$/;"	f	class:RColor	signature:() const
hue	/home/viper/projects/RBit/rcolor.h	/^    Uint16 hue() const;$/;"	p	class:RColor	access:public	signature:() const
i	/home/viper/projects/RBit/rcolormanager.cpp	/^        Uint8 i;    \/\/ ËÌÚÂÌÒË‚ÌÓÒÚ¸$/;"	m	struct:RBlendingMap1::ColorNode	file:	access:public
icon	/home/viper/projects/RBit/rmessagebox.h	/^    Icon icon()const;$/;"	p	class:RMessageBox	access:public	signature:() const
icon	/home/viper/projects/RBit/rmessagebox.h	/^inline RMessageBox::Icon RMessageBox::icon() const$/;"	f	class:RMessageBox	signature:() const
id	/home/viper/projects/RBit/ridentity.h	/^	int id() const;$/;"	p	class:RIdentity	access:public	signature:() const
id	/home/viper/projects/RBit/ridentity.h	/^inline int RIdentity::id() const$/;"	f	class:RIdentity	signature:() const
image	/home/viper/projects/RBit/rimage.cpp	/^    RSurface image;$/;"	m	class:RImagePrivate	file:	access:public
incSize	/home/viper/projects/RBit/rsimplelist.h	/^    inline void incSize()$/;"	f	class:RSLPolicy_DontTrackSize	access:protected	signature:()
incSize	/home/viper/projects/RBit/rsimplelist.h	/^    inline void incSize()$/;"	f	class:RSLPolicy_TrackSize	access:protected	signature:()
index	/home/viper/projects/RBit/rcolor.cpp	/^Uint32 RColor::index(SDL_PixelFormat* format) const$/;"	f	class:RColor	signature:(SDL_PixelFormat* format) const
index	/home/viper/projects/RBit/rcolor.h	/^	Uint32 index(SDL_PixelFormat* format = SDL_GetVideoSurface()->format) const;$/;"	p	class:RColor	access:public	signature:(SDL_PixelFormat* format = SDL_GetVideoSurface()->format) const
index	/home/viper/projects/RBit/rsdlttf.cpp	/^	FT_UInt index;$/;"	m	struct:cached_glyph	file:	access:public
information	/home/viper/projects/RBit/rmessagebox.cpp	/^int RMessageBox::information(RWidget* parent, const char* caption, const char* text, $/;"	f	class:RMessageBox	signature:(RWidget* parent, const char* caption, const char* text, int button0, int button1, int button2)
information	/home/viper/projects/RBit/rmessagebox.h	/^    static int information(RWidget* parent, const char* caption, const char* text, $/;"	p	class:RMessageBox	access:public	signature:(RWidget* parent, const char* caption, const char* text, int button0 = Ok | Default | Escape, int button1 = NoButton, int button2 = NoButton)
informationBmp	/home/viper/projects/RBit/rmessagebox.cpp	/^    const unsigned char informationBmp[] = {$/;"	v
inherits	/home/viper/projects/RBit/rwidget.cpp	/^bool RMetaObject::inherits(const char* className)$/;"	f	class:RMetaObject	signature:(const char* className)
inherits	/home/viper/projects/RBit/rwidget.h	/^    bool inherits(const char* className) const;$/;"	p	class:RWidget	access:public	signature:(const char* className) const
inherits	/home/viper/projects/RBit/rwidget.h	/^    bool inherits(const char* className);$/;"	p	class:RMetaObject	access:public	signature:(const char* className)
inherits	/home/viper/projects/RBit/rwidget.h	/^inline bool RWidget::inherits(const char* className) const$/;"	f	class:RWidget	signature:(const char* className) const
init	/home/viper/projects/RBit/rpalette.cpp	/^void RPalette::init() $/;"	f	class:RPalette	signature:()
init	/home/viper/projects/RBit/rpalette.h	/^    void init();$/;"	p	class:RPalette	access:private	signature:()
init_system_cursor	/home/viper/projects/RBit/rheaderview.cpp	/^    SDL_Cursor *init_system_cursor(const char *image[])$/;"	f	namespace:__anon17	signature:(const char *image[])
initializeSections	/home/viper/projects/RBit/rheaderview.cpp	/^void RHeaderView::initializeSections()$/;"	f	class:RHeaderView	signature:()
initializeSections	/home/viper/projects/RBit/rheaderview.cpp	/^void RHeaderView::initializeSections(Sint32 start, Sint32 end)$/;"	f	class:RHeaderView	signature:(Sint32 start, Sint32 end)
initializeSections	/home/viper/projects/RBit/rheaderview.h	/^    void initializeSections();$/;"	p	class:RHeaderView	access:protected	signature:()
initializeSections	/home/viper/projects/RBit/rheaderview.h	/^    void initializeSections(Sint32 start, Sint32 end);$/;"	p	class:RHeaderView	access:protected	signature:(Sint32 start, Sint32 end)
insertAfter	/home/viper/projects/RBit/rsimplelist.h	/^	inline void insertAfter(Node* after, Node* node)$/;"	f	class:RSimpleList	access:public	signature:(Node* after, Node* node)
insertBefore	/home/viper/projects/RBit/rsimplelist.h	/^	inline void insertBefore(Node* before, Node* node)$/;"	f	class:RSimpleList	access:public	signature:(Node* before, Node* node)
insertColumn	/home/viper/projects/RBit/rgridmodel.h	/^    bool insertColumn(Sint32 column) { return insertColumns(column, 1); }$/;"	f	class:RGridModel	access:public	signature:(Sint32 column)
insertColumns	/home/viper/projects/RBit/rgridmodel.h	/^    virtual bool insertColumns(Sint32 column, Uint32 count)$/;"	f	class:RGridModel	access:public	signature:(Sint32 column, Uint32 count)
insertColumns	/home/viper/projects/RBit/rsimplegridmodel.cpp	/^bool RSimpleGridModel::insertColumns(Sint32 column, Uint32 count)$/;"	f	class:RSimpleGridModel	signature:(Sint32 column, Uint32 count)
insertColumns	/home/viper/projects/RBit/rsimplegridmodel.h	/^    virtual bool insertColumns(Sint32 column, Uint32 count);$/;"	p	class:RSimpleGridModel	access:public	signature:(Sint32 column, Uint32 count)
insertItem	/home/viper/projects/RBit/rcombobox.cpp	/^void RComboBox::insertItem(Sint32 row, const char* text)$/;"	f	class:RComboBox	signature:(Sint32 row, const char* text)
insertItem	/home/viper/projects/RBit/rcombobox.h	/^    void insertItem(Sint32 row, const char* text);$/;"	p	class:RComboBox	access:public	signature:(Sint32 row, const char* text)
insertRow	/home/viper/projects/RBit/rgridmodel.h	/^    bool insertRow(Sint32 row) { return insertRows(row, 1); }$/;"	f	class:RGridModel	access:public	signature:(Sint32 row)
insertRows	/home/viper/projects/RBit/rgridmodel.h	/^    virtual bool insertRows(Sint32 row, Uint32 count) $/;"	f	class:RGridModel	access:public	signature:(Sint32 row, Uint32 count)
insertRows	/home/viper/projects/RBit/rsimplegridmodel.cpp	/^bool RSimpleGridModel::insertRows(Sint32 row, Uint32 count)$/;"	f	class:RSimpleGridModel	signature:(Sint32 row, Uint32 count)
insertRows	/home/viper/projects/RBit/rsimplegridmodel.h	/^    virtual bool insertRows(Sint32 row, Uint32 count);$/;"	p	class:RSimpleGridModel	access:public	signature:(Sint32 row, Uint32 count)
insertSection	/home/viper/projects/RBit/rheadermodel.h	/^    bool insertSection(Sint32 section) $/;"	f	class:RHeaderModel	access:public	signature:(Sint32 section)
insertSections	/home/viper/projects/RBit/rheadermodel.h	/^    virtual bool insertSections(Sint32 section, Uint32 count) $/;"	f	class:RHeaderModel	access:public	signature:(Sint32 section, Uint32 count)
insertSections	/home/viper/projects/RBit/rsimpleheadermodel.cpp	/^bool RSimpleHeaderModel::insertSections(Sint32 section, Uint32 count)$/;"	f	class:RSimpleHeaderModel	signature:(Sint32 section, Uint32 count)
insertSections	/home/viper/projects/RBit/rsimpleheadermodel.h	/^    virtual bool insertSections(Sint32 section, Uint32 count);    $/;"	p	class:RSimpleHeaderModel	access:public	signature:(Sint32 section, Uint32 count)
instance	/home/viper/projects/RBit/rcolormanager.h	/^    static RColorManager* instance();$/;"	p	class:RColorManager	access:public	signature:()
instance	/home/viper/projects/RBit/rcolormanager.h	/^inline RColorManager* RColorManager::instance()$/;"	f	class:RColorManager	signature:()
instance	/home/viper/projects/RBit/rgridmodeldatatype.h	/^    static RModelDataType<MDT_Number>* instance() $/;"	f	class:RModelDataType	access:public	signature:()
instance	/home/viper/projects/RBit/rgridmodeldatatype.h	/^    static RModelDataType<MDT_Text>* instance() $/;"	f	class:RModelDataType	access:public	signature:()
instance	/home/viper/projects/RBit/rrandomgenerator.h	/^    static const RRandomGenerator& instance()$/;"	f	class:RRandomGenerator	access:public	signature:()
instance	/home/viper/projects/RBit/rwidget.cpp	/^RMetaObject* RMetaObject::instance(const char* classname, const char* superclassname)$/;"	f	class:RMetaObject	signature:(const char* classname, const char* superclassname)
instance	/home/viper/projects/RBit/rwidget.cpp	/^RMetaRegistrator* RMetaRegistrator::instance()$/;"	f	class:RMetaRegistrator	signature:()
instance	/home/viper/projects/RBit/rwidget.h	/^    static RMetaObject* instance(const char* classname, const char* superclassname = "");$/;"	p	class:RMetaObject	access:public	signature:(const char* classname, const char* superclassname = ”)
instance	/home/viper/projects/RBit/rwidget.h	/^    static RMetaRegistrator* instance();$/;"	p	class:RMetaRegistrator	access:public	signature:()
instance	/home/viper/projects/RBit/rwidgetdefaultsettings.cpp	/^RWidgetDefaultSettingsHelper* RWidgetDefaultSettingsHelper::instance()$/;"	f	class:RWidgetDefaultSettingsHelper	signature:()
instance	/home/viper/projects/RBit/rwidgetdefaultsettings.h	/^    static RWidgetDefaultSettingsHelper* instance();$/;"	p	class:RWidgetDefaultSettingsHelper	access:public	signature:()
internalXToPos	/home/viper/projects/RBit/reditbox.cpp	/^Sint32 REditBox::internalXToPos(Sint32 x) const$/;"	f	class:REditBox	signature:(Sint32 x) const
internalXToPos	/home/viper/projects/RBit/reditbox.h	/^    Sint32 internalXToPos(Sint32 x) const;$/;"	p	class:REditBox	access:private	signature:(Sint32 x) const
intersect	/home/viper/projects/RBit/rrect.h	/^    RRect intersect(const RRect& r) const;$/;"	p	class:RRect	access:public	signature:(const RRect& r) const
intersect	/home/viper/projects/RBit/rrect.h	/^inline RRect RRect::intersect(const RRect& r) const$/;"	f	class:RRect	signature:(const RRect& r) const
intersects	/home/viper/projects/RBit/rrect.h	/^    bool intersects(const RRect& r) const;  $/;"	p	class:RRect	access:public	signature:(const RRect& r) const
intersects	/home/viper/projects/RBit/rrect.h	/^inline bool RRect::intersects(const RRect& r) const$/;"	f	class:RRect	signature:(const RRect& r) const
invoke	/home/viper/projects/RBit/rmessagebox.cpp	/^int RMessageBox::invoke()$/;"	f	class:RMessageBox	signature:()
invoke	/home/viper/projects/RBit/rmessagebox.h	/^    int invoke();$/;"	p	class:RMessageBox	access:protected	signature:()
isActive	/home/viper/projects/RBit/captionwidget.h	/^	bool isActive() const;$/;"	p	class:CCaptionWidget	access:public	signature:() const
isActive	/home/viper/projects/RBit/captionwidget.h	/^inline bool CCaptionWidget::isActive() const$/;"	f	class:CCaptionWidget	signature:() const
isAltEnterEnabled	/home/viper/projects/RBit/rapplication.h	/^    bool isAltEnterEnabled() const;$/;"	p	class:RApplication	access:public	signature:() const
isAltEnterEnabled	/home/viper/projects/RBit/rapplication.h	/^inline bool RApplication::isAltEnterEnabled() const$/;"	f	class:RApplication	signature:() const
isAncestorWidgetOf	/home/viper/projects/RBit/rwidget.h	/^    bool isAncestorWidgetOf(const RWidget*) const;$/;"	p	class:RWidget	access:public	signature:(const RWidget*) const
isAncestorWidgetOf	/home/viper/projects/RBit/rwidget.h	/^inline bool RWidget::isAncestorWidgetOf(const RWidget* w) const$/;"	f	class:RWidget	signature:(const RWidget* w) const
isCheckable	/home/viper/projects/RBit/rbutton.cpp	/^bool RButton::isCheckable() const$/;"	f	class:RButton	signature:() const
isCheckable	/home/viper/projects/RBit/rbutton.h	/^    bool isCheckable() const;$/;"	p	class:RButton	access:public	signature:() const
isChecked	/home/viper/projects/RBit/rbutton.cpp	/^bool RButton::isChecked() const$/;"	f	class:RButton	signature:() const
isChecked	/home/viper/projects/RBit/rbutton.h	/^    bool isChecked() const;$/;"	p	class:RButton	access:public	signature:() const
isClickable	/home/viper/projects/RBit/rheaderview.cpp	/^bool RHeaderView::isClickable() const$/;"	f	class:RHeaderView	signature:() const
isClickable	/home/viper/projects/RBit/rheaderview.h	/^    bool isClickable() const;$/;"	p	class:RHeaderView	access:public	signature:() const
isCopyOf	/home/viper/projects/RBit/rpalette.cpp	/^bool RPalette::isCopyOf(const RPalette& p) const$/;"	f	class:RPalette	signature:(const RPalette& p) const
isCopyOf	/home/viper/projects/RBit/rpalette.h	/^    bool isCopyOf(const RPalette& p) const;$/;"	p	class:RPalette	access:public	signature:(const RPalette& p) const
isCursorSupressed	/home/viper/projects/RBit/reditbox.h	/^    bool isCursorSupressed() const;$/;"	p	class:REditBox	access:public	signature:() const
isCursorSupressed	/home/viper/projects/RBit/reditbox.h	/^inline bool REditBox::isCursorSupressed() const$/;"	f	class:REditBox	signature:() const
isCursorVisible	/home/viper/projects/RBit/reditbox.h	/^    bool isCursorVisible() const;$/;"	p	class:REditBox	access:protected	signature:() const
isCursorVisible	/home/viper/projects/RBit/reditbox.h	/^inline bool REditBox::isCursorVisible() const$/;"	f	class:REditBox	signature:() const
isDescendantWidgetOf	/home/viper/projects/RBit/rwidget.cpp	/^bool RWidget::isDescendantWidgetOf(const RWidget* widget) const$/;"	f	class:RWidget	signature:(const RWidget* widget) const
isDescendantWidgetOf	/home/viper/projects/RBit/rwidget.h	/^    bool isDescendantWidgetOf(const RWidget*) const;$/;"	p	class:RWidget	access:public	signature:(const RWidget*) const
isDone	/home/viper/projects/RBit/rapplication.h	/^    bool isDone() const;$/;"	p	class:RApplication	access:public	signature:() const
isDone	/home/viper/projects/RBit/rapplication.h	/^inline bool RApplication::isDone() const$/;"	f	class:RApplication	signature:() const
isDoubleClick	/home/viper/projects/RBit/rdoubleclickdetector.h	/^    bool isDoubleClick()$/;"	f	class:RDoubleClickDetector	access:public	signature:()
isEditable	/home/viper/projects/RBit/rcombobox.h	/^	bool isEditable() const;$/;"	p	class:RComboBox	access:public	signature:() const
isEditable	/home/viper/projects/RBit/rcombobox.h	/^inline bool RComboBox::isEditable() const$/;"	f	class:RComboBox	signature:() const
isEditable	/home/viper/projects/RBit/reditbox.h	/^    bool isEditable() const;    $/;"	p	class:REditBox	access:public	signature:() const
isEditable	/home/viper/projects/RBit/reditbox.h	/^inline bool REditBox::isEditable() const$/;"	f	class:REditBox	signature:() const
isEmpty	/home/viper/projects/RBit/reditbox.h	/^	bool isEmpty();$/;"	p	class:REditBox	access:public	signature:()
isEmpty	/home/viper/projects/RBit/reditbox.h	/^inline bool REditBox::isEmpty()$/;"	f	class:REditBox	signature:()
isEmpty	/home/viper/projects/RBit/rrect.h	/^    bool isEmpty() const;$/;"	p	class:RRect	access:public	signature:() const
isEmpty	/home/viper/projects/RBit/rrect.h	/^inline bool RRect::isEmpty() const$/;"	f	class:RRect	signature:() const
isEmpty	/home/viper/projects/RBit/rsimplelist.h	/^    inline bool isEmpty() const$/;"	f	class:RSimpleList	access:public	signature:() const
isEmpty	/home/viper/projects/RBit/rsize.h	/^    bool isEmpty() const;$/;"	p	class:RSize	access:public	signature:() const
isEmpty	/home/viper/projects/RBit/rsize.h	/^inline bool RSize::isEmpty() const $/;"	f	class:RSize	signature:() const
isEnabled	/home/viper/projects/RBit/rwidget.h	/^    bool isEnabled() const;$/;"	p	class:RWidget	access:public	signature:() const
isEnabled	/home/viper/projects/RBit/rwidget.h	/^inline bool RWidget::isEnabled() const$/;"	f	class:RWidget	signature:() const
isFlat	/home/viper/projects/RBit/rbutton.cpp	/^bool RButton::isFlat() const$/;"	f	class:RButton	signature:() const
isFlat	/home/viper/projects/RBit/rbutton.h	/^    bool isFlat() const;$/;"	p	class:RButton	access:public	signature:() const
isFocusEnabled	/home/viper/projects/RBit/rwidget.h	/^    bool isFocusEnabled() const;     $/;"	p	class:RWidget	access:public	signature:() const
isFocusEnabled	/home/viper/projects/RBit/rwidget.h	/^inline bool RWidget::isFocusEnabled() const$/;"	f	class:RWidget	signature:() const
isFocusRectEnabled	/home/viper/projects/RBit/rgridview.h	/^    bool isFocusRectEnabled() const;$/;"	p	class:RGridView	access:public	signature:() const
isFocusRectEnabled	/home/viper/projects/RBit/rgridview.h	/^inline bool RGridView::isFocusRectEnabled() const$/;"	f	class:RGridView	signature:() const
isHidden	/home/viper/projects/RBit/rwidget.h	/^    bool isHidden() const;$/;"	p	class:RWidget	access:public	signature:() const
isHidden	/home/viper/projects/RBit/rwidget.h	/^inline bool RWidget::isHidden() const$/;"	f	class:RWidget	signature:() const
isInputEnabled	/home/viper/projects/RBit/rwidget.cpp	/^bool RWidget::isInputEnabled() const$/;"	f	class:RWidget	signature:() const
isInputEnabled	/home/viper/projects/RBit/rwidget.h	/^    bool isInputEnabled() const;$/;"	p	class:RWidget	access:public	signature:() const
isKeyAutoRepeat	/home/viper/projects/RBit/rapplication.h	/^    bool isKeyAutoRepeat() const;$/;"	p	class:RApplication	access:public	signature:() const
isKeyAutoRepeat	/home/viper/projects/RBit/rapplication.h	/^inline bool RApplication::isKeyAutoRepeat() const$/;"	f	class:RApplication	signature:() const
isLinked	/home/viper/projects/RBit/rsimplelist.h	/^	inline bool isLinked() const$/;"	f	class:RSimpleCircularListNode	access:protected	signature:() const
isLinked	/home/viper/projects/RBit/rsimplelist.h	/^	inline bool isLinked() const$/;"	f	class:RSimpleListNode	access:protected	signature:() const
isLinked	/home/viper/projects/RBit/rsimplelist.h	/^	inline bool isLinked() const$/;"	f	class:RSimpleListNodeBase	access:protected	signature:() const
isLinkedAfter	/home/viper/projects/RBit/rsimplelist.h	/^	bool isLinkedAfter(const RSimpleListNodeBase* after) const$/;"	f	class:RSimpleListNodeBase	access:protected	signature:(const RSimpleListNodeBase* after) const
isLinkedAfter	/home/viper/projects/RBit/rsimplelist.h	/^	inline bool isLinkedAfter(Node* after) const$/;"	f	class:RSimpleCircularListNode	access:protected	signature:(Node* after) const
isLinkedAfter	/home/viper/projects/RBit/rsimplelist.h	/^	inline bool isLinkedAfter(Node* after) const$/;"	f	class:RSimpleListNode	access:protected	signature:(Node* after) const
isLinkedBefore	/home/viper/projects/RBit/rsimplelist.h	/^	bool isLinkedBefore(const RSimpleListNodeBase* before) const$/;"	f	class:RSimpleListNodeBase	access:protected	signature:(const RSimpleListNodeBase* before) const
isLinkedBefore	/home/viper/projects/RBit/rsimplelist.h	/^	inline bool isLinkedBefore(Node* before) const$/;"	f	class:RSimpleCircularListNode	access:protected	signature:(Node* before) const
isLinkedBefore	/home/viper/projects/RBit/rsimplelist.h	/^	inline bool isLinkedBefore(Node* before) const$/;"	f	class:RSimpleListNode	access:protected	signature:(Node* before) const
isLinkedFirst	/home/viper/projects/RBit/rsimplelist.h	/^	inline bool isLinkedFirst() const$/;"	f	class:RSimpleCircularListNode	access:protected	signature:() const
isLinkedFirst	/home/viper/projects/RBit/rsimplelist.h	/^	inline bool isLinkedFirst() const$/;"	f	class:RSimpleListNode	access:protected	signature:() const
isLinkedFirst	/home/viper/projects/RBit/rsimplelist.h	/^	inline bool isLinkedFirst() const$/;"	f	class:RSimpleListNodeBase	access:protected	signature:() const
isLinkedLast	/home/viper/projects/RBit/rsimplelist.h	/^	inline bool isLinkedLast() const$/;"	f	class:RSimpleCircularListNode	access:protected	signature:() const
isLinkedLast	/home/viper/projects/RBit/rsimplelist.h	/^	inline bool isLinkedLast() const$/;"	f	class:RSimpleListNode	access:protected	signature:() const
isLinkedLast	/home/viper/projects/RBit/rsimplelist.h	/^	inline bool isLinkedLast() const$/;"	f	class:RSimpleListNodeBase	access:protected	signature:() const
isLinkedWith	/home/viper/projects/RBit/rsimplelist.h	/^	inline bool isLinkedWith(Node* node) const$/;"	f	class:RSimpleCircularListNode	access:protected	signature:(Node* node) const
isLinkedWith	/home/viper/projects/RBit/rsimplelist.h	/^	inline bool isLinkedWith(Node* node) const$/;"	f	class:RSimpleListNode	access:protected	signature:(Node* node) const
isLinkedWith	/home/viper/projects/RBit/rsimplelist.h	/^	inline bool isLinkedWith(const RSimpleListNodeBase* node) const$/;"	f	class:RSimpleListNodeBase	access:protected	signature:(const RSimpleListNodeBase* node) const
isModal	/home/viper/projects/RBit/rwidget.h	/^    bool isModal() const;$/;"	p	class:RWidget	access:public	signature:() const
isModal	/home/viper/projects/RBit/rwidget.h	/^inline bool RWidget::isModal() const$/;"	f	class:RWidget	signature:() const
isObserverEnabled	/home/viper/projects/RBit/rsubjectobserver.h	/^	bool isObserverEnabled() const$/;"	f	class:RObserver	access:public	signature:() const
isPressed	/home/viper/projects/RBit/rbutton.cpp	/^bool RButton::isPressed() const$/;"	f	class:RButton	signature:() const
isPressed	/home/viper/projects/RBit/rbutton.h	/^    bool isPressed() const;$/;"	p	class:RButton	access:public	signature:() const
isSectionSelected	/home/viper/projects/RBit/rheaderview.h	/^    bool isSectionSelected(Sint32 section) const;$/;"	p	class:RHeaderView	access:private	signature:(Sint32 section) const
isSliderDown	/home/viper/projects/RBit/rscrollbar.h	/^    bool isSliderDown() const;$/;"	p	class:RScrollBar	access:public	signature:() const
isSliderDown	/home/viper/projects/RBit/rscrollbar.h	/^inline bool RScrollBar::isSliderDown() const$/;"	f	class:RScrollBar	signature:() const
isSortIndicatorShown	/home/viper/projects/RBit/rheaderview.cpp	/^bool RHeaderView::isSortIndicatorShown() const$/;"	f	class:RHeaderView	signature:() const
isSortIndicatorShown	/home/viper/projects/RBit/rheaderview.h	/^    bool isSortIndicatorShown() const;$/;"	p	class:RHeaderView	access:public	signature:() const
isTopLevel	/home/viper/projects/RBit/rwidget.h	/^    bool isTopLevel() const;    $/;"	p	class:RWidget	access:public	signature:() const
isTopLevel	/home/viper/projects/RBit/rwidget.h	/^inline bool RWidget::isTopLevel() const$/;"	f	class:RWidget	signature:() const
isValidIndex	/home/viper/projects/RBit/rgridmodel.h	/^    bool isValidIndex(Sint32 row, Sint32 column) const;$/;"	p	class:RGridModel	access:public	signature:(Sint32 row, Sint32 column) const
isValidIndex	/home/viper/projects/RBit/rgridmodel.h	/^inline bool RGridModel::isValidIndex(Sint32 row, Sint32 column) const$/;"	f	class:RGridModel	signature:(Sint32 row, Sint32 column) const
isValidIndex	/home/viper/projects/RBit/rgridview.h	/^    bool isValidIndex(Sint32 row, Sint32 column) const;        $/;"	p	class:RGridView	access:public	signature:(Sint32 row, Sint32 column) const
isValidIndex	/home/viper/projects/RBit/rgridview.h	/^inline bool RGridView::isValidIndex(Sint32 row, Sint32 column) const$/;"	f	class:RGridView	signature:(Sint32 row, Sint32 column) const
isValidIndex	/home/viper/projects/RBit/rheaderview.h	/^    bool isValidIndex(Sint32 section) const;$/;"	p	class:RHeaderView	access:public	signature:(Sint32 section) const
isValidIndex	/home/viper/projects/RBit/rheaderview.h	/^inline bool RHeaderView::isValidIndex(Sint32 section) const$/;"	f	class:RHeaderView	signature:(Sint32 section) const
isValidIndex	/home/viper/projects/RBit/rsimplegridmodel.h	/^    bool isValidIndex(Sint32 row, Sint32 column) const;$/;"	p	class:RSimpleGridModel	access:public	signature:(Sint32 row, Sint32 column) const
isValidIndex	/home/viper/projects/RBit/rsimplegridmodel.h	/^inline bool RSimpleGridModel::isValidIndex(Sint32 row, Sint32 column) const$/;"	f	class:RSimpleGridModel	signature:(Sint32 row, Sint32 column) const
isValidIndex	/home/viper/projects/RBit/rsimpleheadermodel.h	/^    bool isValidIndex(Sint32 section) const;$/;"	p	class:RSimpleHeaderModel	access:public	signature:(Sint32 section) const
isValidIndex	/home/viper/projects/RBit/rsimpleheadermodel.h	/^inline bool RSimpleHeaderModel::isValidIndex(Sint32 section) const$/;"	f	class:RSimpleHeaderModel	signature:(Sint32 section) const
isVisible	/home/viper/projects/RBit/rwidget.h	/^    bool isVisible() const;$/;"	p	class:RWidget	access:public	signature:() const
isVisible	/home/viper/projects/RBit/rwidget.h	/^inline bool RWidget::isVisible() const$/;"	f	class:RWidget	signature:() const
item	/home/viper/projects/RBit/rsimplegridmodel.h	/^        mutable Item* item;$/;"	m	struct:RSimpleGridModel::ItemAutoPtr	access:public
item	/home/viper/projects/RBit/rsimplegridmodel.h	/^    Item* item(Sint32 row, Sint32 column);$/;"	p	class:RSimpleGridModel	access:public	signature:(Sint32 row, Sint32 column)
item	/home/viper/projects/RBit/rsimplegridmodel.h	/^    const Item* item(Sint32 row, Sint32 column) const;$/;"	p	class:RSimpleGridModel	access:public	signature:(Sint32 row, Sint32 column) const
item	/home/viper/projects/RBit/rsimplegridmodel.h	/^inline RSimpleGridModel::Item* RSimpleGridModel::item(Sint32 row, Sint32 column)$/;"	f	class:RSimpleGridModel	signature:(Sint32 row, Sint32 column)
item	/home/viper/projects/RBit/rsimplegridmodel.h	/^inline const RSimpleGridModel::Item* RSimpleGridModel::item(Sint32 row, Sint32 column) const$/;"	f	class:RSimpleGridModel	signature:(Sint32 row, Sint32 column) const
item	/home/viper/projects/RBit/rsimpleheadermodel.h	/^        mutable Item* item;$/;"	m	struct:RSimpleHeaderModel::ItemAutoPtr	access:public
item	/home/viper/projects/RBit/rsimpleheadermodel.h	/^    Item* item(Sint32 section);$/;"	p	class:RSimpleHeaderModel	access:public	signature:(Sint32 section)
item	/home/viper/projects/RBit/rsimpleheadermodel.h	/^    const Item* item(Sint32 section) const;$/;"	p	class:RSimpleHeaderModel	access:public	signature:(Sint32 section) const
item	/home/viper/projects/RBit/rsimpleheadermodel.h	/^inline RSimpleHeaderModel::Item* RSimpleHeaderModel::item(Sint32 section)$/;"	f	class:RSimpleHeaderModel	signature:(Sint32 section)
item	/home/viper/projects/RBit/rsimpleheadermodel.h	/^inline const RSimpleHeaderModel::Item* RSimpleHeaderModel::item(Sint32 section) const$/;"	f	class:RSimpleHeaderModel	signature:(Sint32 section) const
itemPrototype	/home/viper/projects/RBit/rsimplegridmodel.h	/^    const Item* itemPrototype() const;    $/;"	p	class:RSimpleGridModel	access:public	signature:() const
itemPrototype	/home/viper/projects/RBit/rsimplegridmodel.h	/^inline const RSimpleGridModel::Item* RSimpleGridModel::itemPrototype() const$/;"	f	class:RSimpleGridModel	signature:() const
itemPrototype	/home/viper/projects/RBit/rsimpleheadermodel.h	/^    const Item* itemPrototype() const;$/;"	p	class:RSimpleHeaderModel	access:public	signature:() const
itemPrototype	/home/viper/projects/RBit/rsimpleheadermodel.h	/^inline const RSimpleHeaderModel::Item* RSimpleHeaderModel::itemPrototype() const$/;"	f	class:RSimpleHeaderModel	signature:() const
keyAutoRepeatLatency	/home/viper/projects/RBit/rapplication.h	/^    uint keyAutoRepeatLatency() const;$/;"	p	class:RApplication	access:public	signature:() const
keyAutoRepeatLatency	/home/viper/projects/RBit/rapplication.h	/^inline uint RApplication::keyAutoRepeatLatency() const$/;"	f	class:RApplication	signature:() const
keyAutoRepeatPeriod	/home/viper/projects/RBit/rapplication.h	/^    uint keyAutoRepeatPeriod() const;$/;"	p	class:RApplication	access:public	signature:() const
keyAutoRepeatPeriod	/home/viper/projects/RBit/rapplication.h	/^inline uint RApplication::keyAutoRepeatPeriod() const$/;"	f	class:RApplication	signature:() const
keyRepeatPeriodLowerBound	/home/viper/projects/RBit/rapplication.h	/^    uint keyRepeatPeriodLowerBound() const;$/;"	p	class:RApplication	access:public	signature:() const
keyRepeatPeriodLowerBound	/home/viper/projects/RBit/rapplication.h	/^inline uint RApplication::keyRepeatPeriodLowerBound() const$/;"	f	class:RApplication	signature:() const
lastChildWidget	/home/viper/projects/RBit/rwidget.h	/^    RWidget* lastChildWidget() const;$/;"	p	class:RWidget	access:public	signature:() const
lastChildWidget	/home/viper/projects/RBit/rwidget.h	/^inline RWidget* RWidget::lastChildWidget() const$/;"	f	class:RWidget	signature:() const
lastTopLevelWidget	/home/viper/projects/RBit/rapplication.cpp	/^RWidget* RApplication::lastTopLevelWidget()  $/;"	f	class:RApplication	signature:()
lastTopLevelWidget	/home/viper/projects/RBit/rapplication.h	/^    RWidget* lastTopLevelWidget();$/;"	p	class:RApplication	access:public	signature:()
layoutAboutToBeChanged	/home/viper/projects/RBit/rgridmodel.h	/^    virtual void layoutAboutToBeChanged() {}$/;"	f	class:RGridModelObserverBase	access:protected	signature:()
layoutChanged	/home/viper/projects/RBit/rgridmodel.h	/^    virtual void layoutChanged() {}$/;"	f	class:RGridModelObserverBase	access:protected	signature:()
layoutChildren	/home/viper/projects/RBit/rscrollarea.cpp	/^void RScrollAreaBase::layoutChildren()$/;"	f	class:RScrollAreaBase	signature:()
layoutChildren	/home/viper/projects/RBit/rscrollarea.h	/^    void layoutChildren();$/;"	p	class:RScrollAreaBase	access:private	signature:()
layoutItems	/home/viper/projects/RBit/rheaderview.cpp	/^void RHeaderView::layoutItems()$/;"	f	class:RHeaderView	signature:()
layoutItems	/home/viper/projects/RBit/rheaderview.h	/^    void layoutItems();$/;"	p	class:RHeaderView	access:public	signature:()
left	/home/viper/projects/RBit/rrect.h	/^    Sint16 left() const;$/;"	p	class:RRect	access:public	signature:() const
left	/home/viper/projects/RBit/rrect.h	/^inline Sint16 RRect::left() const$/;"	f	class:RRect	signature:() const
leftTextMargin	/home/viper/projects/RBit/rgridview.h	/^    Sint32 leftTextMargin() const;$/;"	p	class:RGridView	access:public	signature:() const
leftTextMargin	/home/viper/projects/RBit/rgridview.h	/^inline Sint32 RGridView::leftTextMargin() const$/;"	f	class:RGridView	signature:() const
len	/home/viper/projects/RBit/rdrawutil.cpp	/^    int len;$/;"	m	struct:RTextLine	file:	access:public
length	/home/viper/projects/RBit/rheaderview.cpp	/^Uint32 RHeaderView::length() const$/;"	f	class:RHeaderView	signature:() const
length	/home/viper/projects/RBit/rheaderview.h	/^    Uint32 length() const;$/;"	p	class:RHeaderView	access:public	signature:() const
library	/home/viper/projects/RBit/rsdlttf.cpp	/^static FT_Library library;$/;"	v	file:
light	/home/viper/projects/RBit/rcolor.cpp	/^RColor RColor::light(Uint8 factor) const$/;"	f	class:RColor	signature:(Uint8 factor) const
light	/home/viper/projects/RBit/rcolor.h	/^    RColor light(Uint8 factor = 150) const;$/;"	p	class:RColor	access:public	signature:(Uint8 factor = 150) const
light	/home/viper/projects/RBit/rpalette.h	/^    inline const RColor& light() const { return color(Light); }$/;"	f	class:RPalette	access:public	signature:() const
lightColor	/home/viper/projects/RBit/rheadermodel.h	/^    virtual const RColor* lightColor(Sint32 section) const$/;"	f	class:RHeaderModel	access:public	signature:(Sint32 section) const
lightColor	/home/viper/projects/RBit/rsimpleheadermodel.cpp	/^const RColor* RSimpleHeaderModel::lightColor(Sint32 section) const$/;"	f	class:RSimpleHeaderModel	signature:(Sint32 section) const
lightColor	/home/viper/projects/RBit/rsimpleheadermodel.h	/^            RColor lightColor;$/;"	m	struct:RSimpleHeaderModel::Item::MetaData	access:public
lightColor	/home/viper/projects/RBit/rsimpleheadermodel.h	/^        const RColor& lightColor() const;$/;"	p	class:RSimpleHeaderModel::Item	access:public	signature:() const
lightColor	/home/viper/projects/RBit/rsimpleheadermodel.h	/^    virtual const RColor* lightColor(Sint32 section) const;$/;"	p	class:RSimpleHeaderModel	access:public	signature:(Sint32 section) const
lightColor	/home/viper/projects/RBit/rsimpleheadermodel.h	/^inline const RColor& RSimpleHeaderModel::Item::lightColor() const$/;"	f	class:RSimpleHeaderModel::Item	signature:() const
lightGray	/home/viper/projects/RBit/rbit.h	/^        lightGray,$/;"	e	enum:RBit::GlobalColor
lineDecoration	/home/viper/projects/RBit/rgridview.h	/^    int lineDecoration() const;$/;"	p	class:RGridView	access:public	signature:() const
lineDecoration	/home/viper/projects/RBit/rgridview.h	/^inline int RGridView::lineDecoration() const$/;"	f	class:RGridView	signature:() const
lines	/home/viper/projects/RBit/rdrawutil.cpp	/^    std::list<RTextLine> lines;$/;"	m	struct:RTextParag	file:	access:public
lineskip	/home/viper/projects/RBit/rfont.h	/^    Uint8 lineskip() const$/;"	f	class:RFont	access:public	signature:() const
lineskip	/home/viper/projects/RBit/rsdlttf.cpp	/^	int lineskip;$/;"	m	struct:_TTF_Font	file:	access:public
linkAfter	/home/viper/projects/RBit/rsimplelist.h	/^	inline RSimpleListNodeBase* linkAfter(RSimpleListNodeBase* after)$/;"	f	class:RSimpleListNodeBase	access:protected	signature:(RSimpleListNodeBase* after)
linkAfter	/home/viper/projects/RBit/rsimplelist.h	/^	inline T* linkAfter(Node* after)$/;"	f	class:RSimpleCircularListNode	access:protected	signature:(Node* after)
linkAfter	/home/viper/projects/RBit/rsimplelist.h	/^	inline T* linkAfter(Node* after)$/;"	f	class:RSimpleListNode	access:protected	signature:(Node* after)
linkAfter	/home/viper/projects/RBit/rsimplelist.h	/^	inline static void linkAfter(Node* after, Node* first, Node* last)$/;"	f	class:RSimpleListNode	access:protected	signature:(Node* after, Node* first, Node* last)
linkAfter	/home/viper/projects/RBit/rsimplelist.h	/^	inline static void linkAfter(RSimpleListNodeBase* after, RSimpleListNodeBase* first, RSimpleListNodeBase* last)$/;"	f	class:RSimpleListNodeBase	access:protected	signature:(RSimpleListNodeBase* after, RSimpleListNodeBase* first, RSimpleListNodeBase* last)
linkBefore	/home/viper/projects/RBit/rsimplelist.h	/^	inline RSimpleListNodeBase* linkBefore(RSimpleListNodeBase* before)$/;"	f	class:RSimpleListNodeBase	access:protected	signature:(RSimpleListNodeBase* before)
linkBefore	/home/viper/projects/RBit/rsimplelist.h	/^	inline T* linkBefore(Node* before)$/;"	f	class:RSimpleCircularListNode	access:protected	signature:(Node* before)
linkBefore	/home/viper/projects/RBit/rsimplelist.h	/^	inline T* linkBefore(Node* before)$/;"	f	class:RSimpleListNode	access:protected	signature:(Node* before)
linkBefore	/home/viper/projects/RBit/rsimplelist.h	/^	inline static void linkBefore(Node* before, Node* first, Node* last)$/;"	f	class:RSimpleListNode	access:protected	signature:(Node* before, Node* first, Node* last)
linkBefore	/home/viper/projects/RBit/rsimplelist.h	/^	inline static void linkBefore(RSimpleListNodeBase* before, RSimpleListNodeBase* first, RSimpleListNodeBase* last)$/;"	f	class:RSimpleListNodeBase	access:protected	signature:(RSimpleListNodeBase* before, RSimpleListNodeBase* first, RSimpleListNodeBase* last)
local8bit_toUnicode	/home/viper/projects/RBit/rapplication.cpp	/^Uint16 RApplication::local8bit_toUnicode(Uint8 ch)$/;"	f	class:RApplication	signature:(Uint8 ch)
local8bit_toUnicode	/home/viper/projects/RBit/rapplication.h	/^    Uint16 local8bit_toUnicode(Uint8 ch);$/;"	p	class:RApplication	access:public	signature:(Uint8 ch)
locale	/home/viper/projects/RBit/rapplication.cpp	/^const std::locale& RApplication::locale() const$/;"	f	class:RApplication	signature:() const
locale	/home/viper/projects/RBit/rapplication.h	/^    const std::locale& locale() const;$/;"	p	class:RApplication	access:public	signature:() const
log	/home/viper/projects/RBit/rapplication.cpp	/^void RApplication::log(const char* text) {$/;"	f	class:RApplication	signature:(const char* text)
log	/home/viper/projects/RBit/rapplication.h	/^	virtual void log(Uint8 \/*type*\/, void * \/*pText*\/)	{};$/;"	f	class:RApplication	access:public	signature:(Uint8 , void * )
log	/home/viper/projects/RBit/rapplication.h	/^	void log(const char* str);$/;"	p	class:RApplication	access:private	signature:(const char* str)
lower	/home/viper/projects/RBit/rwidget.cpp	/^void RWidget::lower()$/;"	f	class:RWidget	signature:()
lower	/home/viper/projects/RBit/rwidget.h	/^    void lower();$/;"	p	class:RWidget	access:public	signature:()
m_List	/home/viper/projects/RBit/rsdlttf.cpp	/^	GLuint m_List;$/;"	m	struct:_TTF_Font	file:	access:public
m_SplitterWidth	/home/viper/projects/RBit/rsplitter.cpp	/^	int m_SplitterWidth;				\/\/¯ËËÌ‡ ÒÔÎËÚÚÂ‡$/;"	m	class:RSplitterPrivate	file:	access:public
m_accept	/home/viper/projects/RBit/rmessagebox.h	/^    int       m_accept;$/;"	m	class:RMessageBox	access:private
m_activeWidget	/home/viper/projects/RBit/rapplication.h	/^    RWidget*              m_activeWidget;$/;"	m	class:RApplication	access:private
m_alignmentOffset	/home/viper/projects/RBit/reditbox.h	/^    mutable RPoint      m_alignmentOffset;$/;"	m	class:REditBox	access:private
m_array	/home/viper/projects/RBit/rarraycontainer.h	/^	T*      m_array;$/;"	m	class:RArrayContainer	access:private
m_arrays	/home/viper/projects/RBit/rcolormanager.cpp	/^    }           m_arrays[0x10000];$/;"	m	class:RBlendingMap1	typeref:struct:RBlendingMap1::ColorArray	file:	access:private
m_arrowCursor	/home/viper/projects/RBit/rheaderview.h	/^    SDL_Cursor* m_arrowCursor;$/;"	m	class:RHeaderView	access:private
m_arrowCursor	/home/viper/projects/RBit/rsplitter.cpp	/^	SDL_Cursor *m_arrowCursor;$/;"	m	class:RSplitterPrivate	file:	access:public
m_bmap	/home/viper/projects/RBit/rcolormanager.h	/^    } m_bmap;$/;"	m	class:RColorManager	typeref:class:RColorManager::RBlendingMapPtr	access:private
m_bottom	/home/viper/projects/RBit/rscrollarea.h	/^    Uint16 m_left, m_top, m_right, m_bottom; \/\/ viewport margin$/;"	m	class:RScrollAreaBase	access:private
m_bottomTextMargin	/home/viper/projects/RBit/rgridview.h	/^           m_bottomTextMargin;$/;"	m	class:RGridView	access:private
m_bottomTextMargin	/home/viper/projects/RBit/rheaderview.h	/^           m_bottomTextMargin;$/;"	m	class:RHeaderView	access:private
m_buff	/home/viper/projects/RBit/rcheckbox.h	/^    RString     m_buff;$/;"	m	class:RCheckBox	access:private
m_buff	/home/viper/projects/RBit/rlabel.h	/^    RString      m_buff;$/;"	m	class:RLabel	access:private
m_button0	/home/viper/projects/RBit/rmessagebox.h	/^    RButton*  m_button0;$/;"	m	class:RMessageBox	access:private
m_button1	/home/viper/projects/RBit/rmessagebox.h	/^    RButton*  m_button1;$/;"	m	class:RMessageBox	access:private
m_button2	/home/viper/projects/RBit/rmessagebox.h	/^    RButton*  m_button2;$/;"	m	class:RMessageBox	access:private
m_buttonSize	/home/viper/projects/RBit/rmessagebox.h	/^    RSize     m_buttonSize;    $/;"	m	class:RMessageBox	access:private
m_c	/home/viper/projects/RBit/rcolor.h	/^	SDL_Color m_c;$/;"	m	class:RColor	access:private
m_captionAlignment	/home/viper/projects/RBit/rmessagebox.h	/^    int       m_captionAlignment;    $/;"	m	class:RMessageBox	access:private
m_captionPolicy	/home/viper/projects/RBit/captionwidget.h	/^	CaptionPolicy m_captionPolicy;$/;"	m	class:CCaptionWidget	access:private
m_children	/home/viper/projects/RBit/rwidget.h	/^    RSiblingWidgetList   m_children;$/;"	m	class:RWidget	access:private
m_className	/home/viper/projects/RBit/rwidget.h	/^    const char* m_className;$/;"	m	class:RMetaObject	access:private
m_clickOffset	/home/viper/projects/RBit/rscrollbar.h	/^    Sint16       m_clickOffset;$/;"	m	class:RScrollBar	access:private
m_columns	/home/viper/projects/RBit/rsimplegridmodel.h	/^    Uint32       m_columns;$/;"	m	class:RSimpleGridModel	access:private
m_combo	/home/viper/projects/RBit/rcombobox.cpp	/^	RComboBox *m_combo;$/;"	m	class:RComboBox::EditBox	file:	access:private
m_combo	/home/viper/projects/RBit/rcombobox.cpp	/^    RComboBox* m_combo;$/;"	m	class:RComboBox::Popup	file:	access:private
m_count	/home/viper/projects/RBit/rcolormanager.cpp	/^        Uint8 m_count;$/;"	m	struct:RBlendingMap1::ColorArray	file:	access:public
m_count	/home/viper/projects/RBit/rsharedptr.h	/^        int m_count;$/;"	m	class:RSharedPtr::SharedCounterHelperBase	access:private
m_curCursor	/home/viper/projects/RBit/rsplitter.cpp	/^	SDL_Cursor *m_curCursor;$/;"	m	class:RSplitterPrivate	file:	access:public
m_curX	/home/viper/projects/RBit/reditbox.h	/^    mutable Sint32      m_curX;                 \/\/ x-ÍÓÓ‰. ÍÛÒÓ‡$/;"	m	class:REditBox	access:private
m_currentColumn	/home/viper/projects/RBit/rgridview.h	/^    Sint32 m_currentColumn;$/;"	m	class:RGridView	access:private
m_currentRow	/home/viper/projects/RBit/rcombobox.h	/^    Sint32       m_currentRow;$/;"	m	class:RComboBox	access:private
m_currentRow	/home/viper/projects/RBit/rgridview.h	/^    Sint32 m_currentRow;$/;"	m	class:RGridView	access:private
m_cursor	/home/viper/projects/RBit/reditbox.h	/^    Sint32              m_cursor;               \/\/ ÔÓÁËˆËˇ ÍÛÒÓ‡$/;"	m	class:REditBox	access:private
m_cursorFlashTime	/home/viper/projects/RBit/rapplication.h	/^    uint                  m_cursorFlashTime;$/;"	m	class:RApplication	access:private
m_d	/home/viper/projects/RBit/rbutton.h	/^    RButtonPrivate* m_d;$/;"	m	class:RButton	access:private
m_d	/home/viper/projects/RBit/rimage.h	/^    RSharedPtr<RImagePrivate> m_d;$/;"	m	class:RImage	access:private
m_d	/home/viper/projects/RBit/rpalette.h	/^    RPalettePrivate *m_d;    $/;"	m	class:RPalette	access:private
m_d	/home/viper/projects/RBit/rsplitter.h	/^	RSplitterPrivate *const m_d;$/;"	m	class:RSplitter	access:private
m_defaultButton	/home/viper/projects/RBit/rmessagebox.h	/^    RButton*  m_defaultButton;$/;"	m	class:RMessageBox	access:private
m_defaultSectionSize	/home/viper/projects/RBit/rheaderview.h	/^    Uint16 m_defaultSectionSize;$/;"	m	class:RHeaderView	access:private
m_del	/home/viper/projects/RBit/rsharedptr.h	/^        U m_del;$/;"	m	class:RSharedPtr::SharedCounterHelper	access:private
m_deletingWidgets	/home/viper/projects/RBit/rapplication.h	/^    std::list<RWidget*>   m_deletingWidgets;$/;"	m	class:RApplication	access:private
m_displayText	/home/viper/projects/RBit/reditbox.h	/^    mutable std::string m_displayText;$/;"	m	class:REditBox	access:private
m_doubleClickDetector	/home/viper/projects/RBit/reditbox.h	/^    RDoubleClickDetector m_doubleClickDetector;$/;"	m	class:REditBox	access:private
m_doubleClickDetector	/home/viper/projects/RBit/rgridview.h	/^    RDoubleClickDetector m_doubleClickDetector;$/;"	m	class:RGridView	access:private
m_doubleClickMargin	/home/viper/projects/RBit/rapplication.h	/^    uint                  m_doubleClickMargin;$/;"	m	class:RApplication	access:private
m_doubleClickMargin	/home/viper/projects/RBit/rdoubleclickdetector.h	/^    const uint m_doubleClickMargin;$/;"	m	class:RDoubleClickDetector	access:private
m_edit	/home/viper/projects/RBit/rcombobox.h	/^	EditBox		*m_edit;$/;"	m	class:RComboBox	access:private
m_enabled	/home/viper/projects/RBit/rsubjectobserver.h	/^	bool m_enabled;$/;"	m	class:RObserver	access:private
m_enteredColumn	/home/viper/projects/RBit/rgridview.h	/^    Sint32 m_enteredColumn;$/;"	m	class:RGridView	access:private
m_enteredRow	/home/viper/projects/RBit/rgridview.h	/^    Sint32 m_enteredRow;$/;"	m	class:RGridView	access:private
m_flags	/home/viper/projects/RBit/rtextpainter.h	/^    int   m_flags;$/;"	m	class:RTextPainter	access:private
m_focusWidget	/home/viper/projects/RBit/rapplication.h	/^    RWidget*              m_focusWidget;      $/;"	m	class:RApplication	access:private
m_font	/home/viper/projects/RBit/rapplication.h	/^    mutable RFont         m_font;$/;"	m	class:RApplication	access:private
m_font	/home/viper/projects/RBit/rtextpainter.h	/^    RFont m_font;$/;"	m	class:RTextPainter	access:private
m_format	/home/viper/projects/RBit/rcolor.h	/^    SDL_PixelFormat* m_format;$/;"	m	class:RColor	access:private
m_frameRect	/home/viper/projects/RBit/rscrollarea.h	/^    RRect m_frameRect;$/;"	m	class:RScrollAreaBase	access:private
m_frameStyle	/home/viper/projects/RBit/rframepainter.h	/^    int     m_frameStyle;$/;"	m	class:RFramePainter	access:private
m_frameWidth	/home/viper/projects/RBit/rframepainter.h	/^    Uint8   m_frameWidth;    $/;"	m	class:RFramePainter	access:private
m_geometry	/home/viper/projects/RBit/rwidget.h	/^    RRect                m_geometry;    $/;"	m	class:RWidget	access:private
m_globalResizeMode	/home/viper/projects/RBit/rheaderview.h	/^    RHeaderView::ResizeMode m_globalResizeMode;    $/;"	m	class:RHeaderView	access:private
m_grid	/home/viper/projects/RBit/rgridview.h	/^        RGridView* m_grid;$/;"	m	class:RGridView::HeaderObserver	access:private
m_hbar	/home/viper/projects/RBit/rscrollarea.h	/^    ScrollBar* m_hbar, *m_vbar;$/;"	m	class:RScrollAreaBase	access:private
m_hbarpolicy	/home/viper/projects/RBit/rscrollarea.h	/^    ScrollBarPolicy m_vbarpolicy, m_hbarpolicy;$/;"	m	class:RScrollAreaBase	access:private
m_head	/home/viper/projects/RBit/rsimplelist.h	/^	Node* m_head;$/;"	m	class:RSimpleList	access:private
m_height	/home/viper/projects/RBit/rsize.h	/^    Uint16 m_height;$/;"	m	class:RSize	access:private
m_helper	/home/viper/projects/RBit/rsharedptr.h	/^        SharedCounterHelperBase* m_helper;$/;"	m	class:RSharedPtr::SharedCounter	access:private
m_hhmodel	/home/viper/projects/RBit/rcombobox.cpp	/^    RSimpleHeaderModel m_hhmodel, m_vhmodel;$/;"	m	class:RComboBox::Popup	file:	access:private
m_horizontalHeader	/home/viper/projects/RBit/rgridview.h	/^    RHeaderView *m_horizontalHeader;$/;"	m	class:RGridView	access:private
m_horizontalHeaderObserver	/home/viper/projects/RBit/rgridview.h	/^    } m_horizontalHeaderObserver, m_verticalHeaderObserver;$/;"	m	class:RGridView	typeref:class:RGridView::HeaderObserver	access:private
m_horizontalStepsPerItem	/home/viper/projects/RBit/rgridview.h	/^    Uint16 m_horizontalStepsPerItem;$/;"	m	class:RGridView	access:private
m_hscroll	/home/viper/projects/RBit/reditbox.h	/^    Sint32              m_hscroll;              $/;"	m	class:REditBox	access:private
m_i	/home/viper/projects/RBit/rcolor.h	/^	mutable unsigned int m_i;$/;"	m	class:RColor	access:private
m_icon	/home/viper/projects/RBit/rmessagebox.h	/^    RImage    m_icon;    $/;"	m	class:RMessageBox	access:private
m_iconRect	/home/viper/projects/RBit/rmessagebox.h	/^    RRect     m_iconRect;$/;"	m	class:RMessageBox	access:private
m_iconType	/home/viper/projects/RBit/rmessagebox.h	/^    Icon      m_iconType;$/;"	m	class:RMessageBox	access:private
m_id	/home/viper/projects/RBit/ridentity.h	/^	int m_id;$/;"	m	class:RIdentity	access:private
m_label	/home/viper/projects/RBit/rmessagebox.h	/^    RMultilineLabel* m_label;$/;"	m	class:RMessageBox	access:private
m_larr	/home/viper/projects/RBit/rcolormanager.cpp	/^    ColorArray* m_larr; $/;"	m	class:RBlendingMap1	file:	access:private
m_lastClick	/home/viper/projects/RBit/rdoubleclickdetector.h	/^    Uint32 m_lastClick;$/;"	m	class:RDoubleClickDetector	access:private
m_lastCurFlashTime	/home/viper/projects/RBit/reditbox.h	/^    Uint32              m_lastCurFlashTime;     \/\/ ‚ÂÏˇ ÔÓÒÎÂ‰ÌÂ„Ó ÏË„‡ÌËˇ ÍÛÒÓ‡$/;"	m	class:REditBox	access:private
m_lastPos	/home/viper/projects/RBit/rheaderview.h	/^    Sint32 m_lastPos;$/;"	m	class:RHeaderView	access:private
m_lastRepeationTime	/home/viper/projects/RBit/rscrollbar.h	/^    Uint32       m_lastRepeationTime;$/;"	m	class:RScrollBar	access:private
m_left	/home/viper/projects/RBit/rscrollarea.h	/^    Uint16 m_left, m_top, m_right, m_bottom; \/\/ viewport margin$/;"	m	class:RScrollAreaBase	access:private
m_leftTextMargin	/home/viper/projects/RBit/rgridview.h	/^           m_leftTextMargin, $/;"	m	class:RGridView	access:private
m_leftTextMargin	/home/viper/projects/RBit/rheaderview.h	/^           m_leftTextMargin, $/;"	m	class:RHeaderView	access:private
m_li	/home/viper/projects/RBit/rcolormanager.cpp	/^    Uint8       m_li;$/;"	m	class:RBlendingMap1	file:	access:private
m_lineWidth	/home/viper/projects/RBit/rframepainter.h	/^    Uint8   m_lineWidth;$/;"	m	class:RFramePainter	access:private
m_lkpt	/home/viper/projects/RBit/rapplication.h	/^    uint                  m_lkpt;$/;"	m	class:RApplication	access:private
m_lkrt	/home/viper/projects/RBit/rapplication.h	/^    uint                  m_lkrt; $/;"	m	class:RApplication	access:private
m_lres	/home/viper/projects/RBit/rcolormanager.cpp	/^    Uint32      m_lres;$/;"	m	class:RBlendingMap1	file:	access:private
m_map	/home/viper/projects/RBit/rcolormanager.h	/^        RBlendingMap* m_map;$/;"	m	class:RColorManager::RBlendingMapPtr	access:private
m_margin	/home/viper/projects/RBit/reditbox.h	/^    Uint8               m_margin;               \/\/ ÓÚÒÚÛÔ ÒÎÂ‚‡ Ë ÒÔ‡‚‡$/;"	m	class:REditBox	access:private
m_maxCount	/home/viper/projects/RBit/rcombobox.h	/^    Sint32       m_maxCount;$/;"	m	class:RComboBox	access:private
m_maxVisibleItems	/home/viper/projects/RBit/rcombobox.h	/^    Sint32       m_maxVisibleItems;$/;"	m	class:RComboBox	access:private
m_max_pos	/home/viper/projects/RBit/rsplitter.cpp	/^	int m_min_pos, m_max_pos;			\/\/ÏËÌË‡Î¸Ì‡ˇ - Ï‡ÍÒËÏ‡Î¸Ì‡ˇ ‡ÁÂ¯ÂÌÌ‡ˇ ÔÓÁËˆËˇ ‰Îˇ ÒÔÎËÚÚÂ‡$/;"	m	class:RSplitterPrivate	file:	access:public
m_maximum	/home/viper/projects/RBit/rscrollbar.h	/^    Sint32       m_maximum;$/;"	m	class:RScrollBar	access:private
m_meta	/home/viper/projects/RBit/rsimplegridmodel.h	/^        MetaData* m_meta;$/;"	m	class:RSimpleGridModel::Item	access:private
m_meta	/home/viper/projects/RBit/rsimpleheadermodel.h	/^        MetaData* m_meta;$/;"	m	class:RSimpleHeaderModel::Item	access:private
m_midLineWidth	/home/viper/projects/RBit/rframepainter.h	/^    Uint8   m_midLineWidth;$/;"	m	class:RFramePainter	access:private
m_min_pos	/home/viper/projects/RBit/rsplitter.cpp	/^	int m_min_pos, m_max_pos;			\/\/ÏËÌË‡Î¸Ì‡ˇ - Ï‡ÍÒËÏ‡Î¸Ì‡ˇ ‡ÁÂ¯ÂÌÌ‡ˇ ÔÓÁËˆËˇ ‰Îˇ ÒÔÎËÚÚÂ‡$/;"	m	class:RSplitterPrivate	file:	access:public
m_minimum	/home/viper/projects/RBit/rscrollbar.h	/^    Sint32       m_minimum;$/;"	m	class:RScrollBar	access:private
m_model	/home/viper/projects/RBit/rcombobox.cpp	/^	} m_model;		$/;"	m	class:RComboBox::Popup	typeref:class:RComboBox::Popup::PopupModel	file:	access:public
m_model	/home/viper/projects/RBit/rsimplegridmodel.h	/^        RSimpleGridModel* m_model;$/;"	m	class:RSimpleGridModel::Item	access:private
m_model	/home/viper/projects/RBit/rsimpleheadermodel.h	/^        RSimpleHeaderModel* m_model;$/;"	m	class:RSimpleHeaderModel::Item	access:private
m_mouseGrabberWidget	/home/viper/projects/RBit/rapplication.h	/^    RWidget*              m_mouseGrabberWidget;$/;"	m	class:RApplication	access:private
m_mouseTrackerCount	/home/viper/projects/RBit/rapplication.h	/^    uint                  m_mouseTrackerCount;$/;"	m	class:RApplication	access:private
m_next	/home/viper/projects/RBit/rsimplelist.h	/^	RSimpleListNodeBase* m_next;$/;"	m	class:RSimpleListNodeBase	access:private
m_nodes	/home/viper/projects/RBit/rcolormanager.cpp	/^        ColorNode* m_nodes;$/;"	m	struct:RBlendingMap1::ColorArray	file:	access:public
m_observers	/home/viper/projects/RBit/rsubjectobserver.h	/^    ObserverList m_observers;$/;"	m	class:RSubject	access:private
m_offset	/home/viper/projects/RBit/rheaderview.h	/^    Sint32 m_offset;    $/;"	m	class:RHeaderView	access:private
m_opacity	/home/viper/projects/RBit/rwidget.h	/^    Uint8                m_opacity;$/;"	m	class:RWidget	access:private
m_orientation	/home/viper/projects/RBit/rheaderview.h	/^    RBit::Orientation m_orientation;$/;"	m	class:RHeaderView	access:private
m_orientation	/home/viper/projects/RBit/rsplitter.cpp	/^	RBit::Orientation m_orientation;	\/\/„ÓËÁÓÌÚ‡Î¸Ì˚È ËÎË ‚ÂÚËÍ‡Î¸Ì˚È$/;"	m	class:RSplitterPrivate	file:	access:public
m_pageStep	/home/viper/projects/RBit/rscrollbar.h	/^    Uint32       m_pageStep;$/;"	m	class:RScrollBar	access:private
m_palette	/home/viper/projects/RBit/rapplication.h	/^    RPalette              m_palette;$/;"	m	class:RApplication	access:private
m_palette	/home/viper/projects/RBit/rwidget.h	/^    RPalette             m_palette;$/;"	m	class:RWidget	access:private
m_parag	/home/viper/projects/RBit/rmultilinelabel.h	/^	mutable RTextParag* m_parag;$/;"	m	class:RMultilineLabel	access:private
m_parent	/home/viper/projects/RBit/rwidget.h	/^    RWidget*             m_parent;$/;"	m	class:RWidget	access:private
m_pointerOutsidePressedControl	/home/viper/projects/RBit/rscrollbar.h	/^    bool         m_pointerOutsidePressedControl;$/;"	m	class:RScrollBar	access:private
m_popup	/home/viper/projects/RBit/rcombobox.cpp	/^		Popup* m_popup;$/;"	m	class:RComboBox::Popup::PopupModel	file:	access:private
m_popup	/home/viper/projects/RBit/rcombobox.h	/^	Popup		*m_popup;$/;"	m	class:RComboBox	access:private
m_position	/home/viper/projects/RBit/rscrollbar.h	/^    Sint32       m_position;$/;"	m	class:RScrollBar	access:private
m_pressed	/home/viper/projects/RBit/rheaderview.h	/^    Sint32 m_pressed;    $/;"	m	class:RHeaderView	access:private
m_pressedColumn	/home/viper/projects/RBit/rgridview.h	/^    Sint32 m_pressedColumn;$/;"	m	class:RGridView	access:private
m_pressedControl	/home/viper/projects/RBit/rcombobox.h	/^    SubControl   m_pressedControl;$/;"	m	class:RComboBox	access:private
m_pressedControl	/home/viper/projects/RBit/rscrollbar.h	/^    SubControl   m_pressedControl;$/;"	m	class:RScrollBar	access:private
m_pressedRow	/home/viper/projects/RBit/rgridview.h	/^    Sint32 m_pressedRow;$/;"	m	class:RGridView	access:private
m_prev	/home/viper/projects/RBit/rsimplelist.h	/^	RSimpleListNodeBase* m_prev;$/;"	m	class:RSimpleListNodeBase	access:private
m_prototype	/home/viper/projects/RBit/rsimplegridmodel.h	/^    Item*        m_prototype;$/;"	m	class:RSimpleGridModel	access:private
m_prototype	/home/viper/projects/RBit/rsimpleheadermodel.h	/^    Item*    m_prototype;$/;"	m	class:RSimpleHeaderModel	access:private
m_ptr	/home/viper/projects/RBit/rsharedptr.h	/^        P m_ptr;$/;"	m	class:RSharedPtr::SharedCounterHelper	access:private
m_ptr	/home/viper/projects/RBit/rsharedptr.h	/^    T* m_ptr;$/;"	m	class:RSharedPtr	access:private
m_rect	/home/viper/projects/RBit/rrect.h	/^    SDL_Rect m_rect;$/;"	m	class:RRect	access:private
m_refcount	/home/viper/projects/RBit/rsharedptr.h	/^    SharedCounter m_refcount;$/;"	m	class:RSharedPtr	access:private
m_reject	/home/viper/projects/RBit/rmessagebox.h	/^    int       m_reject;$/;"	m	class:RMessageBox	access:private
m_repeatAction	/home/viper/projects/RBit/rscrollbar.h	/^    ScrollAction m_repeatAction;$/;"	m	class:RScrollBar	access:private
m_repeatDelay	/home/viper/projects/RBit/rapplication.h	/^    uint                  m_repeatDelay;$/;"	m	class:RApplication	access:private
m_repeatKey	/home/viper/projects/RBit/rapplication.h	/^    SDL_keysym            m_repeatKey;$/;"	m	class:RApplication	access:private
m_repeatPeriod	/home/viper/projects/RBit/rapplication.h	/^    uint                  m_repeatPeriod;$/;"	m	class:RApplication	access:private
m_repeatPeriodLowerBound	/home/viper/projects/RBit/rapplication.h	/^    uint                  m_repeatPeriodLowerBound;    $/;"	m	class:RApplication	access:private
m_repeatTime	/home/viper/projects/RBit/rscrollbar.h	/^    Uint32       m_repeatTime;$/;"	m	class:RScrollBar	access:private
m_res	/home/viper/projects/RBit/rdialog.h	/^	int m_res;$/;"	m	class:RDialog	access:private
m_resizable	/home/viper/projects/RBit/rscrollwidgetarea.h	/^    bool m_resizable;$/;"	m	class:RScrollWidgetAreaBase	access:private
m_resolveMask	/home/viper/projects/RBit/rpalette.h	/^    unsigned int m_resolveMask;$/;"	m	class:RPalette	access:private
m_right	/home/viper/projects/RBit/rscrollarea.h	/^    Uint16 m_left, m_top, m_right, m_bottom; \/\/ viewport margin$/;"	m	class:RScrollAreaBase	access:private
m_rightTextMargin	/home/viper/projects/RBit/rgridview.h	/^           m_rightTextMargin, $/;"	m	class:RGridView	access:private
m_rightTextMargin	/home/viper/projects/RBit/rheaderview.h	/^           m_rightTextMargin, $/;"	m	class:RHeaderView	access:private
m_rows	/home/viper/projects/RBit/rsimplegridmodel.h	/^    Uint32       m_rows;     $/;"	m	class:RSimpleGridModel	access:private
m_rtti	/home/viper/projects/RBit/rsimplegridmodel.h	/^        int m_rtti;$/;"	m	class:RSimpleGridModel::Item	access:private
m_rtti	/home/viper/projects/RBit/rsimpleheadermodel.h	/^        int m_rtti;$/;"	m	class:RSimpleHeaderModel::Item	access:private
m_screen	/home/viper/projects/RBit/rapplication.h	/^    SDL_Surface*          m_screen;        $/;"	m	class:RApplication	access:private
m_screenRect	/home/viper/projects/RBit/rapplication.h	/^    RRect                 m_screenRect;    $/;"	m	class:RApplication	access:private
m_searchStr	/home/viper/projects/RBit/rcombobox.h	/^	std::string	 m_searchStr;$/;"	m	class:RComboBox	access:private
m_searchTimeOut	/home/viper/projects/RBit/rcombobox.h	/^	Sint32		 m_searchTimeOut;$/;"	m	class:RComboBox	access:private
m_section	/home/viper/projects/RBit/rheaderview.h	/^    Sint32 m_section;$/;"	m	class:RHeaderView	access:private
m_sections	/home/viper/projects/RBit/rheaderview.h	/^    mutable HeaderSections m_sections;    $/;"	m	class:RHeaderView	access:private
m_sections	/home/viper/projects/RBit/rsimpleheadermodel.h	/^    Sections m_sections;$/;"	m	class:RSimpleHeaderModel	access:private
m_selectionPolicy	/home/viper/projects/RBit/rgridview.h	/^    SelectionPolicy m_selectionPolicy;$/;"	m	class:RGridView	access:private
m_selend	/home/viper/projects/RBit/reditbox.h	/^    Sint32              m_selend;$/;"	m	class:REditBox	access:private
m_selstart	/home/viper/projects/RBit/reditbox.h	/^    Sint32              m_selstart;$/;"	m	class:REditBox	access:private
m_setCursor	/home/viper/projects/RBit/rheaderview.h	/^    SDL_Cursor* m_setCursor;$/;"	m	class:RHeaderView	access:private
m_singleStep	/home/viper/projects/RBit/rscrollbar.h	/^    Uint32       m_singleStep;$/;"	m	class:RScrollBar	access:private
m_size	/home/viper/projects/RBit/rarraycontainer.h	/^	Uint32  m_size;$/;"	m	class:RArrayContainer	access:private
m_size	/home/viper/projects/RBit/rsimplelist.h	/^    unsigned int m_size;$/;"	m	class:RSLPolicy_TrackSize	access:private
m_snapBackPosition	/home/viper/projects/RBit/rscrollbar.h	/^    Sint32       m_snapBackPosition;$/;"	m	class:RScrollBar	access:private
m_sortIndicatorOrder	/home/viper/projects/RBit/rheaderview.h	/^    RBit::SortOrder m_sortIndicatorOrder;$/;"	m	class:RHeaderView	access:private
m_sortIndicatorSection	/home/viper/projects/RBit/rheaderview.h	/^    Sint32 m_sortIndicatorSection;$/;"	m	class:RHeaderView	access:private
m_splitHCursor	/home/viper/projects/RBit/rheaderview.h	/^    SDL_Cursor* m_splitHCursor;$/;"	m	class:RHeaderView	access:private
m_splitHCursor	/home/viper/projects/RBit/rsplitter.cpp	/^	SDL_Cursor *m_splitHCursor;$/;"	m	class:RSplitterPrivate	file:	access:public
m_splitVCursor	/home/viper/projects/RBit/rheaderview.h	/^    SDL_Cursor* m_splitVCursor;$/;"	m	class:RHeaderView	access:private
m_splitVCursor	/home/viper/projects/RBit/rsplitter.cpp	/^	SDL_Cursor *m_splitVCursor;$/;"	m	class:RSplitterPrivate	file:	access:public
m_state	/home/viper/projects/RBit/rheaderview.h	/^    enum State { NoState, ResizeSection } m_state;$/;"	m	class:RHeaderView	typeref:enum:RHeaderView::State	access:private
m_state	/home/viper/projects/RBit/rsplitter.cpp	/^	State m_state;$/;"	m	class:RSplitterPrivate	file:	access:public
m_str	/home/viper/projects/RBit/rstring.h	/^	char* m_str;$/;"	m	class:RString	access:private
m_stretchSections	/home/viper/projects/RBit/rheaderview.h	/^    Uint16 m_stretchSections;    $/;"	m	class:RHeaderView	access:private
m_subjects	/home/viper/projects/RBit/rsubjectobserver.h	/^    SubjectList m_subjects;$/;"	m	class:RObserver	access:private
m_superClassName	/home/viper/projects/RBit/rwidget.h	/^    const char* m_superClassName;$/;"	m	class:RMetaObject	access:private
m_table	/home/viper/projects/RBit/rsimplegridmodel.h	/^    Table        m_table;$/;"	m	class:RSimpleGridModel	access:private
m_tail	/home/viper/projects/RBit/rsimplelist.h	/^	Node* m_tail;$/;"	m	class:RSimpleList	access:private
m_target	/home/viper/projects/RBit/rheaderview.h	/^    Sint32 m_target;$/;"	m	class:RHeaderView	access:private
m_text	/home/viper/projects/RBit/rcheckbox.h	/^    const char* m_text;$/;"	m	class:RCheckBox	access:private
m_text	/home/viper/projects/RBit/reditbox.h	/^    std::string         m_text;$/;"	m	class:REditBox	access:private
m_text	/home/viper/projects/RBit/rlabel.h	/^    const char*  m_text;$/;"	m	class:RLabel	access:private
m_text	/home/viper/projects/RBit/rmessagebox.h	/^    RString   m_text;$/;"	m	class:RMessageBox	access:private
m_text	/home/viper/projects/RBit/rsimplegridmodel.h	/^        RString m_text;$/;"	m	class:RSimpleGridModel::Item	access:private
m_text	/home/viper/projects/RBit/rsimpleheadermodel.h	/^        RString m_text;$/;"	m	class:RSimpleHeaderModel::Item	access:private
m_textSize	/home/viper/projects/RBit/reditbox.h	/^    mutable RSize       m_textSize;$/;"	m	class:REditBox	access:private
m_thickness	/home/viper/projects/RBit/rheaderview.h	/^    Uint16 m_thickness;    $/;"	m	class:RHeaderView	access:private
m_thresholdTime	/home/viper/projects/RBit/rscrollbar.h	/^    Uint32       m_thresholdTime;$/;"	m	class:RScrollBar	access:private
m_timePerSearch	/home/viper/projects/RBit/rcombobox.h	/^	Sint32		 m_timePerSearch;$/;"	m	class:RComboBox	access:private
m_top	/home/viper/projects/RBit/rscrollarea.h	/^    Uint16 m_left, m_top, m_right, m_bottom; \/\/ viewport margin$/;"	m	class:RScrollAreaBase	access:private
m_topTextMargin	/home/viper/projects/RBit/rgridview.h	/^    Sint16 m_topTextMargin, $/;"	m	class:RGridView	access:private
m_topTextMargin	/home/viper/projects/RBit/rheaderview.h	/^    Sint16 m_topTextMargin, $/;"	m	class:RHeaderView	access:private
m_toplevelWidgets	/home/viper/projects/RBit/rapplication.h	/^    RSiblingWidgetList    m_toplevelWidgets;$/;"	m	class:RApplication	access:private
m_ttfcount	/home/viper/projects/RBit/rfont.cpp	/^int RTTFQuiter::m_ttfcount = 0;/;"	m	class:RTTFQuiter	file:
m_ttfcount	/home/viper/projects/RBit/rfont.h	/^    static int m_ttfcount;$/;"	m	class:RTTFQuiter	access:private
m_types	/home/viper/projects/RBit/rsimplegridmodel.h	/^    Types        m_types;$/;"	m	class:RSimpleGridModel	access:private
m_updateRect	/home/viper/projects/RBit/rapplication.h	/^    RRect                 m_updateRect;$/;"	m	class:RApplication	access:private
m_value	/home/viper/projects/RBit/rscrollbar.h	/^    Sint32       m_value;$/;"	m	class:RScrollBar	access:private
m_vbar	/home/viper/projects/RBit/rscrollarea.h	/^    ScrollBar* m_hbar, *m_vbar;$/;"	m	class:RScrollAreaBase	access:private
m_vbarpolicy	/home/viper/projects/RBit/rscrollarea.h	/^    ScrollBarPolicy m_vbarpolicy, m_hbarpolicy;$/;"	m	class:RScrollAreaBase	access:private
m_verticalHeader	/home/viper/projects/RBit/rgridview.h	/^    RHeaderView *m_verticalHeader;$/;"	m	class:RGridView	access:private
m_verticalHeaderObserver	/home/viper/projects/RBit/rgridview.h	/^    } m_horizontalHeaderObserver, m_verticalHeaderObserver;$/;"	m	class:RGridView	typeref:class:RGridView::HeaderObserver	access:private
m_verticalStepsPerItem	/home/viper/projects/RBit/rgridview.h	/^    Uint16 m_verticalStepsPerItem;$/;"	m	class:RGridView	access:private
m_vhmodel	/home/viper/projects/RBit/rcombobox.cpp	/^    RSimpleHeaderModel m_hhmodel, m_vhmodel;$/;"	m	class:RComboBox::Popup	file:	access:private
m_viewport	/home/viper/projects/RBit/rscrollarea.h	/^    mutable RWidget* m_viewport;$/;"	m	class:RScrollAreaBase	access:private
m_widget	/home/viper/projects/RBit/rscrollwidgetarea.h	/^    RWidget* m_widget;    $/;"	m	class:RScrollWidgetAreaBase	access:private
m_widgetFlags	/home/viper/projects/RBit/rwidget.h	/^    RWFlags              m_widgetFlags;$/;"	m	class:RWidget	access:private
m_width	/home/viper/projects/RBit/rsize.h	/^    Uint16 m_width;$/;"	m	class:RSize	access:private
m_x	/home/viper/projects/RBit/rpoint.h	/^	Sint16 m_x;$/;"	m	class:RPoint	access:private
m_xoffset	/home/viper/projects/RBit/rscrollarea.h	/^    Uint16 m_xoffset, m_yoffset;$/;"	m	class:RScrollAreaBase	access:private
m_y	/home/viper/projects/RBit/rpoint.h	/^	Sint16 m_y;$/;"	m	class:RPoint	access:private
m_yoffset	/home/viper/projects/RBit/rscrollarea.h	/^    Uint16 m_xoffset, m_yoffset;$/;"	m	class:RScrollAreaBase	access:private
magenta	/home/viper/projects/RBit/rbit.h	/^        magenta,$/;"	e	enum:RBit::GlobalColor
make_dlist	/home/viper/projects/RBit/rsdlttf.cpp	/^void make_dlist(TTF_Font *f, unsigned char ch)$/;"	f	signature:(TTF_Font *f, unsigned char ch)
make_dlist	/home/viper/projects/RBit/rsdlttf.cpp	/^void make_dlist(TTF_Font *f, unsigned char ch);$/;"	p	file:	signature:(TTF_Font *f, unsigned char ch)
mapFrom	/home/viper/projects/RBit/rwidget.h	/^    RPoint mapFrom(RWidget* parent, const RPoint& pos) const;$/;"	p	class:RWidget	access:public	signature:(RWidget* parent, const RPoint& pos) const
mapFromGlobal	/home/viper/projects/RBit/rwidget.cpp	/^RPoint RWidget::mapFromGlobal(const RPoint& pos) const$/;"	f	class:RWidget	signature:(const RPoint& pos) const
mapFromGlobal	/home/viper/projects/RBit/rwidget.h	/^    RPoint mapFromGlobal(const RPoint& pos) const;$/;"	p	class:RWidget	access:public	signature:(const RPoint& pos) const
mapFromParent	/home/viper/projects/RBit/rwidget.h	/^    RPoint mapFromParent (const RPoint& pos) const;$/;"	p	class:RWidget	access:public	signature:(const RPoint& pos) const
mapFromParent	/home/viper/projects/RBit/rwidget.h	/^inline RPoint RWidget::mapFromParent(const RPoint& p) const$/;"	f	class:RWidget	signature:(const RPoint& p) const
mapFromRGB	/home/viper/projects/RBit/rcolormanager.h	/^    Uint32 mapFromRGB(const RColor& c, SDL_PixelFormat* format = SDL_GetVideoSurface()->format);$/;"	p	class:RColorManager	access:public	signature:(const RColor& c, SDL_PixelFormat* format = SDL_GetVideoSurface()->format)
mapFromRGB	/home/viper/projects/RBit/rcolormanager.h	/^inline Uint32 RColorManager::mapFromRGB(const RColor& c, SDL_PixelFormat* format)$/;"	f	class:RColorManager	signature:(const RColor& c, SDL_PixelFormat* format)
mapTo	/home/viper/projects/RBit/rwidget.cpp	/^RPoint RWidget::mapTo(RWidget* parent, const RPoint& pos) const$/;"	f	class:RWidget	signature:(RWidget* parent, const RPoint& pos) const
mapTo	/home/viper/projects/RBit/rwidget.h	/^    RPoint mapTo(RWidget* parent, const RPoint& pos) const;$/;"	p	class:RWidget	access:public	signature:(RWidget* parent, const RPoint& pos) const
mapToGlobal	/home/viper/projects/RBit/rwidget.cpp	/^RPoint RWidget::mapToGlobal(const RPoint &pos) const$/;"	f	class:RWidget	signature:(const RPoint &pos) const
mapToGlobal	/home/viper/projects/RBit/rwidget.h	/^    RPoint mapToGlobal(const RPoint& pos) const;$/;"	p	class:RWidget	access:public	signature:(const RPoint& pos) const
mapToParent	/home/viper/projects/RBit/rwidget.h	/^    RPoint mapToParent(const RPoint& pos) const;$/;"	p	class:RWidget	access:public	signature:(const RPoint& pos) const
mapToParent	/home/viper/projects/RBit/rwidget.h	/^inline RPoint RWidget::mapToParent(const RPoint& p) const$/;"	f	class:RWidget	signature:(const RPoint& p) const
mapToRGB	/home/viper/projects/RBit/rcolormanager.h	/^    void mapToRGB(Uint32 ci, RColor* c, SDL_PixelFormat* format = SDL_GetVideoSurface()->format);    $/;"	p	class:RColorManager	access:public	signature:(Uint32 ci, RColor* c, SDL_PixelFormat* format = SDL_GetVideoSurface()->format)
mapToRGB	/home/viper/projects/RBit/rcolormanager.h	/^inline void RColorManager::mapToRGB(Uint32 i, RColor* c, SDL_PixelFormat* format)$/;"	f	class:RColorManager	signature:(Uint32 i, RColor* c, SDL_PixelFormat* format)
maxCount	/home/viper/projects/RBit/rcombobox.cpp	/^Sint32 RComboBox::maxCount() const$/;"	f	class:RComboBox	signature:() const
maxCount	/home/viper/projects/RBit/rcombobox.h	/^    Sint32 maxCount() const;$/;"	p	class:RComboBox	access:public	signature:() const
maxCursorPosition	/home/viper/projects/RBit/reditbox.h	/^    Sint32 maxCursorPosition() const;$/;"	p	class:REditBox	access:public	signature:() const
maxCursorPosition	/home/viper/projects/RBit/reditbox.h	/^inline Sint32 REditBox::maxCursorPosition() const$/;"	f	class:REditBox	signature:() const
maxVisibleItems	/home/viper/projects/RBit/rcombobox.cpp	/^Sint32 RComboBox::maxVisibleItems() const$/;"	f	class:RComboBox	signature:() const
maxVisibleItems	/home/viper/projects/RBit/rcombobox.h	/^    Sint32 maxVisibleItems() const;$/;"	p	class:RComboBox	access:public	signature:() const
maximum	/home/viper/projects/RBit/rscrollbar.h	/^    Sint32 maximum() const;$/;"	p	class:RScrollBar	access:public	signature:() const
maximum	/home/viper/projects/RBit/rscrollbar.h	/^inline Sint32 RScrollBar::maximum() const$/;"	f	class:RScrollBar	signature:() const
maximumDragDistance	/home/viper/projects/RBit/rscrollbar.h	/^    Sint16 maximumDragDistance() const;$/;"	p	class:RScrollBar	access:protected	signature:() const
maximumDragDistance	/home/viper/projects/RBit/rscrollbar.h	/^inline Sint16 RScrollBar::maximumDragDistance() const$/;"	f	class:RScrollBar	signature:() const
maximumViewportSize	/home/viper/projects/RBit/rscrollarea.cpp	/^RSize RScrollAreaBase::maximumViewportSize() const$/;"	f	class:RScrollAreaBase	signature:() const
maximumViewportSize	/home/viper/projects/RBit/rscrollarea.h	/^    RSize maximumViewportSize() const;$/;"	p	class:RScrollAreaBase	access:public	signature:() const
maxx	/home/viper/projects/RBit/rgl.h	/^    GLfloat maxx;$/;"	m	struct:rglPicSeq	access:public
maxx	/home/viper/projects/RBit/rimage.cpp	/^    GLfloat maxx;$/;"	m	class:RImagePrivate	file:	access:public
maxx	/home/viper/projects/RBit/rsdlttf.cpp	/^	int maxx;$/;"	m	struct:cached_glyph	file:	access:public
maxy	/home/viper/projects/RBit/rgl.h	/^    GLfloat maxy;$/;"	m	struct:rglPicSeq	access:public
maxy	/home/viper/projects/RBit/rimage.cpp	/^    GLfloat maxy;$/;"	m	class:RImagePrivate	file:	access:public
maxy	/home/viper/projects/RBit/rsdlttf.cpp	/^	int maxy;$/;"	m	struct:cached_glyph	file:	access:public
meta	/home/viper/projects/RBit/rsimplegridmodel.h	/^        inline MetaData* meta()$/;"	f	class:RSimpleGridModel::Item	access:private	signature:()
meta	/home/viper/projects/RBit/rsimpleheadermodel.h	/^        inline MetaData* meta()$/;"	f	class:RSimpleHeaderModel::Item	access:private	signature:()
metaC	/home/viper/projects/RBit/rsimplegridmodel.h	/^        inline const MetaData* metaC() const$/;"	f	class:RSimpleGridModel::Item	access:private	signature:() const
metaC	/home/viper/projects/RBit/rsimpleheadermodel.h	/^        inline const MetaData* metaC() const$/;"	f	class:RSimpleHeaderModel::Item	access:private	signature:() const
metaObject	/home/viper/projects/RBit/rwidget.cpp	/^RMetaObject* RMetaRegistrator::metaObject(const char* className)$/;"	f	class:RMetaRegistrator	signature:(const char* className)
metaObject	/home/viper/projects/RBit/rwidget.h	/^    RMetaObject* metaObject(const char* className);$/;"	p	class:RMetaRegistrator	access:public	signature:(const char* className)
metaObjects	/home/viper/projects/RBit/rwidget.h	/^    MetaObjects metaObjects;$/;"	m	class:RMetaRegistrator	access:private
mid	/home/viper/projects/RBit/rpalette.h	/^    inline const RColor& mid() const { return color(Mid); }$/;"	f	class:RPalette	access:public	signature:() const
midlight	/home/viper/projects/RBit/rpalette.h	/^    inline const RColor& midlight() const { return color(Midlight); }$/;"	f	class:RPalette	access:public	signature:() const
minCursorPosition	/home/viper/projects/RBit/reditbox.h	/^    Sint32 minCursorPosition() const;$/;"	p	class:REditBox	access:public	signature:() const
minCursorPosition	/home/viper/projects/RBit/reditbox.h	/^inline Sint32 REditBox::minCursorPosition() const$/;"	f	class:REditBox	signature:() const
minimum	/home/viper/projects/RBit/rscrollbar.h	/^    Sint32 minimum() const;$/;"	p	class:RScrollBar	access:public	signature:() const
minimum	/home/viper/projects/RBit/rscrollbar.h	/^inline Sint32 RScrollBar::minimum() const$/;"	f	class:RScrollBar	signature:() const
minimumContentsLength	/home/viper/projects/RBit/rcombobox.h	/^    Sint32 minimumContentsLength() const;$/;"	p	class:RComboBox	access:public	signature:() const
minimumSizeHint	/home/viper/projects/RBit/rcombobox.h	/^    RSize minimumSizeHint() const;    $/;"	p	class:RComboBox	access:public	signature:() const
minimumSizeHint	/home/viper/projects/RBit/rscrollarea.h	/^    RSize minimumSizeHint() const;$/;"	p	class:RScrollAreaBase	access:public	signature:() const
minimumViewportSize	/home/viper/projects/RBit/rscrollarea.cpp	/^RSize RScrollAreaBase::minimumViewportSize() const$/;"	f	class:RScrollAreaBase	signature:() const
minimumViewportSize	/home/viper/projects/RBit/rscrollarea.h	/^    RSize minimumViewportSize() const;$/;"	p	class:RScrollAreaBase	access:public	signature:() const
minx	/home/viper/projects/RBit/rgl.h	/^    GLfloat minx;$/;"	m	struct:rglPicSeq	access:public
minx	/home/viper/projects/RBit/rsdlttf.cpp	/^	int minx;$/;"	m	struct:cached_glyph	file:	access:public
miny	/home/viper/projects/RBit/rgl.h	/^    GLfloat miny;$/;"	m	struct:rglPicSeq	access:public
miny	/home/viper/projects/RBit/rsdlttf.cpp	/^	int miny;$/;"	m	struct:cached_glyph	file:	access:public
mode	/home/viper/projects/RBit/rheaderview.h	/^        ResizeMode mode;$/;"	m	struct:RHeaderView::HeaderSection	access:public
model	/home/viper/projects/RBit/rgridview.h	/^    RGridModel* model() const;$/;"	p	class:RGridView	access:public	signature:() const
model	/home/viper/projects/RBit/rgridview.h	/^inline RGridModel* RGridView::model() const$/;"	f	class:RGridView	signature:() const
model	/home/viper/projects/RBit/rheaderview.h	/^    RHeaderModel* model() const;$/;"	p	class:RHeaderView	access:public	signature:() const
model	/home/viper/projects/RBit/rheaderview.h	/^inline RHeaderModel* RHeaderView::model() const$/;"	f	class:RHeaderView	signature:() const
model	/home/viper/projects/RBit/rsimplegridmodel.h	/^        RSimpleGridModel* model() const;$/;"	p	class:RSimpleGridModel::Item	access:public	signature:() const
model	/home/viper/projects/RBit/rsimplegridmodel.h	/^inline RSimpleGridModel* RSimpleGridModel::Item::model() const$/;"	f	class:RSimpleGridModel::Item	signature:() const
model	/home/viper/projects/RBit/rsimpleheadermodel.h	/^        RSimpleHeaderModel* model() const;$/;"	p	class:RSimpleHeaderModel::Item	access:public	signature:() const
model	/home/viper/projects/RBit/rsimpleheadermodel.h	/^inline RSimpleHeaderModel* RSimpleHeaderModel::Item::model() const$/;"	f	class:RSimpleHeaderModel::Item	signature:() const
modelReplaced	/home/viper/projects/RBit/rgridview.cpp	/^void RGridView::HeaderObserver::modelReplaced(RHeaderModel* newModel)$/;"	f	class:RGridView::HeaderObserver	signature:(RHeaderModel* newModel)
modelReplaced	/home/viper/projects/RBit/rgridview.h	/^        virtual void modelReplaced(RHeaderModel* newModel);        $/;"	p	class:RGridView::HeaderObserver	access:protected	signature:(RHeaderModel* newModel)
modelReplaced	/home/viper/projects/RBit/rgridview.h	/^    virtual void modelReplaced(RGridModel* model) $/;"	f	class:RGridViewObserver	access:public	signature:(RGridModel* model)
modelReplaced	/home/viper/projects/RBit/rheaderview.h	/^    virtual void modelReplaced(RHeaderModel* model) $/;"	f	class:RHeaderViewObserver	access:public	signature:(RHeaderModel* model)
modelReset	/home/viper/projects/RBit/rgridmodel.h	/^    virtual void modelReset() {}$/;"	f	class:RGridModelObserverBase	access:protected	signature:()
modelReset	/home/viper/projects/RBit/rgridview.cpp	/^void RGridView::modelReset()$/;"	f	class:RGridView	signature:()
modelReset	/home/viper/projects/RBit/rgridview.h	/^    virtual void modelReset();$/;"	p	class:RGridView	access:protected	signature:()
modelReset	/home/viper/projects/RBit/rheadermodel.h	/^    virtual void modelReset() {}$/;"	f	class:RHeaderModelObserver	access:protected	signature:()
modelReset	/home/viper/projects/RBit/rheaderview.cpp	/^void RHeaderView::modelReset()$/;"	f	class:RHeaderView	signature:()
modelReset	/home/viper/projects/RBit/rheaderview.h	/^    virtual void modelReset();$/;"	p	class:RHeaderView	access:protected	signature:()
mouseGrabbed	/home/viper/projects/RBit/rwidget.h	/^    bool mouseGrabbed() const;$/;"	p	class:RWidget	access:public	signature:() const
mouseGrabbed	/home/viper/projects/RBit/rwidget.h	/^inline bool RWidget::mouseGrabbed() const$/;"	f	class:RWidget	signature:() const
mouseGrabberWidget	/home/viper/projects/RBit/rapplication.h	/^    RWidget* mouseGrabberWidget();$/;"	p	class:RApplication	access:protected	signature:()
mouseGrabberWidget	/home/viper/projects/RBit/rapplication.h	/^inline RWidget* RApplication::mouseGrabberWidget()$/;"	f	class:RApplication	signature:()
mouseTrackingEnabled	/home/viper/projects/RBit/rapplication.h	/^    bool mouseTrackingEnabled() const;$/;"	p	class:RApplication	access:protected	signature:() const
mouseTrackingEnabled	/home/viper/projects/RBit/rapplication.h	/^inline bool RApplication::mouseTrackingEnabled() const$/;"	f	class:RApplication	signature:() const
mouseTrackingEnabled	/home/viper/projects/RBit/rwidget.h	/^	bool mouseTrackingEnabled() const;$/;"	p	class:RWidget	access:public	signature:() const
mouseTrackingEnabled	/home/viper/projects/RBit/rwidget.h	/^inline bool RWidget::mouseTrackingEnabled() const$/;"	f	class:RWidget	signature:() const
moveAfter	/home/viper/projects/RBit/rsimplelist.h	/^	inline void moveAfter(Node* after, Node* first, Node* last)$/;"	f	class:RSimpleList	access:public	signature:(Node* after, Node* first, Node* last)
moveAfter	/home/viper/projects/RBit/rsimplelist.h	/^	inline void moveAfter(Node* after, Node* node)$/;"	f	class:RSimpleList	access:public	signature:(Node* after, Node* node)
moveBefore	/home/viper/projects/RBit/rsimplelist.h	/^	inline void moveBefore(Node* before, Node* first, Node* last)$/;"	f	class:RSimpleList	access:public	signature:(Node* before, Node* first, Node* last)
moveBefore	/home/viper/projects/RBit/rsimplelist.h	/^	inline void moveBefore(Node* before, Node* node)$/;"	f	class:RSimpleList	access:public	signature:(Node* before, Node* node)
moveBottom	/home/viper/projects/RBit/rrect.h	/^    void moveBottom(Sint16 pos );$/;"	p	class:RRect	access:public	signature:(Sint16 pos )
moveBottom	/home/viper/projects/RBit/rrect.h	/^inline void RRect::moveBottom(Sint16 pos)$/;"	f	class:RRect	signature:(Sint16 pos)
moveBottomLeft	/home/viper/projects/RBit/rrect.h	/^    void moveBottomLeft(const RPoint &p);    $/;"	p	class:RRect	access:public	signature:(const RPoint &p)
moveBottomLeft	/home/viper/projects/RBit/rrect.h	/^inline void RRect::moveBottomLeft(const RPoint &p)$/;"	f	class:RRect	signature:(const RPoint &p)
moveBottomRight	/home/viper/projects/RBit/rrect.h	/^    void moveBottomRight(const RPoint &p);$/;"	p	class:RRect	access:public	signature:(const RPoint &p)
moveBottomRight	/home/viper/projects/RBit/rrect.h	/^inline void RRect::moveBottomRight(const RPoint &p)$/;"	f	class:RRect	signature:(const RPoint &p)
moveCursor	/home/viper/projects/RBit/reditbox.cpp	/^void REditBox::moveCursor(Sint32 pos, bool mark)$/;"	f	class:REditBox	signature:(Sint32 pos, bool mark)
moveCursor	/home/viper/projects/RBit/reditbox.h	/^    virtual void moveCursor(Sint32 pos, bool mark);$/;"	p	class:REditBox	access:protected	signature:(Sint32 pos, bool mark)
moveCursor	/home/viper/projects/RBit/rgridview.cpp	/^void RGridView::moveCursor(RGridView::CursorAction cursorAction, SDLMod, Sint32& newRow, Sint32& newColumn)$/;"	f	class:RGridView	signature:(RGridView::CursorAction cursorAction, SDLMod, Sint32& newRow, Sint32& newColumn)
moveCursor	/home/viper/projects/RBit/rgridview.h	/^    virtual void moveCursor(CursorAction action, SDLMod modifiers, Sint32& newRow, Sint32& newColumn);$/;"	p	class:RGridView	access:protected	signature:(CursorAction action, SDLMod modifiers, Sint32& newRow, Sint32& newColumn)
moveLeft	/home/viper/projects/RBit/rrect.h	/^    void moveLeft(Sint16 pos);$/;"	p	class:RRect	access:public	signature:(Sint16 pos)
moveLeft	/home/viper/projects/RBit/rrect.h	/^inline void RRect::moveLeft(Sint16 pos)$/;"	f	class:RRect	signature:(Sint16 pos)
moveRight	/home/viper/projects/RBit/rrect.h	/^    void moveRight(Sint16 pos );$/;"	p	class:RRect	access:public	signature:(Sint16 pos )
moveRight	/home/viper/projects/RBit/rrect.h	/^inline void RRect::moveRight(Sint16 pos)$/;"	f	class:RRect	signature:(Sint16 pos)
moveTop	/home/viper/projects/RBit/rrect.h	/^    void moveTop(Sint16 pos );$/;"	p	class:RRect	access:public	signature:(Sint16 pos )
moveTop	/home/viper/projects/RBit/rrect.h	/^inline void RRect::moveTop(Sint16 pos)$/;"	f	class:RRect	signature:(Sint16 pos)
moveTopLeft	/home/viper/projects/RBit/rrect.h	/^    void moveTopLeft(const RPoint &p);$/;"	p	class:RRect	access:public	signature:(const RPoint &p)
moveTopLeft	/home/viper/projects/RBit/rrect.h	/^inline void RRect::moveTopLeft(const RPoint &p)$/;"	f	class:RRect	signature:(const RPoint &p)
moveTopRight	/home/viper/projects/RBit/rrect.h	/^    void moveTopRight(const RPoint &p);$/;"	p	class:RRect	access:public	signature:(const RPoint &p)
moveTopRight	/home/viper/projects/RBit/rrect.h	/^inline void RRect::moveTopRight(const RPoint &p)$/;"	f	class:RRect	signature:(const RPoint &p)
naturalPalette	/home/viper/projects/RBit/rwidget.cpp	/^RPalette RWidget::naturalPalette(RWidget* w)$/;"	f	class:RWidget	signature:(RWidget* w)
naturalPalette	/home/viper/projects/RBit/rwidget.h	/^    static RPalette naturalPalette(RWidget* w);$/;"	p	class:RWidget	access:private	signature:(RWidget* w)
next	/home/viper/projects/RBit/rsimplelist.h	/^	inline RSimpleListNodeBase* next() const$/;"	f	class:RSimpleListNodeBase	access:protected	signature:() const
next	/home/viper/projects/RBit/rsimplelist.h	/^	inline T* next() const$/;"	f	class:RSimpleCircularListNode	access:protected	signature:() const
next	/home/viper/projects/RBit/rsimplelist.h	/^	inline T* next() const$/;"	f	class:RSimpleListNode	access:protected	signature:() const
nextCheckState	/home/viper/projects/RBit/rbutton.cpp	/^void RButton::nextCheckState()$/;"	f	class:RButton	signature:()
nextCheckState	/home/viper/projects/RBit/rbutton.h	/^    void nextCheckState();$/;"	p	class:RButton	access:protected	signature:()
nextObserver	/home/viper/projects/RBit/rsubjectobserver.h	/^    inline typename RSubject<Subject>::Observer* nextObserver() const$/;"	f	class:RObserver	access:public	signature:() const
nextSiblingWidget	/home/viper/projects/RBit/rwidget.h	/^    RWidget* nextSiblingWidget() const;$/;"	p	class:RWidget	access:public	signature:() const
nextSiblingWidget	/home/viper/projects/RBit/rwidget.h	/^inline RWidget* RWidget::nextSiblingWidget() const$/;"	f	class:RWidget	signature:() const
nextSubject	/home/viper/projects/RBit/rsubjectobserver.h	/^    Subject* nextSubject() const$/;"	f	class:RSubject	access:public	signature:() const
nextTabWidget	/home/viper/projects/RBit/rwidget.h	/^    RWidget* nextTabWidget() const;$/;"	p	class:RWidget	access:public	signature:() const
nextTabWidget	/home/viper/projects/RBit/rwidget.h	/^inline RWidget* RWidget::nextTabWidget() const$/;"	f	class:RWidget	signature:() const
next_p2	/home/viper/projects/RBit/rsdlttf.cpp	/^inline int next_p2 (int a)$/;"	f	signature:(int a)
numLines	/home/viper/projects/RBit/rdrawutil.cpp	/^    Uint32 numLines();$/;"	p	struct:RTextParag	file:	access:public	signature:()
numLines	/home/viper/projects/RBit/rdrawutil.cpp	/^inline Uint32 RTextParag::numLines()$/;"	f	class:RTextParag	signature:()
numSequence	/home/viper/projects/RBit/rrandomgenerator.h	/^    const char* numSequence(char* dst, Uint32 size) const$/;"	f	class:RRandomGenerator	access:public	signature:(char* dst, Uint32 size) const
number	/home/viper/projects/RBit/rstring.h	/^	RString &number(int val);$/;"	p	class:RString	access:public	signature:(int val)
number	/home/viper/projects/RBit/rstring.h	/^inline RString &RString::number(int val)$/;"	f	class:RString	signature:(int val)
octant0	/home/viper/projects/RBit/rdrawutil.cpp	/^void octant0(SDL_Surface* dst, Uint32 x0, Uint32 y0, Uint32 deltax, Uint32 deltay,$/;"	f	namespace:__anon14	signature:(SDL_Surface* dst, Uint32 x0, Uint32 y0, Uint32 deltax, Uint32 deltay, Sint16 xdirection, const RColor& color)
octant1	/home/viper/projects/RBit/rdrawutil.cpp	/^void octant1(SDL_Surface* dst, Uint32 x0, Uint32 y0, Uint32 deltax, Uint32 deltay,$/;"	f	namespace:__anon14	signature:(SDL_Surface* dst, Uint32 x0, Uint32 y0, Uint32 deltax, Uint32 deltay, Sint16 xdirection, const RColor& color)
offset	/home/viper/projects/RBit/rheaderview.h	/^    Sint32 offset() const;$/;"	p	class:RHeaderView	access:public	signature:() const
offset	/home/viper/projects/RBit/rheaderview.h	/^inline Sint32 RHeaderView::offset() const$/;"	f	class:RHeaderView	signature:() const
operator !	/home/viper/projects/RBit/rcolormanager.cpp	/^bool RColorManager::RBlendingMapPtr::operator !() const$/;"	f	class:RColorManager::RBlendingMapPtr	signature:() const
operator !	/home/viper/projects/RBit/rcolormanager.h	/^        bool operator! () const;$/;"	p	class:RColorManager::RBlendingMapPtr	access:public	signature:() const
operator !	/home/viper/projects/RBit/rsharedptr.h	/^    bool operator!() const$/;"	f	class:RSharedPtr	access:public	signature:() const
operator !=	/home/viper/projects/RBit/rcolor.h	/^	bool operator!=(const RColor& c);$/;"	p	class:RColor	access:public	signature:(const RColor& c)
operator !=	/home/viper/projects/RBit/rcolor.h	/^inline bool RColor::operator!=(const RColor& c)$/;"	f	class:RColor	signature:(const RColor& c)
operator !=	/home/viper/projects/RBit/rpalette.h	/^    inline bool operator!=(const RPalette& p) const { return !(operator==(p)); }$/;"	f	class:RPalette	access:public	signature:(const RPalette& p) const
operator !=	/home/viper/projects/RBit/rpoint.h	/^    friend inline bool operator!= (const RPoint &, const RPoint&);$/;"	p	class:RPoint	access:friend	signature:(const RPoint &, const RPoint&)
operator !=	/home/viper/projects/RBit/rpoint.h	/^inline bool operator!= (const RPoint &p1, const RPoint &p2)$/;"	f	signature:(const RPoint &p1, const RPoint &p2)
operator !=	/home/viper/projects/RBit/rrect.h	/^    friend bool operator!= (const RRect&, const RRect&);$/;"	p	class:RRect	access:friend	signature:(const RRect&, const RRect&)
operator !=	/home/viper/projects/RBit/rrect.h	/^inline bool operator!= (const RRect& lh, const RRect& rh)$/;"	f	signature:(const RRect& lh, const RRect& rh)
operator !=	/home/viper/projects/RBit/rsize.h	/^    friend inline bool operator!= (const RSize &s1, const RSize &s2);$/;"	p	class:RSize	access:friend	signature:(const RSize &s1, const RSize &s2)
operator !=	/home/viper/projects/RBit/rsize.h	/^inline bool operator!= (const RSize &s1, const RSize &s2)$/;"	f	signature:(const RSize &s1, const RSize &s2)
operator &	/home/viper/projects/RBit/rrect.h	/^    RRect operator& (const RRect& r) const;$/;"	p	class:RRect	access:public	signature:(const RRect& r) const
operator &	/home/viper/projects/RBit/rrect.h	/^inline RRect RRect::operator& (const RRect& r) const$/;"	f	class:RRect	signature:(const RRect& r) const
operator &=	/home/viper/projects/RBit/rrect.h	/^    RRect& operator&= (const RRect& r); $/;"	p	class:RRect	access:public	signature:(const RRect& r)
operator &=	/home/viper/projects/RBit/rrect.h	/^inline RRect& RRect::operator&= (const RRect& r)$/;"	f	class:RRect	signature:(const RRect& r)
operator ()	/home/viper/projects/RBit/rfont.h	/^    void operator()(TTF_Font* ptr) const$/;"	f	class:RSharedPtrDeleter	access:public	signature:(TTF_Font* ptr) const
operator ()	/home/viper/projects/RBit/rlibrary.h	/^    void operator()(void* ptr) const$/;"	f	struct:RLibraryDeleter	access:public	signature:(void* ptr) const
operator ()	/home/viper/projects/RBit/rsharedptr.h	/^    void operator()(T* ptr) const$/;"	f	class:RSharedPtrDeleter	access:public	signature:(T* ptr) const
operator ()	/home/viper/projects/RBit/rsurface.h	/^    void operator()(SDL_Surface* ptr) const$/;"	f	class:RSharedPtrDeleter	access:public	signature:(SDL_Surface* ptr) const
operator ()	/home/viper/projects/RBit/rwidget.h	/^        bool operator() (const char* t1, const char* t2) const$/;"	f	struct:RMetaRegistrator::StrCmp	access:public	signature:(const char* t1, const char* t2) const
operator ()	/home/viper/projects/RBit/rwidgetdefaultsettings.h	/^        bool operator() (const char* t1, const char* t2) const$/;"	f	struct:RWidgetDefaultSettingsHelper::StrCmp	access:public	signature:(const char* t1, const char* t2) const
operator *	/home/viper/projects/RBit/rcolormanager.cpp	/^RBlendingMap& RColorManager::RBlendingMapPtr::operator* () const$/;"	f	class:RColorManager::RBlendingMapPtr	signature:() const
operator *	/home/viper/projects/RBit/rcolormanager.h	/^        RBlendingMap& operator* () const;   $/;"	p	class:RColorManager::RBlendingMapPtr	access:public	signature:() const
operator *	/home/viper/projects/RBit/rpoint.h	/^    friend inline const RPoint operator* (const RPoint&, double);    $/;"	p	class:RPoint	access:friend	signature:(const RPoint&, double)
operator *	/home/viper/projects/RBit/rpoint.h	/^    friend inline const RPoint operator* (const RPoint&, int);$/;"	p	class:RPoint	access:friend	signature:(const RPoint&, int)
operator *	/home/viper/projects/RBit/rpoint.h	/^    friend inline const RPoint operator* (int, const RPoint&);$/;"	p	class:RPoint	access:friend	signature:(int, const RPoint&)
operator *	/home/viper/projects/RBit/rpoint.h	/^inline const RPoint operator* (const RPoint &p, int i)$/;"	f	signature:(const RPoint &p, int i)
operator *	/home/viper/projects/RBit/rpoint.h	/^inline const RPoint operator* (int i, const RPoint &p)$/;"	f	signature:(int i, const RPoint &p)
operator *	/home/viper/projects/RBit/rsharedptr.h	/^    reference_type operator*() const$/;"	f	class:RSharedPtr	access:public	signature:() const
operator *=	/home/viper/projects/RBit/rpoint.h	/^    RPoint& operator*= (int i);    $/;"	p	class:RPoint	access:public	signature:(int i)
operator *=	/home/viper/projects/RBit/rpoint.h	/^inline RPoint &RPoint::operator*= (int i)$/;"	f	class:RPoint	signature:(int i)
operator +	/home/viper/projects/RBit/rpoint.h	/^    friend inline const RPoint operator+ (const RPoint&, const RPoint&);$/;"	p	class:RPoint	access:friend	signature:(const RPoint&, const RPoint&)
operator +	/home/viper/projects/RBit/rpoint.h	/^inline const RPoint operator+ (const RPoint &p1, const RPoint &p2)$/;"	f	signature:(const RPoint &p1, const RPoint &p2)
operator +	/home/viper/projects/RBit/rsize.h	/^    friend inline const RSize operator+ (const RSize& s1, const RSize& s2);$/;"	p	class:RSize	access:friend	signature:(const RSize& s1, const RSize& s2)
operator +	/home/viper/projects/RBit/rsize.h	/^inline const RSize operator+ (const RSize& s1, const RSize& s2)$/;"	f	signature:(const RSize& s1, const RSize& s2)
operator +=	/home/viper/projects/RBit/rpoint.h	/^    RPoint& operator+= (const RPoint &p);$/;"	p	class:RPoint	access:public	signature:(const RPoint &p)
operator +=	/home/viper/projects/RBit/rpoint.h	/^inline RPoint &RPoint::operator+= (const RPoint &p)$/;"	f	class:RPoint	signature:(const RPoint &p)
operator +=	/home/viper/projects/RBit/rsize.h	/^    RSize &operator+= (const RSize &s);$/;"	p	class:RSize	access:public	signature:(const RSize &s)
operator +=	/home/viper/projects/RBit/rsize.h	/^inline RSize& RSize::operator+= (const RSize &s)$/;"	f	class:RSize	signature:(const RSize &s)
operator -	/home/viper/projects/RBit/rpoint.h	/^    friend inline const RPoint operator- (const RPoint&);$/;"	p	class:RPoint	access:friend	signature:(const RPoint&)
operator -	/home/viper/projects/RBit/rpoint.h	/^    friend inline const RPoint operator- (const RPoint&, const RPoint&);$/;"	p	class:RPoint	access:friend	signature:(const RPoint&, const RPoint&)
operator -	/home/viper/projects/RBit/rpoint.h	/^inline const RPoint operator- (const RPoint &p)$/;"	f	signature:(const RPoint &p)
operator -	/home/viper/projects/RBit/rpoint.h	/^inline const RPoint operator- (const RPoint &p1, const RPoint &p2)$/;"	f	signature:(const RPoint &p1, const RPoint &p2)
operator -	/home/viper/projects/RBit/rsize.h	/^    friend inline const RSize operator- (const RSize &s1, const RSize &s2);	$/;"	p	class:RSize	access:friend	signature:(const RSize &s1, const RSize &s2)
operator -	/home/viper/projects/RBit/rsize.h	/^inline const RSize operator- (const RSize &s1, const RSize &s2)$/;"	f	signature:(const RSize &s1, const RSize &s2)
operator -=	/home/viper/projects/RBit/rpoint.h	/^    RPoint& operator-= (const RPoint &p);$/;"	p	class:RPoint	access:public	signature:(const RPoint &p)
operator -=	/home/viper/projects/RBit/rpoint.h	/^inline RPoint &RPoint::operator-= (const RPoint &p)$/;"	f	class:RPoint	signature:(const RPoint &p)
operator -=	/home/viper/projects/RBit/rsize.h	/^    RSize &operator-= (const RSize &s);$/;"	p	class:RSize	access:public	signature:(const RSize &s)
operator -=	/home/viper/projects/RBit/rsize.h	/^inline RSize& RSize::operator-= (const RSize &s)$/;"	f	class:RSize	signature:(const RSize &s)
operator ->	/home/viper/projects/RBit/rcolormanager.cpp	/^RBlendingMap* RColorManager::RBlendingMapPtr::operator->() const$/;"	f	class:RColorManager::RBlendingMapPtr	signature:() const
operator ->	/home/viper/projects/RBit/rcolormanager.h	/^        RBlendingMap* operator->() const;    $/;"	p	class:RColorManager::RBlendingMapPtr	access:public	signature:() const
operator ->	/home/viper/projects/RBit/rsharedptr.h	/^    T* operator->() const$/;"	f	class:RSharedPtr	access:public	signature:() const
operator /	/home/viper/projects/RBit/rpoint.h	/^    friend inline const RPoint operator\/ (const RPoint&, double);$/;"	p	class:RPoint	access:friend	signature:(const RPoint&, double)
operator /	/home/viper/projects/RBit/rpoint.h	/^    friend inline const RPoint operator\/ (const RPoint&, int);$/;"	p	class:RPoint	access:friend	signature:(const RPoint&, int)
operator /	/home/viper/projects/RBit/rpoint.h	/^inline const RPoint operator\/ (const RPoint &p, double i)$/;"	f	signature:(const RPoint &p, double i)
operator /	/home/viper/projects/RBit/rpoint.h	/^inline const RPoint operator\/ (const RPoint &p, int i)$/;"	f	signature:(const RPoint &p, int i)
operator /=	/home/viper/projects/RBit/rpoint.h	/^    RPoint& operator\/= (int i);    $/;"	p	class:RPoint	access:public	signature:(int i)
operator /=	/home/viper/projects/RBit/rpoint.h	/^inline RPoint &RPoint::operator\/= (int i)$/;"	f	class:RPoint	signature:(int i)
operator =	/home/viper/projects/RBit/captionwidget.h	/^    CCaptionWidget& operator=(const CCaptionWidget&);  $/;"	p	class:CCaptionWidget	access:private	signature:(const CCaptionWidget&)
operator =	/home/viper/projects/RBit/rapplication.h	/^    RApplication& operator=(const RApplication&);$/;"	p	class:RApplication	access:private	signature:(const RApplication&)
operator =	/home/viper/projects/RBit/rarraycontainer.h	/^	RArrayContainer& operator=(const RArrayContainer&);	$/;"	p	class:RArrayContainer	access:public	signature:(const RArrayContainer&)
operator =	/home/viper/projects/RBit/rarraycontainer.h	/^inline RArrayContainer<T>& RArrayContainer<T>::operator=(const RArrayContainer<T>& c)$/;"	f	class:RArrayContainer	signature:(const RArrayContainer<T>& c)
operator =	/home/viper/projects/RBit/rbutton.h	/^    RButton& operator=(const RButton&);$/;"	p	class:RButton	access:private	signature:(const RButton&)
operator =	/home/viper/projects/RBit/rcheckbox.h	/^	RCheckBox& operator=(const RCheckBox&);$/;"	p	class:RCheckBox	access:private	signature:(const RCheckBox&)
operator =	/home/viper/projects/RBit/rcolor.h	/^	RColor& operator=(const RColor& c);$/;"	p	class:RColor	access:public	signature:(const RColor& c)
operator =	/home/viper/projects/RBit/rcolor.h	/^	RColor& operator=(const SDL_Color& c);$/;"	p	class:RColor	access:public	signature:(const SDL_Color& c)
operator =	/home/viper/projects/RBit/rcolor.h	/^inline RColor& RColor::operator=(const RColor& c)$/;"	f	class:RColor	signature:(const RColor& c)
operator =	/home/viper/projects/RBit/rcolor.h	/^inline RColor& RColor::operator=(const SDL_Color& c)$/;"	f	class:RColor	signature:(const SDL_Color& c)
operator =	/home/viper/projects/RBit/rcolormanager.cpp	/^RColorManager::RBlendingMapPtr& RColorManager::RBlendingMapPtr::operator= (RBlendingMap* m)$/;"	f	class:RColorManager::RBlendingMapPtr	signature:(RBlendingMap* m)
operator =	/home/viper/projects/RBit/rcolormanager.h	/^        RBlendingMapPtr& operator= (RBlendingMap* m);   $/;"	p	class:RColorManager::RBlendingMapPtr	access:public	signature:(RBlendingMap* m)
operator =	/home/viper/projects/RBit/rcolormanager.h	/^    RColorManager& operator=(const RColorManager&);$/;"	p	class:RColorManager	access:private	signature:(const RColorManager&)
operator =	/home/viper/projects/RBit/rdialog.h	/^	RDialog& operator=(const RDialog&);	$/;"	p	class:RDialog	access:private	signature:(const RDialog&)
operator =	/home/viper/projects/RBit/rdoubleclickdetector.h	/^    RDoubleClickDetector& operator=(const RDoubleClickDetector&); \/\/ to avoid warning$/;"	p	class:RDoubleClickDetector	access:private	signature:(const RDoubleClickDetector&)
operator =	/home/viper/projects/RBit/reditbox.h	/^    REditBox& operator=(const REditBox&);$/;"	p	class:REditBox	access:private	signature:(const REditBox&)
operator =	/home/viper/projects/RBit/rfont.h	/^    RFont& operator= (TTF_Font* ptr) \/\/ obsolete, exists for compatibility$/;"	f	class:RFont	access:public	signature:(TTF_Font* ptr)
operator =	/home/viper/projects/RBit/rgridview.h	/^    RGridView& operator=(const RGridView&);$/;"	p	class:RGridView	access:private	signature:(const RGridView&)
operator =	/home/viper/projects/RBit/rheaderview.h	/^    RHeaderView& operator=(const RHeaderView&);$/;"	p	class:RHeaderView	access:private	signature:(const RHeaderView&)
operator =	/home/viper/projects/RBit/rlabel.h	/^    RLabel& operator=(const RLabel&);$/;"	p	class:RLabel	access:private	signature:(const RLabel&)
operator =	/home/viper/projects/RBit/rlibrary.h	/^    RLibrary& operator= (void* ptr) \/\/ obsolete, exists for compatibility$/;"	f	class:RLibrary	access:public	signature:(void* ptr)
operator =	/home/viper/projects/RBit/rmessagebox.h	/^    RMessageBox& operator=(const RMessageBox&);$/;"	p	class:RMessageBox	access:private	signature:(const RMessageBox&)
operator =	/home/viper/projects/RBit/rmultilinelabel.h	/^	RMultilineLabel& operator=(const RMultilineLabel&);$/;"	p	class:RMultilineLabel	access:private	signature:(const RMultilineLabel&)
operator =	/home/viper/projects/RBit/rpalette.cpp	/^RPalette& RPalette::operator=(const RPalette& p)$/;"	f	class:RPalette	signature:(const RPalette& p)
operator =	/home/viper/projects/RBit/rpalette.h	/^    RPalette& operator=(const RPalette& palette);$/;"	p	class:RPalette	access:public	signature:(const RPalette& palette)
operator =	/home/viper/projects/RBit/rrandomgenerator.h	/^    RRandomGenerator& operator=(const RRandomGenerator&);$/;"	p	class:RRandomGenerator	access:private	signature:(const RRandomGenerator&)
operator =	/home/viper/projects/RBit/rscrollarea.h	/^    RScrollArea& operator=(const RScrollArea&);$/;"	p	class:RScrollArea	access:private	signature:(const RScrollArea&)
operator =	/home/viper/projects/RBit/rscrollarea.h	/^    RScrollAreaBase& operator=(const RScrollAreaBase&);$/;"	p	class:RScrollAreaBase	access:private	signature:(const RScrollAreaBase&)
operator =	/home/viper/projects/RBit/rscrollbar.h	/^    RScrollBar& operator=(const RScrollBar&);$/;"	p	class:RScrollBar	access:private	signature:(const RScrollBar&)
operator =	/home/viper/projects/RBit/rscrollwidgetarea.h	/^    RScrollWidgetArea& operator=(const RScrollWidgetArea&);$/;"	p	class:RScrollWidgetArea	access:private	signature:(const RScrollWidgetArea&)
operator =	/home/viper/projects/RBit/rscrollwidgetarea.h	/^    RScrollWidgetAreaBase& operator=(const RScrollWidgetAreaBase&);$/;"	p	class:RScrollWidgetAreaBase	access:private	signature:(const RScrollWidgetAreaBase&)
operator =	/home/viper/projects/RBit/rscrollwidgetarea.h	/^    ScrollWidget<T>& operator=(const ScrollWidget<T>&);$/;"	p	class:ScrollWidget	access:private	signature:(const ScrollWidget<T>&)
operator =	/home/viper/projects/RBit/rsharedptr.h	/^        SharedCounter& operator=(const SharedCounter& rh)$/;"	f	class:RSharedPtr::SharedCounter	access:public	signature:(const SharedCounter& rh)
operator =	/home/viper/projects/RBit/rsharedptr.h	/^        SharedCounterHelperBase& operator=(const SharedCounterHelperBase&);$/;"	p	class:RSharedPtr::SharedCounterHelperBase	access:private	signature:(const SharedCounterHelperBase&)
operator =	/home/viper/projects/RBit/rsimplegridmodel.h	/^        Item& operator=(const Item&);$/;"	p	class:RSimpleGridModel::Item	access:public	signature:(const Item&)
operator =	/home/viper/projects/RBit/rsimplegridmodel.h	/^        inline ItemAutoPtr& operator=(const ItemAutoPtr& i)$/;"	f	struct:RSimpleGridModel::ItemAutoPtr	access:public	signature:(const ItemAutoPtr& i)
operator =	/home/viper/projects/RBit/rsimplegridmodel.h	/^inline RSimpleGridModel::Item& RSimpleGridModel::Item::operator=(const RSimpleGridModel::Item& i)$/;"	f	class:RSimpleGridModel::Item	signature:(const RSimpleGridModel::Item& i)
operator =	/home/viper/projects/RBit/rsimpleheadermodel.h	/^        Item& operator=(const Item&);        $/;"	p	class:RSimpleHeaderModel::Item	access:public	signature:(const Item&)
operator =	/home/viper/projects/RBit/rsimpleheadermodel.h	/^        inline ItemAutoPtr& operator=(const ItemAutoPtr& i)$/;"	f	struct:RSimpleHeaderModel::ItemAutoPtr	access:public	signature:(const ItemAutoPtr& i)
operator =	/home/viper/projects/RBit/rsimpleheadermodel.h	/^inline RSimpleHeaderModel::Item& RSimpleHeaderModel::Item::operator=(const RSimpleHeaderModel::Item& i)$/;"	f	class:RSimpleHeaderModel::Item	signature:(const RSimpleHeaderModel::Item& i)
operator =	/home/viper/projects/RBit/rstring.h	/^	RString& operator= (const RString& a);$/;"	p	class:RString	access:public	signature:(const RString& a)
operator =	/home/viper/projects/RBit/rstring.h	/^	RString& operator= (const char* str);$/;"	p	class:RString	access:public	signature:(const char* str)
operator =	/home/viper/projects/RBit/rstring.h	/^inline RString& RString::operator=(const RString& str)$/;"	f	class:RString	signature:(const RString& str)
operator =	/home/viper/projects/RBit/rstring.h	/^inline RString& RString::operator=(const char* str)$/;"	f	class:RString	signature:(const char* str)
operator =	/home/viper/projects/RBit/rsurface.h	/^    RSurface& operator= (SDL_Surface* ptr)  \/\/ obsolete, exists for compatibility$/;"	f	class:RSurface	access:public	signature:(SDL_Surface* ptr)
operator =	/home/viper/projects/RBit/rwidget.h	/^    RMetaRegistrator& operator=(const RMetaRegistrator&);$/;"	p	class:RMetaRegistrator	access:private	signature:(const RMetaRegistrator&)
operator =	/home/viper/projects/RBit/rwidget.h	/^    RWidget& operator=(const RWidget&);$/;"	p	class:RWidget	access:private	signature:(const RWidget&)
operator =	/home/viper/projects/RBit/rwidgetdefaultsettings.h	/^    RWidgetDefaultSettingsHelper& operator=(const RWidgetDefaultSettingsHelper&);$/;"	p	class:RWidgetDefaultSettingsHelper	access:private	signature:(const RWidgetDefaultSettingsHelper&)
operator =	/home/viper/projects/RBit/rwindow.h	/^    RWindow& operator=(const RWindow&);$/;"	p	class:RWindow	access:private	signature:(const RWindow&)
operator ==	/home/viper/projects/RBit/rcolor.h	/^	bool operator==(const RColor& c);$/;"	p	class:RColor	access:public	signature:(const RColor& c)
operator ==	/home/viper/projects/RBit/rcolor.h	/^inline bool RColor::operator==(const RColor& c)$/;"	f	class:RColor	signature:(const RColor& c)
operator ==	/home/viper/projects/RBit/rpalette.cpp	/^bool RPalette::operator==(const RPalette& p) const$/;"	f	class:RPalette	signature:(const RPalette& p) const
operator ==	/home/viper/projects/RBit/rpalette.h	/^    bool operator==(const RPalette& p) const;$/;"	p	class:RPalette	access:public	signature:(const RPalette& p) const
operator ==	/home/viper/projects/RBit/rpoint.h	/^    friend inline bool operator== (const RPoint &, const RPoint&);$/;"	p	class:RPoint	access:friend	signature:(const RPoint &, const RPoint&)
operator ==	/home/viper/projects/RBit/rpoint.h	/^inline bool operator== (const RPoint &p1, const RPoint &p2)$/;"	f	signature:(const RPoint &p1, const RPoint &p2)
operator ==	/home/viper/projects/RBit/rrect.h	/^    friend bool operator== (const RRect&, const RRect&);$/;"	p	class:RRect	access:friend	signature:(const RRect&, const RRect&)
operator ==	/home/viper/projects/RBit/rrect.h	/^inline bool operator== (const RRect& lh, const RRect& rh)$/;"	f	signature:(const RRect& lh, const RRect& rh)
operator ==	/home/viper/projects/RBit/rsimplegridmodel.h	/^        inline bool operator==(const ItemAutoPtr& i) const $/;"	f	struct:RSimpleGridModel::ItemAutoPtr	access:public	signature:(const ItemAutoPtr& i) const
operator ==	/home/viper/projects/RBit/rsimpleheadermodel.h	/^        inline bool operator==(const ItemAutoPtr& i) const $/;"	f	struct:RSimpleHeaderModel::ItemAutoPtr	access:public	signature:(const ItemAutoPtr& i) const
operator ==	/home/viper/projects/RBit/rsize.h	/^    friend inline bool operator== (const RSize& s1, const RSize& s2);$/;"	p	class:RSize	access:friend	signature:(const RSize& s1, const RSize& s2)
operator ==	/home/viper/projects/RBit/rsize.h	/^inline bool operator== (const RSize& s1, const RSize& s2)$/;"	f	signature:(const RSize& s1, const RSize& s2)
operator >	/home/viper/projects/RBit/rheaderview.h	/^        inline bool operator>(Sint32 position) const $/;"	f	struct:RHeaderView::HeaderSection	access:public	signature:(Sint32 position) const
operator Item*	/home/viper/projects/RBit/rsimplegridmodel.h	/^        inline operator Item*() $/;"	f	struct:RSimpleGridModel::ItemAutoPtr	access:public	signature:()
operator Item*	/home/viper/projects/RBit/rsimpleheadermodel.h	/^        inline operator Item*() $/;"	f	struct:RSimpleHeaderModel::ItemAutoPtr	access:public	signature:()
operator bool	/home/viper/projects/RBit/rcolormanager.cpp	/^RColorManager::RBlendingMapPtr::operator bool() const$/;"	f	class:RColorManager::RBlendingMapPtr	signature:() const
operator bool	/home/viper/projects/RBit/rcolormanager.h	/^        operator bool () const;$/;"	p	class:RColorManager::RBlendingMapPtr	access:public	signature:() const
operator bool	/home/viper/projects/RBit/rsharedptr.h	/^    operator bool() const$/;"	f	class:RSharedPtr	access:public	signature:() const
operator bool	/home/viper/projects/RBit/rsimplegridmodel.h	/^        inline operator bool() const $/;"	f	struct:RSimpleGridModel::ItemAutoPtr	access:public	signature:() const
operator bool	/home/viper/projects/RBit/rsimpleheadermodel.h	/^        inline operator bool() const $/;"	f	struct:RSimpleHeaderModel::ItemAutoPtr	access:public	signature:() const
operator char*	/home/viper/projects/RBit/rstring.h	/^	operator char*();$/;"	p	class:RString	access:public	signature:()
operator char*	/home/viper/projects/RBit/rstring.h	/^inline RString::operator char*()$/;"	f	class:RString	signature:()
operator const Item*	/home/viper/projects/RBit/rsimplegridmodel.h	/^        inline operator const Item*() const $/;"	f	struct:RSimpleGridModel::ItemAutoPtr	access:public	signature:() const
operator const Item*	/home/viper/projects/RBit/rsimpleheadermodel.h	/^        inline operator const Item*() const $/;"	f	struct:RSimpleHeaderModel::ItemAutoPtr	access:public	signature:() const
operator const char*	/home/viper/projects/RBit/rstring.h	/^	operator const char*() const;$/;"	p	class:RString	access:public	signature:() const
operator const char*	/home/viper/projects/RBit/rstring.h	/^inline RString::operator const char*() const$/;"	f	class:RString	signature:() const
operator |	/home/viper/projects/RBit/rrect.h	/^    RRect operator| (const RRect& r) const;$/;"	p	class:RRect	access:public	signature:(const RRect& r) const
operator |	/home/viper/projects/RBit/rrect.h	/^inline RRect RRect::operator| (const RRect& r) const$/;"	f	class:RRect	signature:(const RRect& r) const
operator |=	/home/viper/projects/RBit/rrect.h	/^    RRect& operator|= (const RRect& r);$/;"	p	class:RRect	access:public	signature:(const RRect& r)
operator |=	/home/viper/projects/RBit/rrect.h	/^inline RRect& RRect::operator|= (const RRect& r)$/;"	f	class:RRect	signature:(const RRect& r)
orientation	/home/viper/projects/RBit/rheaderview.h	/^    RBit::Orientation orientation() const;$/;"	p	class:RHeaderView	access:public	signature:() const
orientation	/home/viper/projects/RBit/rheaderview.h	/^inline RBit::Orientation RHeaderView::orientation() const$/;"	f	class:RHeaderView	signature:() const
orientation	/home/viper/projects/RBit/rscrollbar.h	/^    RBit::Orientation orientation() const;$/;"	p	class:RScrollBar	access:public	signature:() const
orientation	/home/viper/projects/RBit/rscrollbar.h	/^inline RBit::Orientation RScrollBar::orientation() const$/;"	f	class:RScrollBar	signature:() const
pCaption	/home/viper/projects/RBit/rmessagebox.h	/^	CCaptionWidget *pCaption;	\/\/Á‡„ÎÓ‚ÓÍ ÓÍÌ‡$/;"	m	class:RMessageBox	access:private
pFirstWnd	/home/viper/projects/RBit/rsplitter.cpp	/^	RWidget *pFirstWnd;$/;"	m	class:RSplitterPrivate	file:	access:public
pFocus	/home/viper/projects/RBit/rmessagebox.h	/^	RWidget*	pFocus;			\/\/ÍÓÌÚÓÎ, ÍÓÚÓÓÏÛ ·Û‰ÂÚ ‚ÓÁ‚‡˘ÂÌ ÙÓÍÛÒ ÔÓÒÎÂ Á‡Í˚ÚËˇ ‰Ë‡ÎÓ„‡$/;"	m	class:RMessageBox	access:private
pSecondWnd	/home/viper/projects/RBit/rsplitter.cpp	/^	RWidget *pSecondWnd;$/;"	m	class:RSplitterPrivate	file:	access:public
pTexture	/home/viper/projects/RBit/rsdlttf.cpp	/^	GLuint *pTexture;$/;"	m	struct:_TTF_Font	file:	access:public
pageStep	/home/viper/projects/RBit/rscrollbar.h	/^    Uint32 pageStep() const;$/;"	p	class:RScrollBar	access:public	signature:() const
pageStep	/home/viper/projects/RBit/rscrollbar.h	/^inline Uint32 RScrollBar::pageStep() const$/;"	f	class:RScrollBar	signature:() const
pal	/home/viper/projects/RBit/rwidgetdefaultsettings.h	/^        RPalette pal;$/;"	m	struct:RWidgetDefaultSettingsHelper::Internal	access:public
palette	/home/viper/projects/RBit/rapplication.cpp	/^const RPalette& RApplication::palette() const$/;"	f	class:RApplication	signature:() const
palette	/home/viper/projects/RBit/rapplication.h	/^    const RPalette& palette() const;        $/;"	p	class:RApplication	access:public	signature:() const
palette	/home/viper/projects/RBit/rwidget.cpp	/^const RPalette& RWidget::palette() const$/;"	f	class:RWidget	signature:() const
palette	/home/viper/projects/RBit/rwidget.h	/^    const RPalette& palette() const;$/;"	p	class:RWidget	access:public	signature:() const
palette	/home/viper/projects/RBit/rwidgetdefaultsettings.cpp	/^RPalette RWidgetDefaultSettingsHelper::palette(const RWidget* w)$/;"	f	class:RWidgetDefaultSettingsHelper	signature:(const RWidget* w)
palette	/home/viper/projects/RBit/rwidgetdefaultsettings.cpp	/^RPalette RWidgetDefaultSettingsHelper::palette(const char* className)$/;"	f	class:RWidgetDefaultSettingsHelper	signature:(const char* className)
palette	/home/viper/projects/RBit/rwidgetdefaultsettings.h	/^    RPalette palette(const RWidget* w);    $/;"	p	class:RWidgetDefaultSettingsHelper	access:public	signature:(const RWidget* w)
palette	/home/viper/projects/RBit/rwidgetdefaultsettings.h	/^    RPalette palette(const char* className);$/;"	p	class:RWidgetDefaultSettingsHelper	access:public	signature:(const char* className)
palette	/home/viper/projects/RBit/rwidgetdefaultsettings.h	/^    static RPalette palette()$/;"	f	class:RWidgetDefaultSettings	access:public	signature:()
parentWidget	/home/viper/projects/RBit/rwidget.h	/^    RWidget* parentWidget() const;$/;"	p	class:RWidget	access:public	signature:() const
parentWidget	/home/viper/projects/RBit/rwidget.h	/^inline RWidget* RWidget::parentWidget() const$/;"	f	class:RWidget	signature:() const
pixelPosToRangeValue	/home/viper/projects/RBit/rscrollbar.cpp	/^Sint32 RScrollBar::pixelPosToRangeValue(Sint16 pos) const$/;"	f	class:RScrollBar	signature:(Sint16 pos) const
pixelPosToRangeValue	/home/viper/projects/RBit/rscrollbar.h	/^    Sint32 pixelPosToRangeValue(Sint16 pos) const;$/;"	p	class:RScrollBar	access:protected	signature:(Sint16 pos) const
pixmap	/home/viper/projects/RBit/rsdlttf.cpp	/^	FT_Bitmap pixmap;$/;"	m	struct:cached_glyph	file:	access:public
pos	/home/viper/projects/RBit/rdrawutil.cpp	/^    int pos;$/;"	m	struct:RTextLine	file:	access:public
pos	/home/viper/projects/RBit/rwidget.h	/^    RPoint pos() const;$/;"	p	class:RWidget	access:public	signature:() const
pos	/home/viper/projects/RBit/rwidget.h	/^inline RPoint RWidget::pos() const$/;"	f	class:RWidget	signature:() const
posToInternalX	/home/viper/projects/RBit/reditbox.cpp	/^Sint32 REditBox::posToInternalX(Sint32 pos) const$/;"	f	class:REditBox	signature:(Sint32 pos) const
posToInternalX	/home/viper/projects/RBit/reditbox.h	/^    Sint32 posToInternalX(Sint32 pos) const;$/;"	p	class:REditBox	access:private	signature:(Sint32 pos) const
position	/home/viper/projects/RBit/rheaderview.h	/^        Sint32 position;   $/;"	m	struct:RHeaderView::HeaderSection	access:public
powerOfTwo	/home/viper/projects/RBit/rimage.cpp	/^int powerOfTwo(int input)$/;"	f	namespace:__anon1	signature:(int input)
powerOfTwo	/home/viper/projects/RBit/rsdlttf.cpp	/^int powerOfTwo(int input)$/;"	f	namespace:__anon3	signature:(int input)
pressed	/home/viper/projects/RBit/rbutton.cpp	/^void RButton::pressed()$/;"	f	class:RButton	signature:()
pressed	/home/viper/projects/RBit/rbutton.h	/^    virtual void pressed();$/;"	p	class:RButton	access:protected	signature:()
pressed	/home/viper/projects/RBit/rgridview.h	/^    virtual void pressed(Sint32 row, Sint32 column)$/;"	f	class:RGridViewObserver	access:public	signature:(Sint32 row, Sint32 column)
prev	/home/viper/projects/RBit/rsimplelist.h	/^	inline RSimpleListNodeBase* prev() const$/;"	f	class:RSimpleListNodeBase	access:protected	signature:() const
prev	/home/viper/projects/RBit/rsimplelist.h	/^	inline T* prev() const$/;"	f	class:RSimpleCircularListNode	access:protected	signature:() const
prev	/home/viper/projects/RBit/rsimplelist.h	/^	inline T* prev() const$/;"	f	class:RSimpleListNode	access:protected	signature:() const
prevSiblingWidget	/home/viper/projects/RBit/rwidget.h	/^    RWidget* prevSiblingWidget() const;$/;"	p	class:RWidget	access:public	signature:() const
prevSiblingWidget	/home/viper/projects/RBit/rwidget.h	/^inline RWidget* RWidget::prevSiblingWidget() const$/;"	f	class:RWidget	signature:() const
prevTabWidget	/home/viper/projects/RBit/rwidget.h	/^    RWidget* prevTabWidget() const;$/;"	p	class:RWidget	access:public	signature:() const
prevTabWidget	/home/viper/projects/RBit/rwidget.h	/^inline RWidget* RWidget::prevTabWidget() const$/;"	f	class:RWidget	signature:() const
processMouseMotion	/home/viper/projects/RBit/rapplication.cpp	/^void RApplication::processMouseMotion(RWidget* w, const SDL_MouseMotionEvent& m, uint trackersCount)$/;"	f	class:RApplication	signature:(RWidget* w, const SDL_MouseMotionEvent& m, uint trackersCount)
processMouseMotion	/home/viper/projects/RBit/rapplication.h	/^    void processMouseMotion(RWidget* w, const SDL_MouseMotionEvent& m, uint trackersCount);    $/;"	p	class:RApplication	access:protected	signature:(RWidget* w, const SDL_MouseMotionEvent& m, uint trackersCount)
processPendingEvents	/home/viper/projects/RBit/rapplication.cpp	/^void RApplication::processPendingEvents()$/;"	f	class:RApplication	signature:()
processPendingEvents	/home/viper/projects/RBit/rapplication.h	/^    void processPendingEvents();$/;"	p	class:RApplication	access:public	signature:()
propagatePaletteChange	/home/viper/projects/RBit/rwidget.cpp	/^void RWidget::propagatePaletteChange()$/;"	f	class:RWidget	signature:()
propagatePaletteChange	/home/viper/projects/RBit/rwidget.h	/^    void propagatePaletteChange();$/;"	p	class:RWidget	access:private	signature:()
propogateUpdatePendingFlag	/home/viper/projects/RBit/rwidget.cpp	/^void RWidget::propogateUpdatePendingFlag(const RRect& r, bool upper)$/;"	f	class:RWidget	signature:(const RRect& r, bool upper)
propogateUpdatePendingFlag	/home/viper/projects/RBit/rwidget.h	/^    void propogateUpdatePendingFlag(const RRect& r, bool upper);$/;"	p	class:RWidget	access:private	signature:(const RRect& r, bool upper)
pushBack	/home/viper/projects/RBit/rsimplelist.h	/^    inline Contents* pushBack(Node* node)$/;"	f	class:RSimpleList	access:public	signature:(Node* node)
pushFront	/home/viper/projects/RBit/rsimplelist.h	/^    inline Contents* pushFront(Node* node)$/;"	f	class:RSimpleList	access:public	signature:(Node* node)
q	/home/viper/projects/RBit/rsplitter.cpp	/^	RSplitter* q;$/;"	m	class:RSplitterPrivate	file:	access:public
quit	/home/viper/projects/RBit/rapplication.h	/^    void quit();$/;"	p	class:RApplication	access:public	signature:()
quit	/home/viper/projects/RBit/rapplication.h	/^inline void RApplication::quit()$/;"	f	class:RApplication	signature:()
rAbs	/home/viper/projects/RBit/rutils.h	/^inline T rAbs(T a)$/;"	f	signature:(T a)
rApp	/home/viper/projects/RBit/rapplication.cpp	/^RApplication* rApp = 0;$/;"	v
rClipHLine	/home/viper/projects/RBit/rdrawutil.cpp	/^    bool rClipHLine(RPoint& p, Uint16& l, const RRect& clip)$/;"	f	namespace:__anon8	signature:(RPoint& p, Uint16& l, const RRect& clip)
rClipVLine	/home/viper/projects/RBit/rdrawutil.cpp	/^    bool rClipVLine(RPoint& p, Uint16& l, const RRect& clip)$/;"	f	namespace:__anon11	signature:(RPoint& p, Uint16& l, const RRect& clip)
rDrawDashedHLine	/home/viper/projects/RBit/rdrawutil.cpp	/^void rDrawDashedHLine(SDL_Surface* dst, const RPoint& p, Uint16 len, Uint32 color)$/;"	f	namespace:__anon10	signature:(SDL_Surface* dst, const RPoint& p, Uint16 len, Uint32 color)
rDrawDashedHLine	/home/viper/projects/RBit/rdrawutil.cpp	/^void rDrawDashedHLine(SDL_Surface* dst, const RPoint& p, Uint16 len, const RRect& clip, const RColor& c)$/;"	f	signature:(SDL_Surface* dst, const RPoint& p, Uint16 len, const RRect& clip, const RColor& c)
rDrawDashedHLine	/home/viper/projects/RBit/rdrawutil.h	/^void RBIT_CORE_EXPORT rDrawDashedHLine(SDL_Surface* dst, const RPoint& p, Uint16 len, const RRect& clip, const RColor& color);$/;"	p	signature:(SDL_Surface* dst, const RPoint& p, Uint16 len, const RRect& clip, const RColor& color)
rDrawDashedRect	/home/viper/projects/RBit/rdrawutil.cpp	/^void rDrawDashedRect(SDL_Surface* dst, const RRect& rect, Uint32 color)$/;"	f	namespace:__anon16	signature:(SDL_Surface* dst, const RRect& rect, Uint32 color)
rDrawDashedRect	/home/viper/projects/RBit/rdrawutil.cpp	/^void rDrawDashedRect(SDL_Surface* dst, const RRect& rect, const RRect& clip, const RColor& c)$/;"	f	signature:(SDL_Surface* dst, const RRect& rect, const RRect& clip, const RColor& c)
rDrawDashedRect	/home/viper/projects/RBit/rdrawutil.h	/^void RBIT_CORE_EXPORT rDrawDashedRect(SDL_Surface* dst, const RRect& rect, const RRect& clip, const RColor& color);$/;"	p	signature:(SDL_Surface* dst, const RRect& rect, const RRect& clip, const RColor& color)
rDrawDashedVLine	/home/viper/projects/RBit/rdrawutil.cpp	/^void rDrawDashedVLine(SDL_Surface* dst, const RPoint& p, Uint16 len, Uint32 color)$/;"	f	namespace:__anon13	signature:(SDL_Surface* dst, const RPoint& p, Uint16 len, Uint32 color)
rDrawDashedVLine	/home/viper/projects/RBit/rdrawutil.cpp	/^void rDrawDashedVLine(SDL_Surface* dst, const RPoint& p, Uint16 len, const RRect& clip, const RColor& c)$/;"	f	signature:(SDL_Surface* dst, const RPoint& p, Uint16 len, const RRect& clip, const RColor& c)
rDrawDashedVLine	/home/viper/projects/RBit/rdrawutil.h	/^void RBIT_CORE_EXPORT rDrawDashedVLine(SDL_Surface* dst, const RPoint& p, Uint16 len, const RRect& clip, const RColor& color);$/;"	p	signature:(SDL_Surface* dst, const RPoint& p, Uint16 len, const RRect& clip, const RColor& color)
rDrawFilledGradientRect	/home/viper/projects/RBit/rdrawutil.cpp	/^void rDrawFilledGradientRect(SDL_Surface* dst, const RRect& r, const RRect& clip, const RColor& color0, const RColor& color1)$/;"	f	signature:(SDL_Surface* dst, const RRect& r, const RRect& clip, const RColor& color0, const RColor& color1)
rDrawFilledGradientRect	/home/viper/projects/RBit/rdrawutil.h	/^void RBIT_CORE_EXPORT rDrawFilledGradientRect(SDL_Surface* dst, const RRect& rect, const RRect& clip, const RColor& color0, const RColor& color1);$/;"	p	signature:(SDL_Surface* dst, const RRect& rect, const RRect& clip, const RColor& color0, const RColor& color1)
rDrawFilledRect	/home/viper/projects/RBit/rdrawutil.cpp	/^void rDrawFilledRect(SDL_Surface* dst, const RRect& r, const RRect& clip, const RColor& c)$/;"	f	signature:(SDL_Surface* dst, const RRect& r, const RRect& clip, const RColor& c)
rDrawFilledRect	/home/viper/projects/RBit/rdrawutil.h	/^void RBIT_CORE_EXPORT rDrawFilledRect(SDL_Surface* dst, const RRect& rect, const RRect& clip, const RColor& c);$/;"	p	signature:(SDL_Surface* dst, const RRect& rect, const RRect& clip, const RColor& c)
rDrawFilledRect	/home/viper/projects/RBit/rdrawutil.h	/^void RBIT_CORE_EXPORT rDrawFilledRect(SDL_Surface* dst, const RRect& rect, const RRect& clip, const RColor& color);$/;"	p	signature:(SDL_Surface* dst, const RRect& rect, const RRect& clip, const RColor& color)
rDrawFrame	/home/viper/projects/RBit/rdrawutil.cpp	/^void rDrawFrame(SDL_Surface* dst, const RRect& frame, int styleFlags, Uint8 lineWidth, const RColor& fg, const RColor& dark, const RColor& light, const RRect& clip)$/;"	f	signature:(SDL_Surface* dst, const RRect& frame, int styleFlags, Uint8 lineWidth, const RColor& fg, const RColor& dark, const RColor& light, const RRect& clip)
rDrawFrame	/home/viper/projects/RBit/rdrawutil.h	/^void RBIT_CORE_EXPORT rDrawFrame(SDL_Surface* dst, const RRect& frame, int styleFlags, Uint8 lineWidth, const RColor& fg, const RColor& dark, const RColor& light, const RRect& clip);$/;"	p	signature:(SDL_Surface* dst, const RRect& frame, int styleFlags, Uint8 lineWidth, const RColor& fg, const RColor& dark, const RColor& light, const RRect& clip)
rDrawHLine	/home/viper/projects/RBit/rdrawutil.cpp	/^    void rDrawHLine(SDL_Surface* dst, const RPoint& p, Uint16 len, Uint32 color)$/;"	f	namespace:__anon9	signature:(SDL_Surface* dst, const RPoint& p, Uint16 len, Uint32 color)
rDrawHLine	/home/viper/projects/RBit/rdrawutil.cpp	/^void rDrawHLine(SDL_Surface* dst, const RPoint& p, Uint16 len, const RRect& clip, const RColor& c)$/;"	f	signature:(SDL_Surface* dst, const RPoint& p, Uint16 len, const RRect& clip, const RColor& c)
rDrawHLine	/home/viper/projects/RBit/rdrawutil.h	/^void RBIT_CORE_EXPORT rDrawHLine(SDL_Surface* dst, const RPoint& p, Uint16 len, const RRect& clip, const RColor& color);$/;"	p	signature:(SDL_Surface* dst, const RPoint& p, Uint16 len, const RRect& clip, const RColor& color)
rDrawImage	/home/viper/projects/RBit/rimage.cpp	/^void rDrawImage(SDL_Surface* screen, const RPoint& topleft, const RRect& clip, const RImage& image, bool grayed)$/;"	f	signature:(SDL_Surface* screen, const RPoint& topleft, const RRect& clip, const RImage& image, bool grayed)
rDrawImage	/home/viper/projects/RBit/rimage.h	/^    friend void RBIT_CORE_EXPORT rDrawImage(SDL_Surface* screen, const RPoint& topleft, const RRect& clip, const RImage& image, bool grayed);$/;"	p	class:RImage	access:friend	signature:(SDL_Surface* screen, const RPoint& topleft, const RRect& clip, const RImage& image, bool grayed)
rDrawImage	/home/viper/projects/RBit/rimage.h	/^void RBIT_CORE_EXPORT rDrawImage(SDL_Surface* screen, const RPoint& topleft, const RRect& clip, const RImage& image, bool grayed);$/;"	p	signature:(SDL_Surface* screen, const RPoint& topleft, const RRect& clip, const RImage& image, bool grayed)
rDrawInvertedRect	/home/viper/projects/RBit/rdrawutil.cpp	/^void rDrawInvertedRect(SDL_Surface* dst, const RRect& rect, const RRect& clip)$/;"	f	signature:(SDL_Surface* dst, const RRect& rect, const RRect& clip)
rDrawInvertedRect	/home/viper/projects/RBit/rdrawutil.h	/^void RBIT_CORE_EXPORT rDrawInvertedRect(SDL_Surface* dst, const RRect& rect, const RRect& clip);$/;"	p	signature:(SDL_Surface* dst, const RRect& rect, const RRect& clip)
rDrawLine	/home/viper/projects/RBit/rdrawutil.cpp	/^void rDrawLine(SDL_Surface* dst, const RPoint& p1, const RPoint& p2, const RRect& clip, const RColor& c)$/;"	f	signature:(SDL_Surface* dst, const RPoint& p1, const RPoint& p2, const RRect& clip, const RColor& c)
rDrawLine	/home/viper/projects/RBit/rdrawutil.h	/^void RBIT_CORE_EXPORT rDrawLine(SDL_Surface* dst, const RPoint& p1, const RPoint& p2, const RRect& clip, const RColor& color);$/;"	p	signature:(SDL_Surface* dst, const RPoint& p1, const RPoint& p2, const RRect& clip, const RColor& color)
rDrawPoint	/home/viper/projects/RBit/rdrawutil.cpp	/^void rDrawPoint(SDL_Surface* dst, const RPoint& p, Uint32 color)$/;"	f	namespace:__anon7	signature:(SDL_Surface* dst, const RPoint& p, Uint32 color)
rDrawPoint	/home/viper/projects/RBit/rdrawutil.cpp	/^void rDrawPoint(SDL_Surface* dst, const RPoint& p, const RRect& clip, const RColor& c)$/;"	f	signature:(SDL_Surface* dst, const RPoint& p, const RRect& clip, const RColor& c)
rDrawPoint	/home/viper/projects/RBit/rdrawutil.h	/^void RBIT_CORE_EXPORT rDrawPoint(SDL_Surface* dst, const RPoint& p, const RRect& clip, const RColor& color);$/;"	p	signature:(SDL_Surface* dst, const RPoint& p, const RRect& clip, const RColor& color)
rDrawRect	/home/viper/projects/RBit/rdrawutil.cpp	/^void rDrawRect(SDL_Surface* dst, const RRect& rect, Uint32 color)$/;"	f	namespace:__anon15	signature:(SDL_Surface* dst, const RRect& rect, Uint32 color)
rDrawRect	/home/viper/projects/RBit/rdrawutil.cpp	/^void rDrawRect(SDL_Surface* dst, const RRect& rect, const RRect& clip, const RColor& c)$/;"	f	signature:(SDL_Surface* dst, const RRect& rect, const RRect& clip, const RColor& c)
rDrawRect	/home/viper/projects/RBit/rdrawutil.h	/^void RBIT_CORE_EXPORT rDrawRect(SDL_Surface* dst, const RRect& rect, const RRect& clip, const RColor& color);$/;"	p	signature:(SDL_Surface* dst, const RRect& rect, const RRect& clip, const RColor& color)
rDrawText	/home/viper/projects/RBit/rdrawutil.cpp	/^void rDrawText(SDL_Surface* dst, const RRect& rect, const RRect& clip, RRect* br, const char* text, int pos, int len, const RFont& font, int flags, const RColor* fg, const RColor* bg, RTextParag** internal, bool PushPopOpenGL\/*=true*\/)$/;"	f	signature:(SDL_Surface* dst, const RRect& rect, const RRect& clip, RRect* br, const char* text, int pos, int len, const RFont& font, int flags, const RColor* fg, const RColor* bg, RTextParag** internal, bool PushPopOpenGL )
rDrawText	/home/viper/projects/RBit/rdrawutil.h	/^inline void rDrawText(SDL_Surface* dst, const RRect& rect, const RRect& clip, RRect* br, const char* text, const RFont& font, int flags, const RColor* fg, const RColor* bg, RTextParag** internal, bool PushPopOpenGL)$/;"	f	signature:(SDL_Surface* dst, const RRect& rect, const RRect& clip, RRect* br, const char* text, const RFont& font, int flags, const RColor* fg, const RColor* bg, RTextParag** internal, bool PushPopOpenGL)
rDrawText	/home/viper/projects/RBit/rdrawutil.h	/^void RBIT_CORE_EXPORT rDrawText(SDL_Surface* dst, const RRect& rect, const RRect& clip, RRect* br, const char* text, int pos, int len, const RFont& font, int flags, const RColor* fg, const RColor* bg=0, RTextParag** internal=0, bool PushPopOpenGL=true);$/;"	p	signature:(SDL_Surface* dst, const RRect& rect, const RRect& clip, RRect* br, const char* text, int pos, int len, const RFont& font, int flags, const RColor* fg, const RColor* bg=0, RTextParag** internal=0, bool PushPopOpenGL=true)
rDrawText	/home/viper/projects/RBit/rdrawutil.h	/^void rDrawText(SDL_Surface* dst, const RRect& rect, const RRect& clip, RRect* br, const char* text, const RFont& font, int flags, const RColor* fg, const RColor* bg=0, RTextParag** internal=0, bool PushPopOpenGL=true);$/;"	p	signature:(SDL_Surface* dst, const RRect& rect, const RRect& clip, RRect* br, const char* text, const RFont& font, int flags, const RColor* fg, const RColor* bg=0, RTextParag** internal=0, bool PushPopOpenGL=true)
rDrawVLine	/home/viper/projects/RBit/rdrawutil.cpp	/^void rDrawVLine(SDL_Surface* dst, const RPoint& p, Uint16 len, Uint32 color)$/;"	f	namespace:__anon12	signature:(SDL_Surface* dst, const RPoint& p, Uint16 len, Uint32 color)
rDrawVLine	/home/viper/projects/RBit/rdrawutil.cpp	/^void rDrawVLine(SDL_Surface* dst, const RPoint& p, Uint16 len, const RRect& clip, const RColor& c)$/;"	f	signature:(SDL_Surface* dst, const RPoint& p, Uint16 len, const RRect& clip, const RColor& c)
rDrawVLine	/home/viper/projects/RBit/rdrawutil.h	/^void RBIT_CORE_EXPORT rDrawVLine(SDL_Surface* dst, const RPoint& p, Uint16 len, const RRect& clip, const RColor& color);$/;"	p	signature:(SDL_Surface* dst, const RPoint& p, Uint16 len, const RRect& clip, const RColor& color)
rFormatText	/home/viper/projects/RBit/rdrawutil.cpp	/^    void rFormatText(const RRect& rect, const char* text, int pos, int len, const RFont& f, RTextParag& internal)$/;"	f	namespace:__anon6	signature:(const RRect& rect, const char* text, int pos, int len, const RFont& f, RTextParag& internal)
rFree	/home/viper/projects/RBit/rdrawutil.cpp	/^void rFree(RTextParag* parag)$/;"	f	signature:(RTextParag* parag)
rFree	/home/viper/projects/RBit/rdrawutil.h	/^void RBIT_CORE_EXPORT rFree(RTextParag* internal);$/;"	p	signature:(RTextParag* internal)
rMax	/home/viper/projects/RBit/rutils.h	/^T inline rMax(T a, T b)$/;"	f	signature:(T a, T b)
rMin	/home/viper/projects/RBit/rutils.h	/^T inline rMin(T a, T b)$/;"	f	signature:(T a, T b)
rMixColors	/home/viper/projects/RBit/rdrawutil.h	/^inline RColor rMixColors(const RColor& a, const RColor& b)$/;"	f	signature:(const RColor& a, const RColor& b)
rPaletteFromColor	/home/viper/projects/RBit/rpalette.cpp	/^static void rPaletteFromColor(RPalette& pal, const RColor& button)$/;"	f	file:	signature:(RPalette& pal, const RColor& button)
rPolishColor	/home/viper/projects/RBit/rdrawutil.h	/^inline RColor rPolishColor(const RWidget* w, const RColor& color)$/;"	f	signature:(const RWidget* w, const RColor& color)
rSetOpacity_internal	/home/viper/projects/RBit/rdrawutil.cpp	/^void rSetOpacity_internal(Uint8 level)$/;"	f	signature:(Uint8 level)
rSetOpacity_internal	/home/viper/projects/RBit/rdrawutil.h	/^void rSetOpacity_internal(Uint8 level);$/;"	p	signature:(Uint8 level)
rSwap	/home/viper/projects/RBit/rutils.h	/^inline T rSwap(T& a, T& b)$/;"	f	signature:(T& a, T& b)
rTextBoundingRect	/home/viper/projects/RBit/rdrawutil.cpp	/^RRect rTextBoundingRect(const RRect& rect, const char* text, int pos, int len, const RFont& font, int flags, RTextParag** internal)$/;"	f	signature:(const RRect& rect, const char* text, int pos, int len, const RFont& font, int flags, RTextParag** internal)
rTextBoundingRect	/home/viper/projects/RBit/rdrawutil.h	/^RRect RBIT_CORE_EXPORT rTextBoundingRect(const RRect& rect, const char* text, int pos, int len, const RFont& font, int flags, RTextParag** internal=0);$/;"	p	signature:(const RRect& rect, const char* text, int pos, int len, const RFont& font, int flags, RTextParag** internal=0)
rTextBoundingRect	/home/viper/projects/RBit/rdrawutil.h	/^RRect rTextBoundingRect(const RPoint& topleft, Uint16 width, const char* text, const RFont& font, int flags, RTextParag** internal=0);$/;"	p	signature:(const RPoint& topleft, Uint16 width, const char* text, const RFont& font, int flags, RTextParag** internal=0)
rTextBoundingRect	/home/viper/projects/RBit/rdrawutil.h	/^RRect rTextBoundingRect(const RPoint& topleft, Uint16 width, const char* text, int pos, int len, const RFont& font, int flags, RTextParag** internal=0);$/;"	p	signature:(const RPoint& topleft, Uint16 width, const char* text, int pos, int len, const RFont& font, int flags, RTextParag** internal=0)
rTextBoundingRect	/home/viper/projects/RBit/rdrawutil.h	/^RRect rTextBoundingRect(const RRect& rect, const char* text, const RFont& font, int flags, RTextParag** internal=0);$/;"	p	signature:(const RRect& rect, const char* text, const RFont& font, int flags, RTextParag** internal=0)
rTextBoundingRect	/home/viper/projects/RBit/rdrawutil.h	/^inline RRect rTextBoundingRect(const RPoint& topleft, Uint16 width, const char* text, const RFont& font, int flags, RTextParag** internal)$/;"	f	signature:(const RPoint& topleft, Uint16 width, const char* text, const RFont& font, int flags, RTextParag** internal)
rTextBoundingRect	/home/viper/projects/RBit/rdrawutil.h	/^inline RRect rTextBoundingRect(const RPoint& topleft, Uint16 width, const char* text, int pos, int len, const RFont& font, int flags, RTextParag** internal)$/;"	f	signature:(const RPoint& topleft, Uint16 width, const char* text, int pos, int len, const RFont& font, int flags, RTextParag** internal)
rTextBoundingRect	/home/viper/projects/RBit/rdrawutil.h	/^inline RRect rTextBoundingRect(const RRect& rect, const char* text, const RFont& font, int flags, RTextParag** internal)$/;"	f	signature:(const RRect& rect, const char* text, const RFont& font, int flags, RTextParag** internal)
rTextSize	/home/viper/projects/RBit/rdrawutil.cpp	/^RSize rTextSize(const char* text, int pos, int len, const RFont& font)$/;"	f	signature:(const char* text, int pos, int len, const RFont& font)
rTextSize	/home/viper/projects/RBit/rdrawutil.h	/^RSize RBIT_CORE_EXPORT rTextSize(const char* text, int pos, int len, const RFont& font);$/;"	p	signature:(const char* text, int pos, int len, const RFont& font)
rTextSize	/home/viper/projects/RBit/rdrawutil.h	/^RSize rTextSize(const char* text, const RFont& font);$/;"	p	signature:(const char* text, const RFont& font)
rTextSize	/home/viper/projects/RBit/rdrawutil.h	/^inline RSize rTextSize(const char* text, const RFont& font)$/;"	f	signature:(const char* text, const RFont& font)
r_internal_opacity	/home/viper/projects/RBit/rdrawutil.cpp	/^Uint8 r_internal_opacity = 255;$/;"	v
raise	/home/viper/projects/RBit/rwidget.cpp	/^void RWidget::raise()$/;"	f	class:RWidget	signature:()
raise	/home/viper/projects/RBit/rwidget.h	/^    void raise();$/;"	p	class:RWidget	access:public	signature:()
rand	/home/viper/projects/RBit/rrandomgenerator.h	/^    inline int rand() const$/;"	f	class:RRandomGenerator	access:public	signature:() const
rand	/home/viper/projects/RBit/rrandomgenerator.h	/^    inline int rand(int first, int last) const$/;"	f	class:RRandomGenerator	access:public	signature:(int first, int last) const
ratio	/home/viper/projects/RBit/rapplication.cpp	/^    int ratio;$/;"	m	struct:__anon21::FPS	file:	access:public
ratio_average	/home/viper/projects/RBit/rapplication.cpp	/^    double ratio_average;$/;"	m	struct:__anon21::FPS	file:	access:public
rc	/home/viper/projects/RBit/rpalette.cpp	/^    mutable Uint32* rc;$/;"	m	class:RPalette::RPalettePrivate	file:	access:public
rect	/home/viper/projects/RBit/rwidget.h	/^    RRect rect() const;$/;"	p	class:RWidget	access:public	signature:() const
rect	/home/viper/projects/RBit/rwidget.h	/^inline RRect RWidget::rect() const$/;"	f	class:RWidget	signature:() const
red	/home/viper/projects/RBit/rbit.h	/^        red,$/;"	e	enum:RBit::GlobalColor
red	/home/viper/projects/RBit/rcolor.h	/^	Uint8  red() const;$/;"	p	class:RColor	access:public	signature:() const
red	/home/viper/projects/RBit/rcolor.h	/^inline Uint8 RColor::red() const$/;"	f	class:RColor	signature:() const
ref	/home/viper/projects/RBit/rsharedptr.h	/^        void ref() $/;"	f	class:RSharedPtr::SharedCounterHelperBase	access:public	signature:()
reference_type	/home/viper/projects/RBit/rsharedptr.h	/^		typedef T& reference_type;$/;"	t	struct:__anon20::RSharedPtrTraits	access:public
reference_type	/home/viper/projects/RBit/rsharedptr.h	/^		typedef void reference_type;$/;"	t	struct:__anon20::RSharedPtrTraits	access:public
reference_type	/home/viper/projects/RBit/rsharedptr.h	/^    typedef typename RSharedPtrTraits<T>::reference_type reference_type;$/;"	t	class:RSharedPtr	access:public
registerMetaObject	/home/viper/projects/RBit/rwidget.cpp	/^void RMetaRegistrator::registerMetaObject(const char* className, RMetaObject* obj)$/;"	f	class:RMetaRegistrator	signature:(const char* className, RMetaObject* obj)
registerMetaObject	/home/viper/projects/RBit/rwidget.h	/^    void registerMetaObject(const char* className, RMetaObject* obj);$/;"	p	class:RMetaRegistrator	access:public	signature:(const char* className, RMetaObject* obj)
registerWidget	/home/viper/projects/RBit/rwidget.h	/^    void registerWidget();$/;"	p	class:RWidget	access:private	signature:()
registerWidget	/home/viper/projects/RBit/rwidget.h	/^inline void RWidget::registerWidget()$/;"	f	class:RWidget	signature:()
reject	/home/viper/projects/RBit/rdialog.cpp	/^void RDialog::reject()$/;"	f	class:RDialog	signature:()
reject	/home/viper/projects/RBit/rdialog.h	/^	virtual void reject();	$/;"	p	class:RDialog	access:public	signature:()
reject	/home/viper/projects/RBit/rmessagebox.cpp	/^void RMessageBox::reject()$/;"	f	class:RMessageBox	signature:()
reject	/home/viper/projects/RBit/rmessagebox.h	/^    virtual void reject();       $/;"	p	class:RMessageBox	access:public	signature:()
release	/home/viper/projects/RBit/rsharedptr.h	/^        virtual void release()$/;"	f	class:RSharedPtr::SharedCounterHelper	access:public	signature:()
release	/home/viper/projects/RBit/rsharedptr.h	/^        virtual void release()$/;"	f	class:RSharedPtr::SharedCounterHelperBase	access:public	signature:()
releaseMouse	/home/viper/projects/RBit/rapplication.cpp	/^void RApplication::releaseMouse(RWidget* w)$/;"	f	class:RApplication	signature:(RWidget* w)
releaseMouse	/home/viper/projects/RBit/rapplication.h	/^    void releaseMouse(RWidget* w);$/;"	p	class:RApplication	access:protected	signature:(RWidget* w)
releaseMouse	/home/viper/projects/RBit/rwidget.h	/^    void releaseMouse();$/;"	p	class:RWidget	access:public	signature:()
releaseMouse	/home/viper/projects/RBit/rwidget.h	/^inline void RWidget::releaseMouse()$/;"	f	class:RWidget	signature:()
released	/home/viper/projects/RBit/rbutton.cpp	/^void RButton::released()$/;"	f	class:RButton	signature:()
released	/home/viper/projects/RBit/rbutton.h	/^    virtual void released();$/;"	p	class:RButton	access:protected	signature:()
remove	/home/viper/projects/RBit/rsimplelist.h	/^    inline void remove(Node* node)$/;"	f	class:RSimpleList	access:public	signature:(Node* node)
removeColumn	/home/viper/projects/RBit/rgridmodel.h	/^    bool removeColumn(Sint32 column) $/;"	f	class:RGridModel	access:public	signature:(Sint32 column)
removeColumns	/home/viper/projects/RBit/rgridmodel.h	/^    virtual bool removeColumns(Sint32 column, Uint32 count) $/;"	f	class:RGridModel	access:public	signature:(Sint32 column, Uint32 count)
removeColumns	/home/viper/projects/RBit/rsimplegridmodel.cpp	/^bool RSimpleGridModel::removeColumns(Sint32 column, Uint32 count) $/;"	f	class:RSimpleGridModel	signature:(Sint32 column, Uint32 count)
removeColumns	/home/viper/projects/RBit/rsimplegridmodel.h	/^    virtual bool removeColumns(Sint32 column, Uint32 count);$/;"	p	class:RSimpleGridModel	access:public	signature:(Sint32 column, Uint32 count)
removeItem	/home/viper/projects/RBit/rcombobox.cpp	/^void RComboBox::removeItem(Sint32 row)$/;"	f	class:RComboBox	signature:(Sint32 row)
removeItem	/home/viper/projects/RBit/rcombobox.h	/^    void removeItem(Sint32 row);$/;"	p	class:RComboBox	access:public	signature:(Sint32 row)
removeRow	/home/viper/projects/RBit/rgridmodel.h	/^    bool removeRow(Sint32 row) $/;"	f	class:RGridModel	access:public	signature:(Sint32 row)
removeRows	/home/viper/projects/RBit/rgridmodel.h	/^    virtual bool removeRows(Sint32 row, Uint32 count) $/;"	f	class:RGridModel	access:public	signature:(Sint32 row, Uint32 count)
removeRows	/home/viper/projects/RBit/rsimplegridmodel.cpp	/^bool RSimpleGridModel::removeRows(Sint32 row, Uint32 count) $/;"	f	class:RSimpleGridModel	signature:(Sint32 row, Uint32 count)
removeRows	/home/viper/projects/RBit/rsimplegridmodel.h	/^    virtual bool removeRows(Sint32 row, Uint32 count);$/;"	p	class:RSimpleGridModel	access:public	signature:(Sint32 row, Uint32 count)
removeSection	/home/viper/projects/RBit/rheadermodel.h	/^    bool removeSection(Sint32 section) $/;"	f	class:RHeaderModel	access:public	signature:(Sint32 section)
removeSections	/home/viper/projects/RBit/rheadermodel.h	/^    virtual bool removeSections(Sint32 section, Uint32 count) $/;"	f	class:RHeaderModel	access:public	signature:(Sint32 section, Uint32 count)
removeSections	/home/viper/projects/RBit/rsimpleheadermodel.cpp	/^bool RSimpleHeaderModel::removeSections(Sint32 section, Uint32 count)$/;"	f	class:RSimpleHeaderModel	signature:(Sint32 section, Uint32 count)
removeSections	/home/viper/projects/RBit/rsimpleheadermodel.h	/^    virtual bool removeSections(Sint32 section, Uint32 count);$/;"	p	class:RSimpleHeaderModel	access:public	signature:(Sint32 section, Uint32 count)
removeSelectedText	/home/viper/projects/RBit/reditbox.cpp	/^void REditBox::removeSelectedText()$/;"	f	class:REditBox	signature:()
removeSelectedText	/home/viper/projects/RBit/reditbox.h	/^    void removeSelectedText();$/;"	p	class:REditBox	access:protected	signature:()
removeSubject	/home/viper/projects/RBit/rsubjectobserver.h	/^    void removeSubject(Subject* s) $/;"	f	class:RObserver	access:public	signature:(Subject* s)
repaint	/home/viper/projects/RBit/rwidget.cpp	/^void RWidget::repaint(const RRect& r)$/;"	f	class:RWidget	signature:(const RRect& r)
repaint	/home/viper/projects/RBit/rwidget.h	/^    void repaint();$/;"	p	class:RWidget	access:public	signature:()
repaint	/home/viper/projects/RBit/rwidget.h	/^    void repaint(const RRect& r);$/;"	p	class:RWidget	access:public	signature:(const RRect& r)
repaint	/home/viper/projects/RBit/rwidget.h	/^inline void RWidget::repaint()$/;"	f	class:RWidget	signature:()
repaintImpl	/home/viper/projects/RBit/captionwidget.cpp	/^void CCaptionWidget::repaintImpl(const RRect& r)$/;"	f	class:CCaptionWidget	signature:(const RRect& r)
repaintImpl	/home/viper/projects/RBit/captionwidget.h	/^    virtual void repaintImpl(const RRect& r);$/;"	p	class:CCaptionWidget	access:protected	signature:(const RRect& r)
repaintImpl	/home/viper/projects/RBit/rbutton.cpp	/^void RButton::repaintImpl(const RRect& r)$/;"	f	class:RButton	signature:(const RRect& r)
repaintImpl	/home/viper/projects/RBit/rbutton.h	/^    virtual void repaintImpl(const RRect& r); $/;"	p	class:RButton	access:protected	signature:(const RRect& r)
repaintImpl	/home/viper/projects/RBit/rcheckbox.cpp	/^void RCheckBox::repaintImpl(const RRect& r)$/;"	f	class:RCheckBox	signature:(const RRect& r)
repaintImpl	/home/viper/projects/RBit/rcheckbox.h	/^	virtual void repaintImpl(const RRect& r);    $/;"	p	class:RCheckBox	access:protected	signature:(const RRect& r)
repaintImpl	/home/viper/projects/RBit/rcombobox.cpp	/^void RComboBox::repaintImpl(const RRect& r)$/;"	f	class:RComboBox	signature:(const RRect& r)
repaintImpl	/home/viper/projects/RBit/rcombobox.h	/^    virtual void repaintImpl(const RRect& rect);$/;"	p	class:RComboBox	access:protected	signature:(const RRect& rect)
repaintImpl	/home/viper/projects/RBit/rdialog.cpp	/^void RDialog::repaintImpl(const RRect& r)$/;"	f	class:RDialog	signature:(const RRect& r)
repaintImpl	/home/viper/projects/RBit/rdialog.h	/^	virtual void repaintImpl(const RRect& r);$/;"	p	class:RDialog	access:protected	signature:(const RRect& r)
repaintImpl	/home/viper/projects/RBit/reditbox.cpp	/^void REditBox::repaintImpl(const RRect& r)$/;"	f	class:REditBox	signature:(const RRect& r)
repaintImpl	/home/viper/projects/RBit/reditbox.h	/^    virtual void repaintImpl(const RRect& r);    $/;"	p	class:REditBox	access:protected	signature:(const RRect& r)
repaintImpl	/home/viper/projects/RBit/rgridview.cpp	/^void RGridView::repaintImpl(const RRect& r)$/;"	f	class:RGridView	signature:(const RRect& r)
repaintImpl	/home/viper/projects/RBit/rgridview.h	/^    virtual void repaintImpl(const RRect& r);    $/;"	p	class:RGridView	access:protected	signature:(const RRect& r)
repaintImpl	/home/viper/projects/RBit/rheaderview.cpp	/^void RHeaderView::repaintImpl(const RRect& r)$/;"	f	class:RHeaderView	signature:(const RRect& r)
repaintImpl	/home/viper/projects/RBit/rheaderview.h	/^    virtual void repaintImpl(const RRect& r);$/;"	p	class:RHeaderView	access:protected	signature:(const RRect& r)
repaintImpl	/home/viper/projects/RBit/rlabel.cpp	/^void RLabel::repaintImpl(const RRect& r)$/;"	f	class:RLabel	signature:(const RRect& r)
repaintImpl	/home/viper/projects/RBit/rlabel.h	/^    virtual void repaintImpl(const RRect& r);    $/;"	p	class:RLabel	access:protected	signature:(const RRect& r)
repaintImpl	/home/viper/projects/RBit/rmessagebox.cpp	/^void RMessageBox::repaintImpl(const RRect& r)$/;"	f	class:RMessageBox	signature:(const RRect& r)
repaintImpl	/home/viper/projects/RBit/rmessagebox.h	/^    virtual void repaintImpl(const RRect& r);$/;"	p	class:RMessageBox	access:protected	signature:(const RRect& r)
repaintImpl	/home/viper/projects/RBit/rmultilinelabel.cpp	/^void RMultilineLabel::repaintImpl(const RRect& r)$/;"	f	class:RMultilineLabel	signature:(const RRect& r)
repaintImpl	/home/viper/projects/RBit/rmultilinelabel.h	/^    virtual void		repaintImpl(const RRect& r);    $/;"	p	class:RMultilineLabel	access:protected	signature:(const RRect& r)
repaintImpl	/home/viper/projects/RBit/rscrollarea.cpp	/^void RScrollArea::Viewport::repaintImpl(const RRect& r)$/;"	f	class:RScrollArea::Viewport	signature:(const RRect& r)
repaintImpl	/home/viper/projects/RBit/rscrollarea.cpp	/^void RScrollAreaBase::repaintImpl(const RRect& r)$/;"	f	class:RScrollAreaBase	signature:(const RRect& r)
repaintImpl	/home/viper/projects/RBit/rscrollarea.h	/^        virtual void repaintImpl(const RRect&);$/;"	p	class:RScrollArea::Viewport	access:protected	signature:(const RRect&)
repaintImpl	/home/viper/projects/RBit/rscrollarea.h	/^    virtual void repaintImpl(const RRect& rect);$/;"	p	class:RScrollAreaBase	access:protected	signature:(const RRect& rect)
repaintImpl	/home/viper/projects/RBit/rscrollbar.cpp	/^void RScrollBar::repaintImpl(const RRect& r)$/;"	f	class:RScrollBar	signature:(const RRect& r)
repaintImpl	/home/viper/projects/RBit/rscrollbar.h	/^    virtual void repaintImpl(const RRect& r);$/;"	p	class:RScrollBar	access:protected	signature:(const RRect& r)
repaintImpl	/home/viper/projects/RBit/rsplitter.cpp	/^void RSplitter::repaintImpl(const RRect& r)$/;"	f	class:RSplitter	signature:(const RRect& r)
repaintImpl	/home/viper/projects/RBit/rsplitter.h	/^	virtual void repaintImpl(const RRect& r);$/;"	p	class:RSplitter	access:protected	signature:(const RRect& r)
repaintImpl	/home/viper/projects/RBit/rwidget.cpp	/^void RWidget::repaintImpl(const RRect&)$/;"	f	class:RWidget	signature:(const RRect&)
repaintImpl	/home/viper/projects/RBit/rwidget.h	/^    virtual void repaintImpl(const RRect& rect);$/;"	p	class:RWidget	access:protected	signature:(const RRect& rect)
repaintImpl	/home/viper/projects/RBit/rwindow.cpp	/^void RWindow::repaintImpl(const RRect& r)$/;"	f	class:RWindow	signature:(const RRect& r)
repaintImpl	/home/viper/projects/RBit/rwindow.h	/^    virtual void repaintImpl(const RRect& r);    $/;"	p	class:RWindow	access:protected	signature:(const RRect& r)
repeatAction	/home/viper/projects/RBit/rscrollbar.h	/^    ScrollAction repeatAction () const;$/;"	p	class:RScrollBar	access:protected	signature:() const
repeatAction	/home/viper/projects/RBit/rscrollbar.h	/^inline RScrollBar::ScrollAction RScrollBar::repeatAction() const$/;"	f	class:RScrollBar	signature:() const
reset	/home/viper/projects/RBit/rsharedptr.h	/^    void reset(T* ptr = 0)$/;"	f	class:RSharedPtr	access:public	signature:(T* ptr = 0)
resetButton	/home/viper/projects/RBit/rcombobox.cpp	/^void RComboBox::resetButton()$/;"	f	class:RComboBox	signature:()
resetButton	/home/viper/projects/RBit/rcombobox.h	/^    void resetButton();$/;"	p	class:RComboBox	access:private	signature:()
resizeMode	/home/viper/projects/RBit/rheaderview.cpp	/^RHeaderView::ResizeMode RHeaderView::resizeMode(Sint32 section) const$/;"	f	class:RHeaderView	signature:(Sint32 section) const
resizeMode	/home/viper/projects/RBit/rheaderview.h	/^    ResizeMode resizeMode(Sint32 section) const;$/;"	p	class:RHeaderView	access:public	signature:(Sint32 section) const
resizeSection	/home/viper/projects/RBit/rheaderview.cpp	/^void RHeaderView::resizeSection(Sint32 section, Uint16 size)$/;"	f	class:RHeaderView	signature:(Sint32 section, Uint16 size)
resizeSection	/home/viper/projects/RBit/rheaderview.h	/^    void resizeSection(Sint32 section, Uint16 size);$/;"	p	class:RHeaderView	access:public	signature:(Sint32 section, Uint16 size)
resizeSections	/home/viper/projects/RBit/rheaderview.cpp	/^void RHeaderView::resizeSections()$/;"	f	class:RHeaderView	signature:()
resizeSections	/home/viper/projects/RBit/rheaderview.h	/^    void resizeSections();$/;"	p	class:RHeaderView	access:public	signature:()
resolve	/home/viper/projects/RBit/rpalette.cpp	/^RPalette RPalette::resolve(const RPalette& other) const$/;"	f	class:RPalette	signature:(const RPalette& other) const
resolve	/home/viper/projects/RBit/rpalette.h	/^    RPalette resolve(const RPalette&) const;$/;"	p	class:RPalette	access:public	signature:(const RPalette&) const
resolve	/home/viper/projects/RBit/rpalette.h	/^    inline unsigned int resolve() const { return m_resolveMask; }$/;"	f	class:RPalette	access:public	signature:() const
resolve	/home/viper/projects/RBit/rpalette.h	/^    inline void resolve(unsigned int mask) { m_resolveMask = mask; }$/;"	f	class:RPalette	access:public	signature:(unsigned int mask)
resolvePalette	/home/viper/projects/RBit/rwidget.cpp	/^void RWidget::resolvePalette()$/;"	f	class:RWidget	signature:()
resolvePalette	/home/viper/projects/RBit/rwidget.h	/^    void resolvePalette();$/;"	p	class:RWidget	access:private	signature:()
result	/home/viper/projects/RBit/rdialog.h	/^    int result() const;$/;"	p	class:RDialog	access:protected	signature:() const
result	/home/viper/projects/RBit/rdialog.h	/^inline int RDialog::result() const$/;"	f	class:RDialog	signature:() const
ret	/home/viper/projects/RBit/reditbox.cpp	/^void REditBox::ret()$/;"	f	class:REditBox	signature:()
ret	/home/viper/projects/RBit/reditbox.h	/^    virtual void ret();$/;"	p	class:REditBox	access:public	signature:()
rglPicSeq	/home/viper/projects/RBit/rgl.h	/^struct rglPicSeq$/;"	s
rglPicSeq::h	/home/viper/projects/RBit/rgl.h	/^    int h;$/;"	m	struct:rglPicSeq	access:public
rglPicSeq::maxx	/home/viper/projects/RBit/rgl.h	/^    GLfloat maxx;$/;"	m	struct:rglPicSeq	access:public
rglPicSeq::maxy	/home/viper/projects/RBit/rgl.h	/^    GLfloat maxy;$/;"	m	struct:rglPicSeq	access:public
rglPicSeq::minx	/home/viper/projects/RBit/rgl.h	/^    GLfloat minx;$/;"	m	struct:rglPicSeq	access:public
rglPicSeq::miny	/home/viper/projects/RBit/rgl.h	/^    GLfloat miny;$/;"	m	struct:rglPicSeq	access:public
rglPicSeq::textures	/home/viper/projects/RBit/rgl.h	/^    RArrayContainer<GLuint> textures;$/;"	m	struct:rglPicSeq	access:public
rglPicSeq::w	/home/viper/projects/RBit/rgl.h	/^    int w;$/;"	m	struct:rglPicSeq	access:public
rglRGB	/home/viper/projects/RBit/rgl.h	/^inline Uint32 rglRGB(Uint8 red, Uint8 green, Uint8 blue, Uint8 alpha)$/;"	f	signature:(Uint8 red, Uint8 green, Uint8 blue, Uint8 alpha)
rglRGB	/home/viper/projects/RBit/rgl.h	/^inline Uint32 rglRGB(const RColor& color) $/;"	f	signature:(const RColor& color)
right	/home/viper/projects/RBit/rrect.h	/^    Sint16 right() const;$/;"	p	class:RRect	access:public	signature:() const
right	/home/viper/projects/RBit/rrect.h	/^inline Sint16 RRect::right() const$/;"	f	class:RRect	signature:() const
rightTextMargin	/home/viper/projects/RBit/rgridview.h	/^    Sint32 rightTextMargin() const;$/;"	p	class:RGridView	access:public	signature:() const
rightTextMargin	/home/viper/projects/RBit/rgridview.h	/^inline Sint32 RGridView::rightTextMargin() const$/;"	f	class:RGridView	signature:() const
round	/home/viper/projects/RBit/rcolor.cpp	/^    inline int round(double d)$/;"	f	namespace:__anon18	signature:(double d)
rowAt	/home/viper/projects/RBit/rgridview.h	/^    Sint32 rowAt(Sint16 y) const;$/;"	p	class:RGridView	access:public	signature:(Sint16 y) const
rowAt	/home/viper/projects/RBit/rgridview.h	/^inline Sint32 RGridView::rowAt(Sint16 y) const$/;"	f	class:RGridView	signature:(Sint16 y) const
rowCount	/home/viper/projects/RBit/rgridmodel.h	/^    virtual Uint32 rowCount() const = 0;$/;"	p	class:RGridModel	access:public	signature:() const
rowCount	/home/viper/projects/RBit/rsimplegridmodel.h	/^    virtual Uint32 rowCount() const { return m_rows; }$/;"	f	class:RSimpleGridModel	access:public	signature:() const
rowCountChanged	/home/viper/projects/RBit/rgridview.cpp	/^void RGridView::rowCountChanged(Sint32, Sint32)$/;"	f	class:RGridView	signature:(Sint32, Sint32)
rowCountChanged	/home/viper/projects/RBit/rgridview.h	/^    void rowCountChanged(Sint32 oldCount, Sint32 newCount);$/;"	p	class:RGridView	access:protected	signature:(Sint32 oldCount, Sint32 newCount)
rowHeight	/home/viper/projects/RBit/rgridview.h	/^    virtual Uint16 rowHeight(Sint32 row) const;$/;"	p	class:RGridView	access:public	signature:(Sint32 row) const
rowHeight	/home/viper/projects/RBit/rgridview.h	/^inline Uint16 RGridView::rowHeight(Sint32 row) const$/;"	f	class:RGridView	signature:(Sint32 row) const
rowResized	/home/viper/projects/RBit/rgridview.cpp	/^void RGridView::rowResized(Sint32 row, Sint32, Sint32)$/;"	f	class:RGridView	signature:(Sint32 row, Sint32, Sint32)
rowResized	/home/viper/projects/RBit/rgridview.h	/^    void rowResized(Sint32 row, Sint32 oldHeight, Sint32 newHeight);$/;"	p	class:RGridView	access:protected	signature:(Sint32 row, Sint32 oldHeight, Sint32 newHeight)
rowType	/home/viper/projects/RBit/rgridmodel.h	/^	virtual int rowType(Sint32 row)$/;"	f	class:RGridModel	access:public	signature:(Sint32 row)
rowViewportPosition	/home/viper/projects/RBit/rgridview.h	/^    Sint32 rowViewportPosition(Sint32 row) const;$/;"	p	class:RGridView	access:public	signature:(Sint32 row) const
rowViewportPosition	/home/viper/projects/RBit/rgridview.h	/^inline Sint32 RGridView::rowViewportPosition(Sint32 row) const$/;"	f	class:RGridView	signature:(Sint32 row) const
rowsAboutToBeInserted	/home/viper/projects/RBit/rgridmodel.h	/^    virtual void rowsAboutToBeInserted(Sint32 firstRow, Sint32 lastRow) $/;"	f	class:RGridModelObserverBase	access:protected	signature:(Sint32 firstRow, Sint32 lastRow)
rowsAboutToBeRemoved	/home/viper/projects/RBit/rgridmodel.h	/^    virtual void rowsAboutToBeRemoved(Sint32 firstRow, Sint32 lastRow)$/;"	f	class:RGridModelObserverBase	access:protected	signature:(Sint32 firstRow, Sint32 lastRow)
rowsInserted	/home/viper/projects/RBit/rgridmodel.h	/^    virtual void rowsInserted(Sint32 firstRow, Sint32 lastRow)$/;"	f	class:RGridModelObserverBase	access:protected	signature:(Sint32 firstRow, Sint32 lastRow)
rowsInserted	/home/viper/projects/RBit/rgridview.cpp	/^void RGridView::rowsInserted(Sint32 firstRow, Sint32 lastRow)$/;"	f	class:RGridView	signature:(Sint32 firstRow, Sint32 lastRow)
rowsInserted	/home/viper/projects/RBit/rgridview.h	/^    virtual void rowsInserted(Sint32 firstRow, Sint32 lastRow);    $/;"	p	class:RGridView	access:protected	signature:(Sint32 firstRow, Sint32 lastRow)
rowsRemoved	/home/viper/projects/RBit/rgridmodel.h	/^    virtual void rowsRemoved(Sint32 firstRow, Sint32 lastRow)$/;"	f	class:RGridModelObserverBase	access:protected	signature:(Sint32 firstRow, Sint32 lastRow)
rowsRemoved	/home/viper/projects/RBit/rgridview.cpp	/^void RGridView::rowsRemoved(Sint32 firstRow, Sint32 lastRow)$/;"	f	class:RGridView	signature:(Sint32 firstRow, Sint32 lastRow)
rowsRemoved	/home/viper/projects/RBit/rgridview.h	/^    virtual void rowsRemoved(Sint32 firstRow, Sint32 lastRow);    $/;"	p	class:RGridView	access:protected	signature:(Sint32 firstRow, Sint32 lastRow)
rtti	/home/viper/projects/RBit/rgridmodeldatatype.h	/^    virtual int rtti() const = 0;$/;"	p	class:RModelDataTypeBase	access:public	signature:() const
rtti	/home/viper/projects/RBit/rgridmodeldatatype.h	/^    virtual int rtti() const$/;"	f	class:RModelDataType	access:public	signature:() const
rtti	/home/viper/projects/RBit/rsimplegridmodel.h	/^        virtual int rtti() const;$/;"	p	class:RSimpleGridModel::Item	access:public	signature:() const
rtti	/home/viper/projects/RBit/rsimplegridmodel.h	/^inline int RSimpleGridModel::Item::rtti() const$/;"	f	class:RSimpleGridModel::Item	signature:() const
rtti	/home/viper/projects/RBit/rsimpleheadermodel.h	/^        virtual int rtti() const;$/;"	p	class:RSimpleHeaderModel::Item	access:public	signature:() const
rtti	/home/viper/projects/RBit/rsimpleheadermodel.h	/^inline int RSimpleHeaderModel::Item::rtti() const$/;"	f	class:RSimpleHeaderModel::Item	signature:() const
run	/home/viper/projects/RBit/rapplication.cpp	/^void RApplication::run()$/;"	f	class:RApplication	signature:()
run	/home/viper/projects/RBit/rapplication.h	/^    void run();$/;"	p	class:RApplication	access:public	signature:()
run	/home/viper/projects/RBit/rdialog.cpp	/^int RDialog::run()$/;"	f	class:RDialog	signature:()
run	/home/viper/projects/RBit/rdialog.h	/^	int run();    $/;"	p	class:RDialog	access:public	signature:()
saturation	/home/viper/projects/RBit/rcolor.cpp	/^Uint16 RColor::saturation() const$/;"	f	class:RColor	signature:() const
saturation	/home/viper/projects/RBit/rcolor.h	/^    Uint16 saturation() const;$/;"	p	class:RColor	access:public	signature:() const
scaleSurface	/home/viper/projects/RBit/rapplication.cpp	/^SDL_Surface* scaleSurface(SDL_Surface *src, double zoomx, double zoomy, bool smooth);$/;"	p	file:	signature:(SDL_Surface *src, double zoomx, double zoomy, bool smooth)
screen	/home/viper/projects/RBit/rapplication.h	/^    SDL_Surface* screen();    $/;"	p	class:RApplication	access:protected	signature:()
screen	/home/viper/projects/RBit/rapplication.h	/^inline SDL_Surface* RApplication::screen()$/;"	f	class:RApplication	signature:()
screen	/home/viper/projects/RBit/rwidget.h	/^    SDL_Surface* screen();$/;"	p	class:RWidget	access:protected	signature:()
screen	/home/viper/projects/RBit/rwidget.h	/^inline SDL_Surface* RWidget::screen()$/;"	f	class:RWidget	signature:()
screenRect	/home/viper/projects/RBit/rapplication.h	/^    const RRect& screenRect() const;$/;"	p	class:RApplication	access:public	signature:() const
screenRect	/home/viper/projects/RBit/rapplication.h	/^inline const RRect& RApplication::screenRect() const$/;"	f	class:RApplication	signature:() const
scrollArea	/home/viper/projects/RBit/rscrollarea.h	/^        RScrollArea* scrollArea() const;$/;"	p	class:RScrollArea::Viewport	access:protected	signature:() const
scrollArea	/home/viper/projects/RBit/rscrollarea.h	/^inline RScrollArea* RScrollArea::Viewport::scrollArea() const$/;"	f	class:RScrollArea::Viewport	signature:() const
scrollArea	/home/viper/projects/RBit/rscrollwidgetarea.h	/^    inline RScrollWidgetArea<T>* scrollArea() const$/;"	f	class:ScrollWidget	access:protected	signature:() const
scrollBarExtent	/home/viper/projects/RBit/rscrollbar.h	/^    Uint16 scrollBarExtent() const;$/;"	p	class:RScrollBar	access:public	signature:() const
scrollBarExtent	/home/viper/projects/RBit/rscrollbar.h	/^inline Uint16 RScrollBar::scrollBarExtent() const$/;"	f	class:RScrollBar	signature:() const
scrollBarSliderMin	/home/viper/projects/RBit/rscrollbar.h	/^    Uint16 scrollBarSliderMin() const;$/;"	p	class:RScrollBar	access:public	signature:() const
scrollBarSliderMin	/home/viper/projects/RBit/rscrollbar.h	/^inline Uint16 RScrollBar::scrollBarSliderMin() const$/;"	f	class:RScrollBar	signature:() const
scrollChange	/home/viper/projects/RBit/rscrollarea.cpp	/^void RScrollAreaBase::ScrollBar::scrollChange(ScrollChange change)$/;"	f	class:RScrollAreaBase::ScrollBar	signature:(ScrollChange change)
scrollChange	/home/viper/projects/RBit/rscrollarea.h	/^        virtual void scrollChange(ScrollChange change);$/;"	p	class:RScrollAreaBase::ScrollBar	access:protected	signature:(ScrollChange change)
scrollChange	/home/viper/projects/RBit/rscrollbar.cpp	/^void RScrollBar::scrollChange(RScrollBar::ScrollChange change)$/;"	f	class:RScrollBar	signature:(RScrollBar::ScrollChange change)
scrollChange	/home/viper/projects/RBit/rscrollbar.h	/^    virtual void scrollChange(ScrollChange change);$/;"	p	class:RScrollBar	access:protected	signature:(ScrollChange change)
scrollContentsBy	/home/viper/projects/RBit/rgridview.cpp	/^void RGridView::scrollContentsBy(Sint32 dx, Sint32 dy)$/;"	f	class:RGridView	signature:(Sint32 dx, Sint32 dy)
scrollContentsBy	/home/viper/projects/RBit/rgridview.h	/^    void scrollContentsBy(Sint32 dx, Sint32 dy);$/;"	p	class:RGridView	access:protected	signature:(Sint32 dx, Sint32 dy)
scrollContentsBy	/home/viper/projects/RBit/rheaderview.h	/^    void scrollContentsBy(Sint32 dx, Sint32 dy);$/;"	p	class:RHeaderView	access:protected	signature:(Sint32 dx, Sint32 dy)
scrollContentsBy	/home/viper/projects/RBit/rscrollarea.cpp	/^void RScrollAreaBase::scrollContentsBy(Sint32, Sint32)$/;"	f	class:RScrollAreaBase	signature:(Sint32, Sint32)
scrollContentsBy	/home/viper/projects/RBit/rscrollarea.h	/^    virtual void scrollContentsBy(int dx, int dy);$/;"	p	class:RScrollAreaBase	access:protected	signature:(int dx, int dy)
scrollContentsBy	/home/viper/projects/RBit/rscrollwidgetarea.cpp	/^void RScrollWidgetAreaBase::scrollContentsBy(Sint32, Sint32)$/;"	f	class:RScrollWidgetAreaBase	signature:(Sint32, Sint32)
scrollContentsBy	/home/viper/projects/RBit/rscrollwidgetarea.h	/^    virtual void scrollContentsBy(Sint32 dx, Sint32 dy);$/;"	p	class:RScrollWidgetAreaBase	access:protected	signature:(Sint32 dx, Sint32 dy)
scrollOffset	/home/viper/projects/RBit/reditbox.cpp	/^RPoint REditBox::scrollOffset() const$/;"	f	class:REditBox	signature:() const
scrollOffset	/home/viper/projects/RBit/reditbox.h	/^    RPoint scrollOffset() const;$/;"	p	class:REditBox	access:private	signature:() const
scrollTo	/home/viper/projects/RBit/reditbox.cpp	/^void REditBox::scrollTo(Sint32 pos)$/;"	f	class:REditBox	signature:(Sint32 pos)
scrollTo	/home/viper/projects/RBit/reditbox.h	/^    void scrollTo(Sint32 pos);$/;"	p	class:REditBox	access:protected	signature:(Sint32 pos)
scrollTo	/home/viper/projects/RBit/rgridview.cpp	/^void RGridView::scrollTo(Sint32 row, Sint32 column)$/;"	f	class:RGridView	signature:(Sint32 row, Sint32 column)
scrollTo	/home/viper/projects/RBit/rgridview.h	/^    virtual void scrollTo(Sint32 row, Sint32 column);$/;"	p	class:RGridView	access:public	signature:(Sint32 row, Sint32 column)
scrollTo	/home/viper/projects/RBit/rheaderview.h	/^    void scrollTo(Sint32 section);$/;"	p	class:RHeaderView	access:protected	signature:(Sint32 section)
scrollToInternalX	/home/viper/projects/RBit/reditbox.cpp	/^void REditBox::scrollToInternalX(Sint32 x)$/;"	f	class:REditBox	signature:(Sint32 x)
scrollToInternalX	/home/viper/projects/RBit/reditbox.h	/^    void scrollToInternalX(Sint32 x);$/;"	p	class:REditBox	access:private	signature:(Sint32 x)
scrollValue	/home/viper/projects/RBit/rscrollbar.h	/^    Sint32 scrollValue() const;$/;"	p	class:RScrollBar	access:public	signature:() const
scrollValue	/home/viper/projects/RBit/rscrollbar.h	/^inline Sint32 RScrollBar::scrollValue() const$/;"	f	class:RScrollBar	signature:() const
sdlColor	/home/viper/projects/RBit/rcolor.h	/^	SDL_Color& sdlColor();$/;"	p	class:RColor	access:public	signature:()
sdlColor	/home/viper/projects/RBit/rcolor.h	/^	const SDL_Color& sdlColor() const;$/;"	p	class:RColor	access:public	signature:() const
sdlColor	/home/viper/projects/RBit/rcolor.h	/^inline SDL_Color& RColor::sdlColor()$/;"	f	class:RColor	signature:()
sdlColor	/home/viper/projects/RBit/rcolor.h	/^inline const SDL_Color& RColor::sdlColor() const$/;"	f	class:RColor	signature:() const
sdlRect	/home/viper/projects/RBit/rrect.h	/^    SDL_Rect& sdlRect();$/;"	p	class:RRect	access:public	signature:()
sdlRect	/home/viper/projects/RBit/rrect.h	/^    const SDL_Rect& sdlRect() const;$/;"	p	class:RRect	access:public	signature:() const
sdlRect	/home/viper/projects/RBit/rrect.h	/^inline SDL_Rect& RRect::sdlRect()$/;"	f	class:RRect	signature:()
sdlRect	/home/viper/projects/RBit/rrect.h	/^inline const SDL_Rect& RRect::sdlRect() const$/;"	f	class:RRect	signature:() const
sdlSurface	/home/viper/projects/RBit/rsurface.h	/^    SDL_Surface* sdlSurface() const  \/\/ obsolete, exists for compatibility$/;"	f	class:RSurface	access:public	signature:() const
sectionAt	/home/viper/projects/RBit/rheaderview.cpp	/^Sint32 RHeaderView::sectionAt(Sint32 position) const$/;"	f	class:RHeaderView	signature:(Sint32 position) const
sectionAt	/home/viper/projects/RBit/rheaderview.h	/^    Sint32 sectionAt(Sint32 position) const;$/;"	p	class:RHeaderView	access:public	signature:(Sint32 position) const
sectionAt	/home/viper/projects/RBit/rheaderview.h	/^    Sint32 sectionAt(Sint32 x, Sint32 y) const;$/;"	p	class:RHeaderView	access:public	signature:(Sint32 x, Sint32 y) const
sectionAt	/home/viper/projects/RBit/rheaderview.h	/^    Sint32 sectionAt(const RPoint& pos) const;$/;"	p	class:RHeaderView	access:public	signature:(const RPoint& pos) const
sectionClicked	/home/viper/projects/RBit/rheaderview.h	/^    virtual void sectionClicked(Sint32 section)$/;"	f	class:RHeaderViewObserver	access:public	signature:(Sint32 section)
sectionCount	/home/viper/projects/RBit/rheadermodel.h	/^    virtual Uint32 sectionCount() const = 0;$/;"	p	class:RHeaderModel	access:public	signature:() const
sectionCount	/home/viper/projects/RBit/rsimpleheadermodel.cpp	/^Uint32 RSimpleHeaderModel::sectionCount() const$/;"	f	class:RSimpleHeaderModel	signature:() const
sectionCount	/home/viper/projects/RBit/rsimpleheadermodel.h	/^    virtual Uint32 sectionCount() const;$/;"	p	class:RSimpleHeaderModel	access:public	signature:() const
sectionCountChanged	/home/viper/projects/RBit/rgridview.cpp	/^void RGridView::HeaderObserver::sectionCountChanged(Uint32 oldCount, Uint32 newCount)$/;"	f	class:RGridView::HeaderObserver	signature:(Uint32 oldCount, Uint32 newCount)
sectionCountChanged	/home/viper/projects/RBit/rgridview.h	/^        virtual void sectionCountChanged(Uint32 oldCount, Uint32 newCount);        $/;"	p	class:RGridView::HeaderObserver	access:protected	signature:(Uint32 oldCount, Uint32 newCount)
sectionCountChanged	/home/viper/projects/RBit/rheaderview.h	/^    virtual void sectionCountChanged(Uint32 oldCount, Uint32 newCount) $/;"	f	class:RHeaderViewObserver	access:public	signature:(Uint32 oldCount, Uint32 newCount)
sectionHandleAt	/home/viper/projects/RBit/rheaderview.cpp	/^Sint32 RHeaderView::sectionHandleAt(Sint32 position)$/;"	f	class:RHeaderView	signature:(Sint32 position)
sectionHandleAt	/home/viper/projects/RBit/rheaderview.h	/^    Sint32 sectionHandleAt(Sint32 position);$/;"	p	class:RHeaderView	access:private	signature:(Sint32 position)
sectionPosition	/home/viper/projects/RBit/rheaderview.cpp	/^Sint32 RHeaderView::sectionPosition(Sint32 section) const$/;"	f	class:RHeaderView	signature:(Sint32 section) const
sectionPosition	/home/viper/projects/RBit/rheaderview.h	/^    Sint32 sectionPosition(Sint32 section) const;$/;"	p	class:RHeaderView	access:public	signature:(Sint32 section) const
sectionPressed	/home/viper/projects/RBit/rgridview.cpp	/^void RGridView::HeaderObserver::sectionPressed(Sint32 section)$/;"	f	class:RGridView::HeaderObserver	signature:(Sint32 section)
sectionPressed	/home/viper/projects/RBit/rgridview.h	/^        virtual void sectionPressed(Sint32 section);$/;"	p	class:RGridView::HeaderObserver	access:protected	signature:(Sint32 section)
sectionPressed	/home/viper/projects/RBit/rheaderview.h	/^    virtual void sectionPressed(Sint32 section)$/;"	f	class:RHeaderViewObserver	access:public	signature:(Sint32 section)
sectionResized	/home/viper/projects/RBit/rgridview.cpp	/^void RGridView::HeaderObserver::sectionResized(Sint32 section, Sint32 oldSize, Sint32 newSize)$/;"	f	class:RGridView::HeaderObserver	signature:(Sint32 section, Sint32 oldSize, Sint32 newSize)
sectionResized	/home/viper/projects/RBit/rgridview.h	/^        virtual void sectionResized(Sint32 section, Sint32 oldSize, Sint32 newSize);$/;"	p	class:RGridView::HeaderObserver	access:protected	signature:(Sint32 section, Sint32 oldSize, Sint32 newSize)
sectionResized	/home/viper/projects/RBit/rheaderview.h	/^    virtual void sectionResized(Sint32 section, Sint32 oldSize, Sint32 newSize) $/;"	f	class:RHeaderViewObserver	access:public	signature:(Sint32 section, Sint32 oldSize, Sint32 newSize)
sectionSize	/home/viper/projects/RBit/rheaderview.cpp	/^Uint16 RHeaderView::sectionSize(Sint32 section) const$/;"	f	class:RHeaderView	signature:(Sint32 section) const
sectionSize	/home/viper/projects/RBit/rheaderview.h	/^    Uint16 sectionSize(Sint32 section) const;$/;"	p	class:RHeaderView	access:public	signature:(Sint32 section) const
sectionViewportPosition	/home/viper/projects/RBit/rheaderview.cpp	/^Sint16 RHeaderView::sectionViewportPosition(Sint32 section) const$/;"	f	class:RHeaderView	signature:(Sint32 section) const
sectionViewportPosition	/home/viper/projects/RBit/rheaderview.h	/^    Sint16 sectionViewportPosition(Sint32 section) const;$/;"	p	class:RHeaderView	access:public	signature:(Sint32 section) const
sectionsAboutToBeInserted	/home/viper/projects/RBit/rheadermodel.h	/^    virtual void sectionsAboutToBeInserted(Sint32 firstSection, Sint32 lastSection)$/;"	f	class:RHeaderModelObserver	access:protected	signature:(Sint32 firstSection, Sint32 lastSection)
sectionsAboutToBeRemoved	/home/viper/projects/RBit/rheadermodel.h	/^    virtual void sectionsAboutToBeRemoved(Sint32 firstSection, Sint32 lastSection)$/;"	f	class:RHeaderModelObserver	access:protected	signature:(Sint32 firstSection, Sint32 lastSection)
sectionsAboutToBeRemoved	/home/viper/projects/RBit/rheaderview.cpp	/^void RHeaderView::sectionsAboutToBeRemoved(Sint32 first, Sint32 last)$/;"	f	class:RHeaderView	signature:(Sint32 first, Sint32 last)
sectionsAboutToBeRemoved	/home/viper/projects/RBit/rheaderview.h	/^    virtual void sectionsAboutToBeRemoved(Sint32 firstSection, Sint32 lastSection);    $/;"	p	class:RHeaderView	access:protected	signature:(Sint32 firstSection, Sint32 lastSection)
sectionsInserted	/home/viper/projects/RBit/rgridview.cpp	/^void RGridView::HeaderObserver::sectionsInserted(Sint32 firstSection, Sint32 lastSection)$/;"	f	class:RGridView::HeaderObserver	signature:(Sint32 firstSection, Sint32 lastSection)
sectionsInserted	/home/viper/projects/RBit/rgridview.h	/^        virtual void sectionsInserted(Sint32 firstSection, Sint32 lastSection);$/;"	p	class:RGridView::HeaderObserver	access:protected	signature:(Sint32 firstSection, Sint32 lastSection)
sectionsInserted	/home/viper/projects/RBit/rheadermodel.h	/^    virtual void sectionsInserted(Sint32 firstSection, Sint32 lastSection)$/;"	f	class:RHeaderModelObserver	access:protected	signature:(Sint32 firstSection, Sint32 lastSection)
sectionsInserted	/home/viper/projects/RBit/rheaderview.cpp	/^void RHeaderView::sectionsInserted(Sint32 first, Sint32)$/;"	f	class:RHeaderView	signature:(Sint32 first, Sint32)
sectionsInserted	/home/viper/projects/RBit/rheaderview.h	/^    virtual void sectionsInserted(Sint32 firstSection, Sint32 lastSection);$/;"	p	class:RHeaderView	access:protected	signature:(Sint32 firstSection, Sint32 lastSection)
sectionsRemoved	/home/viper/projects/RBit/rgridview.cpp	/^void RGridView::HeaderObserver::sectionsRemoved(Sint32 firstSection, Sint32 lastSection)$/;"	f	class:RGridView::HeaderObserver	signature:(Sint32 firstSection, Sint32 lastSection)
sectionsRemoved	/home/viper/projects/RBit/rgridview.h	/^        virtual void sectionsRemoved(Sint32 firstSection, Sint32 lastSection);$/;"	p	class:RGridView::HeaderObserver	access:protected	signature:(Sint32 firstSection, Sint32 lastSection)
sectionsRemoved	/home/viper/projects/RBit/rheadermodel.h	/^    virtual void sectionsRemoved(Sint32 firstSection, Sint32 lastSection)$/;"	f	class:RHeaderModelObserver	access:protected	signature:(Sint32 firstSection, Sint32 lastSection)
selectAll	/home/viper/projects/RBit/reditbox.cpp	/^void REditBox::selectAll()$/;"	f	class:REditBox	signature:()
selectAll	/home/viper/projects/RBit/reditbox.h	/^    void selectAll();$/;"	p	class:REditBox	access:public	signature:()
selectionEnd	/home/viper/projects/RBit/reditbox.cpp	/^int REditBox::selectionEnd() const$/;"	f	class:REditBox	signature:() const
selectionEnd	/home/viper/projects/RBit/reditbox.h	/^    int selectionEnd() const;$/;"	p	class:REditBox	access:public	signature:() const
selectionInvisibleWhenNotInFocus	/home/viper/projects/RBit/rgridview.h	/^    bool selectionInvisibleWhenNotInFocus() const;$/;"	p	class:RGridView	access:public	signature:() const
selectionInvisibleWhenNotInFocus	/home/viper/projects/RBit/rgridview.h	/^inline bool RGridView::selectionInvisibleWhenNotInFocus() const$/;"	f	class:RGridView	signature:() const
selectionPolicy	/home/viper/projects/RBit/rgridview.h	/^    SelectionPolicy selectionPolicy() const;$/;"	p	class:RGridView	access:public	signature:() const
selectionPolicy	/home/viper/projects/RBit/rgridview.h	/^inline RGridView::SelectionPolicy RGridView::selectionPolicy() const$/;"	f	class:RGridView	signature:() const
selectionStart	/home/viper/projects/RBit/reditbox.cpp	/^int REditBox::selectionStart() const$/;"	f	class:REditBox	signature:() const
selectionStart	/home/viper/projects/RBit/reditbox.h	/^    int selectionStart() const;$/;"	p	class:REditBox	access:public	signature:() const
serialize_rcolor	/home/viper/projects/RBit/rcolor.h	/^inline int serialize_rcolor(const RColor& col)$/;"	f	signature:(const RColor& col)
set	/home/viper/projects/RBit/rarraycontainer.h	/^	void    set(T* array, Uint32 size);$/;"	p	class:RArrayContainer	access:public	signature:(T* array, Uint32 size)
set	/home/viper/projects/RBit/rarraycontainer.h	/^inline void RArrayContainer<T>::set(T* array, Uint32 size)$/;"	f	class:RArrayContainer	signature:(T* array, Uint32 size)
setAlpha	/home/viper/projects/RBit/rcolor.h	/^    void setAlpha(Uint8 a);$/;"	p	class:RColor	access:public	signature:(Uint8 a)
setAlpha	/home/viper/projects/RBit/rcolor.h	/^inline void RColor::setAlpha(Uint8 a)$/;"	f	class:RColor	signature:(Uint8 a)
setAltEnterEnabled	/home/viper/projects/RBit/rapplication.h	/^    void setAltEnterEnabled(bool enabled);$/;"	p	class:RApplication	access:public	signature:(bool enabled)
setAltEnterEnabled	/home/viper/projects/RBit/rapplication.h	/^inline void RApplication::setAltEnterEnabled(bool enabled)$/;"	f	class:RApplication	signature:(bool enabled)
setAutoRepeat	/home/viper/projects/RBit/rbutton.cpp	/^void RButton::setAutoRepeat(bool yes)$/;"	f	class:RButton	signature:(bool yes)
setAutoRepeat	/home/viper/projects/RBit/rbutton.h	/^    void setAutoRepeat(bool autoRepeat);$/;"	p	class:RButton	access:public	signature:(bool autoRepeat)
setBackgroundColor	/home/viper/projects/RBit/rgridmodel.h	/^    virtual bool setBackgroundColor(Sint32 row, Sint32 column, const RColor& color) $/;"	f	class:RGridModel	access:public	signature:(Sint32 row, Sint32 column, const RColor& color)
setBackgroundColor	/home/viper/projects/RBit/rheadermodel.h	/^    virtual bool setBackgroundColor(Sint32 section, const RColor& color) $/;"	f	class:RHeaderModel	access:public	signature:(Sint32 section, const RColor& color)
setBackgroundColor	/home/viper/projects/RBit/rsimplegridmodel.cpp	/^bool RSimpleGridModel::setBackgroundColor(Sint32 row, Sint32 column, const RColor& color)$/;"	f	class:RSimpleGridModel	signature:(Sint32 row, Sint32 column, const RColor& color)
setBackgroundColor	/home/viper/projects/RBit/rsimplegridmodel.h	/^        void setBackgroundColor(const RColor&);$/;"	p	class:RSimpleGridModel::Item	access:public	signature:(const RColor&)
setBackgroundColor	/home/viper/projects/RBit/rsimplegridmodel.h	/^    virtual bool setBackgroundColor(Sint32 row, Sint32 column, const RColor& color);$/;"	p	class:RSimpleGridModel	access:public	signature:(Sint32 row, Sint32 column, const RColor& color)
setBackgroundColor	/home/viper/projects/RBit/rsimplegridmodel.h	/^inline void RSimpleGridModel::Item::setBackgroundColor(const RColor& bg)$/;"	f	class:RSimpleGridModel::Item	signature:(const RColor& bg)
setBackgroundColor	/home/viper/projects/RBit/rsimpleheadermodel.cpp	/^bool RSimpleHeaderModel::setBackgroundColor(Sint32 section, const RColor& color)$/;"	f	class:RSimpleHeaderModel	signature:(Sint32 section, const RColor& color)
setBackgroundColor	/home/viper/projects/RBit/rsimpleheadermodel.h	/^        void setBackgroundColor(const RColor&);$/;"	p	class:RSimpleHeaderModel::Item	access:public	signature:(const RColor&)
setBackgroundColor	/home/viper/projects/RBit/rsimpleheadermodel.h	/^    virtual bool setBackgroundColor(Sint32 section, const RColor& color);$/;"	p	class:RSimpleHeaderModel	access:public	signature:(Sint32 section, const RColor& color)
setBackgroundColor	/home/viper/projects/RBit/rsimpleheadermodel.h	/^inline void RSimpleHeaderModel::Item::setBackgroundColor(const RColor& bg)$/;"	f	class:RSimpleHeaderModel::Item	signature:(const RColor& bg)
setBackgroundRole	/home/viper/projects/RBit/rwidget.cpp	/^void RWidget::setBackgroundRole(RPalette::ColorRole role)$/;"	f	class:RWidget	signature:(RPalette::ColorRole role)
setBackgroundRole	/home/viper/projects/RBit/rwidget.h	/^    void setBackgroundRole(RPalette::ColorRole);$/;"	p	class:RWidget	access:public	signature:(RPalette::ColorRole)
setBottom	/home/viper/projects/RBit/rrect.h	/^    void setBottom(Sint16 pos);$/;"	p	class:RRect	access:public	signature:(Sint16 pos)
setBottom	/home/viper/projects/RBit/rrect.h	/^inline void RRect::setBottom(Sint16 pos)$/;"	f	class:RRect	signature:(Sint16 pos)
setBottomLeft	/home/viper/projects/RBit/rrect.h	/^    void setBottomLeft(const RPoint &p);$/;"	p	class:RRect	access:public	signature:(const RPoint &p)
setBottomRight	/home/viper/projects/RBit/rrect.h	/^    void setBottomRight(const RPoint &p);$/;"	p	class:RRect	access:public	signature:(const RPoint &p)
setButtonSize	/home/viper/projects/RBit/rmessagebox.h	/^    void setButtonSize(const RSize& s);$/;"	p	class:RMessageBox	access:public	signature:(const RSize& s)
setButtonSize	/home/viper/projects/RBit/rmessagebox.h	/^inline void RMessageBox::setButtonSize(const RSize& s)$/;"	f	class:RMessageBox	signature:(const RSize& s)
setCaption	/home/viper/projects/RBit/rapplication.h	/^    void setCaption(const char* name);$/;"	p	class:RApplication	access:public	signature:(const char* name)
setCaption	/home/viper/projects/RBit/rapplication.h	/^inline void RApplication::setCaption(const char* name)$/;"	f	class:RApplication	signature:(const char* name)
setCaption	/home/viper/projects/RBit/rmessagebox.h	/^    void setCaption(const char* text);   $/;"	p	class:RMessageBox	access:public	signature:(const char* text)
setCaptionPolicy	/home/viper/projects/RBit/captionwidget.h	/^	void setCaptionPolicy(CaptionPolicy p);$/;"	p	class:CCaptionWidget	access:public	signature:(CaptionPolicy p)
setCaptionPolicy	/home/viper/projects/RBit/captionwidget.h	/^inline void CCaptionWidget::setCaptionPolicy(CaptionPolicy p)$/;"	f	class:CCaptionWidget	signature:(CaptionPolicy p)
setCheckState	/home/viper/projects/RBit/rcheckbox.cpp	/^void RCheckBox::setCheckState(RBit::CheckState state)$/;"	f	class:RCheckBox	signature:(RBit::CheckState state)
setCheckState	/home/viper/projects/RBit/rcheckbox.h	/^    void setCheckState(RBit::CheckState state);$/;"	p	class:RCheckBox	access:public	signature:(RBit::CheckState state)
setCheckable	/home/viper/projects/RBit/rbutton.cpp	/^void RButton::setCheckable(bool checkable)$/;"	f	class:RButton	signature:(bool checkable)
setCheckable	/home/viper/projects/RBit/rbutton.h	/^    void setCheckable(bool checkable);$/;"	p	class:RButton	access:public	signature:(bool checkable)
setChecked	/home/viper/projects/RBit/rbutton.cpp	/^void RButton::setChecked(bool checked)$/;"	f	class:RButton	signature:(bool checked)
setChecked	/home/viper/projects/RBit/rbutton.h	/^    void setChecked(bool checked);$/;"	p	class:RButton	access:public	signature:(bool checked)
setClickable	/home/viper/projects/RBit/rheaderview.cpp	/^void RHeaderView::setClickable(bool clickable)$/;"	f	class:RHeaderView	signature:(bool clickable)
setClickable	/home/viper/projects/RBit/rheaderview.h	/^    void setClickable(bool clickable);$/;"	p	class:RHeaderView	access:public	signature:(bool clickable)
setColor	/home/viper/projects/RBit/rpalette.cpp	/^void RPalette::setColor(ColorRole cr, const RColor& b)$/;"	f	class:RPalette	signature:(ColorRole cr, const RColor& b)
setColor	/home/viper/projects/RBit/rpalette.h	/^    void setColor(ColorRole cr, const RColor& color); $/;"	p	class:RPalette	access:public	signature:(ColorRole cr, const RColor& color)
setCurrentColumn	/home/viper/projects/RBit/rgridview.cpp	/^void RGridView::setCurrentColumn(Sint32 column)$/;"	f	class:RGridView	signature:(Sint32 column)
setCurrentColumn	/home/viper/projects/RBit/rgridview.h	/^    void setCurrentColumn(Sint32 column);$/;"	p	class:RGridView	access:public	signature:(Sint32 column)
setCurrentIndex	/home/viper/projects/RBit/rgridview.h	/^    void setCurrentIndex(Sint32 row, Sint32 column);$/;"	p	class:RGridView	access:protected	signature:(Sint32 row, Sint32 column)
setCurrentIndex	/home/viper/projects/RBit/rgridview.h	/^inline void RGridView::setCurrentIndex(Sint32 row, Sint32 column)$/;"	f	class:RGridView	signature:(Sint32 row, Sint32 column)
setCurrentRow	/home/viper/projects/RBit/rcombobox.cpp	/^void RComboBox::setCurrentRow(Sint32 row)$/;"	f	class:RComboBox	signature:(Sint32 row)
setCurrentRow	/home/viper/projects/RBit/rcombobox.h	/^    void setCurrentRow(Sint32 row);$/;"	p	class:RComboBox	access:public	signature:(Sint32 row)
setCurrentRow	/home/viper/projects/RBit/rgridview.cpp	/^void RGridView::setCurrentRow(Sint32 row)$/;"	f	class:RGridView	signature:(Sint32 row)
setCurrentRow	/home/viper/projects/RBit/rgridview.h	/^    void setCurrentRow(Sint32 row);$/;"	p	class:RGridView	access:public	signature:(Sint32 row)
setCursorFlashTime	/home/viper/projects/RBit/rapplication.h	/^    void setCursorFlashTime(uint msecs); $/;"	p	class:RApplication	access:public	signature:(uint msecs)
setCursorFlashTime	/home/viper/projects/RBit/rapplication.h	/^inline void RApplication::setCursorFlashTime(uint msecs)$/;"	f	class:RApplication	signature:(uint msecs)
setCursorPosition	/home/viper/projects/RBit/reditbox.cpp	/^void REditBox::setCursorPosition(Sint32 pos)$/;"	f	class:REditBox	signature:(Sint32 pos)
setCursorPosition	/home/viper/projects/RBit/reditbox.h	/^    void setCursorPosition(Sint32 pos);$/;"	p	class:REditBox	access:public	signature:(Sint32 pos)
setCursorVisible	/home/viper/projects/RBit/reditbox.h	/^    void setCursorVisible(bool visible);$/;"	p	class:REditBox	access:protected	signature:(bool visible)
setCursorVisible	/home/viper/projects/RBit/reditbox.h	/^inline void REditBox::setCursorVisible(bool visible)$/;"	f	class:REditBox	signature:(bool visible)
setDarkColor	/home/viper/projects/RBit/rheadermodel.h	/^    virtual bool setDarkColor(Sint32 section, const RColor& color) $/;"	f	class:RHeaderModel	access:public	signature:(Sint32 section, const RColor& color)
setDarkColor	/home/viper/projects/RBit/rsimpleheadermodel.cpp	/^bool RSimpleHeaderModel::setDarkColor(Sint32 section, const RColor& color)$/;"	f	class:RSimpleHeaderModel	signature:(Sint32 section, const RColor& color)
setDarkColor	/home/viper/projects/RBit/rsimpleheadermodel.h	/^        void setDarkColor(const RColor&);$/;"	p	class:RSimpleHeaderModel::Item	access:public	signature:(const RColor&)
setDarkColor	/home/viper/projects/RBit/rsimpleheadermodel.h	/^    virtual bool setDarkColor(Sint32 section, const RColor& color);$/;"	p	class:RSimpleHeaderModel	access:public	signature:(Sint32 section, const RColor& color)
setDarkColor	/home/viper/projects/RBit/rsimpleheadermodel.h	/^inline void RSimpleHeaderModel::Item::setDarkColor(const RColor& darkColor)$/;"	f	class:RSimpleHeaderModel::Item	signature:(const RColor& darkColor)
setDataType	/home/viper/projects/RBit/rgridmodel.h	/^    virtual bool setDataType(Sint32 column, RModelDataTypeBase* type) $/;"	f	class:RGridModel	access:public	signature:(Sint32 column, RModelDataTypeBase* type)
setDataType	/home/viper/projects/RBit/rsimplegridmodel.cpp	/^bool RSimpleGridModel::setDataType(Sint32 column, RModelDataTypeBase* type)$/;"	f	class:RSimpleGridModel	signature:(Sint32 column, RModelDataTypeBase* type)
setDataType	/home/viper/projects/RBit/rsimplegridmodel.h	/^    virtual bool setDataType(Sint32 column, RModelDataTypeBase* type);$/;"	p	class:RSimpleGridModel	access:public	signature:(Sint32 column, RModelDataTypeBase* type)
setDefaultSectionSize	/home/viper/projects/RBit/rheaderview.h	/^    void setDefaultSectionSize(Uint16 size);$/;"	p	class:RHeaderView	access:public	signature:(Uint16 size)
setDefaultSectionSize	/home/viper/projects/RBit/rheaderview.h	/^inline void RHeaderView::setDefaultSectionSize(Uint16 size)$/;"	f	class:RHeaderView	signature:(Uint16 size)
setDoubleClickEnabled	/home/viper/projects/RBit/rapplication.h	/^    void setDoubleClickEnabled(bool enabled);$/;"	p	class:RApplication	access:public	signature:(bool enabled)
setDoubleClickEnabled	/home/viper/projects/RBit/rapplication.h	/^inline void RApplication::setDoubleClickEnabled(bool enabled)$/;"	f	class:RApplication	signature:(bool enabled)
setDoubleClickMargin	/home/viper/projects/RBit/rapplication.h	/^    void setDoubleClickMargin(uint margin);$/;"	p	class:RApplication	access:public	signature:(uint margin)
setDoubleClickMargin	/home/viper/projects/RBit/rapplication.h	/^inline void RApplication::setDoubleClickMargin(uint margin) $/;"	f	class:RApplication	signature:(uint margin)
setEchoMode	/home/viper/projects/RBit/reditbox.h	/^    void setEchoMode(EchoMode m);$/;"	p	class:REditBox	access:public	signature:(EchoMode m)
setEchoMode	/home/viper/projects/RBit/reditbox.h	/^inline void REditBox::setEchoMode(enum REditBox::EchoMode m)$/;"	f	class:REditBox	signature:(enum REditBox::EchoMode m)
setEditable	/home/viper/projects/RBit/rcombobox.cpp	/^void RComboBox::setEditable(bool b)$/;"	f	class:RComboBox	signature:(bool b)
setEditable	/home/viper/projects/RBit/rcombobox.h	/^	void setEditable(bool b);$/;"	p	class:RComboBox	access:public	signature:(bool b)
setEditable	/home/viper/projects/RBit/reditbox.h	/^    void setEditable(bool editable);            $/;"	p	class:REditBox	access:public	signature:(bool editable)
setEditable	/home/viper/projects/RBit/reditbox.h	/^inline void REditBox::setEditable(bool e)$/;"	f	class:REditBox	signature:(bool e)
setEnabled	/home/viper/projects/RBit/rwidget.cpp	/^void RWidget::setEnabled(bool enabled)$/;"	f	class:RWidget	signature:(bool enabled)
setEnabled	/home/viper/projects/RBit/rwidget.h	/^    void setEnabled(bool enabled);$/;"	p	class:RWidget	access:public	signature:(bool enabled)
setEnabled_helper	/home/viper/projects/RBit/rwidget.cpp	/^void RWidget::setEnabled_helper(bool enabled)$/;"	f	class:RWidget	signature:(bool enabled)
setEnabled_helper	/home/viper/projects/RBit/rwidget.h	/^    void setEnabled_helper(bool enabled);$/;"	p	class:RWidget	access:private	signature:(bool enabled)
setFlags	/home/viper/projects/RBit/rgridmodel.h	/^    virtual bool setFlags(Sint32 row, Sint32 column) $/;"	f	class:RGridModel	access:public	signature:(Sint32 row, Sint32 column)
setFlat	/home/viper/projects/RBit/rbutton.cpp	/^void RButton::setFlat(bool yes)$/;"	f	class:RButton	signature:(bool yes)
setFlat	/home/viper/projects/RBit/rbutton.h	/^    void setFlat(bool flat);$/;"	p	class:RButton	access:public	signature:(bool flat)
setFocus	/home/viper/projects/RBit/rwidget.h	/^    void setFocus();$/;"	p	class:RWidget	access:public	signature:()
setFocus	/home/viper/projects/RBit/rwidget.h	/^inline void RWidget::setFocus()$/;"	f	class:RWidget	signature:()
setFocusRectEnabled	/home/viper/projects/RBit/rgridview.h	/^    void setFocusRectEnabled(bool enabled);$/;"	p	class:RGridView	access:public	signature:(bool enabled)
setFocusRectEnabled	/home/viper/projects/RBit/rgridview.h	/^inline void RGridView::setFocusRectEnabled(bool enabled)$/;"	f	class:RGridView	signature:(bool enabled)
setFocusWidget	/home/viper/projects/RBit/rapplication.cpp	/^void RApplication::setFocusWidget(RWidget* w)$/;"	f	class:RApplication	signature:(RWidget* w)
setFocusWidget	/home/viper/projects/RBit/rapplication.h	/^    void setFocusWidget(RWidget* w);$/;"	p	class:RApplication	access:protected	signature:(RWidget* w)
setFont	/home/viper/projects/RBit/rapplication.cpp	/^void RApplication::setFont(const RFont& font)$/;"	f	class:RApplication	signature:(const RFont& font)
setFont	/home/viper/projects/RBit/rapplication.h	/^    void setFont(const RFont& font);$/;"	p	class:RApplication	access:public	signature:(const RFont& font)
setFont	/home/viper/projects/RBit/rgridmodel.h	/^    virtual bool setFont(Sint32 row, Sint32 column, const RFont& font)$/;"	f	class:RGridModel	access:public	signature:(Sint32 row, Sint32 column, const RFont& font)
setFont	/home/viper/projects/RBit/rheadermodel.h	/^    virtual bool setFont(Sint32 section, const RFont& font) $/;"	f	class:RHeaderModel	access:public	signature:(Sint32 section, const RFont& font)
setFont	/home/viper/projects/RBit/rsimplegridmodel.cpp	/^bool RSimpleGridModel::setFont(Sint32 row, Sint32 column, const RFont& font)$/;"	f	class:RSimpleGridModel	signature:(Sint32 row, Sint32 column, const RFont& font)
setFont	/home/viper/projects/RBit/rsimplegridmodel.h	/^        void setFont(const RFont&);$/;"	p	class:RSimpleGridModel::Item	access:public	signature:(const RFont&)
setFont	/home/viper/projects/RBit/rsimplegridmodel.h	/^    virtual bool setFont(Sint32 row, Sint32 column, const RFont& font);$/;"	p	class:RSimpleGridModel	access:public	signature:(Sint32 row, Sint32 column, const RFont& font)
setFont	/home/viper/projects/RBit/rsimplegridmodel.h	/^inline void RSimpleGridModel::Item::setFont(const RFont& font)$/;"	f	class:RSimpleGridModel::Item	signature:(const RFont& font)
setFont	/home/viper/projects/RBit/rsimpleheadermodel.h	/^        void setFont(const RFont&);$/;"	p	class:RSimpleHeaderModel::Item	access:public	signature:(const RFont&)
setFont	/home/viper/projects/RBit/rsimpleheadermodel.h	/^inline void RSimpleHeaderModel::Item::setFont(const RFont& font)$/;"	f	class:RSimpleHeaderModel::Item	signature:(const RFont& font)
setFont	/home/viper/projects/RBit/rtextpainter.h	/^    void setFont(const RFont& f);$/;"	p	class:RTextPainter	access:public	signature:(const RFont& f)
setFont	/home/viper/projects/RBit/rtextpainter.h	/^inline void RTextPainter::setFont(const RFont& f)$/;"	f	class:RTextPainter	signature:(const RFont& f)
setForegroundColor	/home/viper/projects/RBit/rgridmodel.h	/^    virtual bool setForegroundColor(Sint32 row, Sint32 column, const RColor& color) $/;"	f	class:RGridModel	access:public	signature:(Sint32 row, Sint32 column, const RColor& color)
setForegroundColor	/home/viper/projects/RBit/rheadermodel.h	/^    virtual bool setForegroundColor(Sint32 section, const RColor& color) $/;"	f	class:RHeaderModel	access:public	signature:(Sint32 section, const RColor& color)
setForegroundColor	/home/viper/projects/RBit/rsimplegridmodel.cpp	/^bool RSimpleGridModel::setForegroundColor(Sint32 row, Sint32 column, const RColor& color)$/;"	f	class:RSimpleGridModel	signature:(Sint32 row, Sint32 column, const RColor& color)
setForegroundColor	/home/viper/projects/RBit/rsimplegridmodel.h	/^        void setForegroundColor(const RColor&);$/;"	p	class:RSimpleGridModel::Item	access:public	signature:(const RColor&)
setForegroundColor	/home/viper/projects/RBit/rsimplegridmodel.h	/^    virtual bool setForegroundColor(Sint32 row, Sint32 column, const RColor& color);$/;"	p	class:RSimpleGridModel	access:public	signature:(Sint32 row, Sint32 column, const RColor& color)
setForegroundColor	/home/viper/projects/RBit/rsimplegridmodel.h	/^inline void RSimpleGridModel::Item::setForegroundColor(const RColor& fg)$/;"	f	class:RSimpleGridModel::Item	signature:(const RColor& fg)
setForegroundColor	/home/viper/projects/RBit/rsimpleheadermodel.cpp	/^bool RSimpleHeaderModel::setForegroundColor(Sint32 section, const RColor& color)$/;"	f	class:RSimpleHeaderModel	signature:(Sint32 section, const RColor& color)
setForegroundColor	/home/viper/projects/RBit/rsimpleheadermodel.h	/^        void setForegroundColor(const RColor&);$/;"	p	class:RSimpleHeaderModel::Item	access:public	signature:(const RColor&)
setForegroundColor	/home/viper/projects/RBit/rsimpleheadermodel.h	/^    virtual bool setForegroundColor(Sint32 section, const RColor& color);$/;"	p	class:RSimpleHeaderModel	access:public	signature:(Sint32 section, const RColor& color)
setForegroundColor	/home/viper/projects/RBit/rsimpleheadermodel.h	/^inline void RSimpleHeaderModel::Item::setForegroundColor(const RColor& fg)$/;"	f	class:RSimpleHeaderModel::Item	signature:(const RColor& fg)
setForegroundRole	/home/viper/projects/RBit/rwidget.cpp	/^void RWidget::setForegroundRole(RPalette::ColorRole role)$/;"	f	class:RWidget	signature:(RPalette::ColorRole role)
setForegroundRole	/home/viper/projects/RBit/rwidget.h	/^    void setForegroundRole(RPalette::ColorRole);$/;"	p	class:RWidget	access:public	signature:(RPalette::ColorRole)
setFrameLineWidth	/home/viper/projects/RBit/rframepainter.h	/^    void setFrameLineWidth(Uint8 w);$/;"	p	class:RFramePainter	access:public	signature:(Uint8 w)
setFrameLineWidth	/home/viper/projects/RBit/rframepainter.h	/^inline void RFramePainter::setFrameLineWidth(Uint8 w)$/;"	f	class:RFramePainter	signature:(Uint8 w)
setFrameMidLineWidth	/home/viper/projects/RBit/rframepainter.h	/^    void setFrameMidLineWidth(Uint8 w);$/;"	p	class:RFramePainter	access:public	signature:(Uint8 w)
setFrameMidLineWidth	/home/viper/projects/RBit/rframepainter.h	/^inline void RFramePainter::setFrameMidLineWidth(Uint8 w)$/;"	f	class:RFramePainter	signature:(Uint8 w)
setFrameShadow	/home/viper/projects/RBit/rframepainter.h	/^    void setFrameShadow(RFrameShadowFlags s);$/;"	p	class:RFramePainter	access:public	signature:(RFrameShadowFlags s)
setFrameShadow	/home/viper/projects/RBit/rframepainter.h	/^inline void RFramePainter::setFrameShadow(RFrameShadowFlags s)$/;"	f	class:RFramePainter	signature:(RFrameShadowFlags s)
setFrameShape	/home/viper/projects/RBit/rframepainter.h	/^    void setFrameShape(RFrameShapeFlags s);$/;"	p	class:RFramePainter	access:public	signature:(RFrameShapeFlags s)
setFrameShape	/home/viper/projects/RBit/rframepainter.h	/^inline void RFramePainter::setFrameShape(RFrameShapeFlags s)$/;"	f	class:RFramePainter	signature:(RFrameShapeFlags s)
setFrameStyle	/home/viper/projects/RBit/rframepainter.h	/^    void setFrameStyle(int s);$/;"	p	class:RFramePainter	access:public	signature:(int s)
setFrameStyle	/home/viper/projects/RBit/rframepainter.h	/^inline void RFramePainter::setFrameStyle(int s)$/;"	f	class:RFramePainter	signature:(int s)
setGeometry	/home/viper/projects/RBit/rcombobox.cpp	/^void RComboBox::setGeometry(const RPoint& p, const RSize& s)$/;"	f	class:RComboBox	signature:(const RPoint& p, const RSize& s)
setGeometry	/home/viper/projects/RBit/rcombobox.h	/^	virtual void setGeometry(const RPoint& p, const RSize& s);$/;"	p	class:RComboBox	access:public	signature:(const RPoint& p, const RSize& s)
setGeometry	/home/viper/projects/RBit/rcombobox.h	/^	void setGeometry(const RRect& g);$/;"	p	class:RComboBox	access:public	signature:(const RRect& g)
setGeometry	/home/viper/projects/RBit/rcombobox.h	/^inline void RComboBox::setGeometry(const RRect& g)$/;"	f	class:RComboBox	signature:(const RRect& g)
setGeometry	/home/viper/projects/RBit/reditbox.cpp	/^void REditBox::setGeometry(const RPoint& pos, const RSize& s)$/;"	f	class:REditBox	signature:(const RPoint& pos, const RSize& s)
setGeometry	/home/viper/projects/RBit/reditbox.h	/^    virtual void setGeometry(const RPoint& pos, const RSize& size);$/;"	p	class:REditBox	access:public	signature:(const RPoint& pos, const RSize& size)
setGeometry	/home/viper/projects/RBit/reditbox.h	/^    void setGeometry(const RRect& rect);$/;"	p	class:REditBox	access:public	signature:(const RRect& rect)
setGeometry	/home/viper/projects/RBit/reditbox.h	/^inline void REditBox::setGeometry(const RRect& rect)$/;"	f	class:REditBox	signature:(const RRect& rect)
setGeometry	/home/viper/projects/RBit/rgridview.cpp	/^void RGridView::Viewport::setGeometry(const RPoint& p, const RSize& s)$/;"	f	class:RGridView::Viewport	signature:(const RPoint& p, const RSize& s)
setGeometry	/home/viper/projects/RBit/rgridview.cpp	/^void RGridView::setGeometry(const RPoint& p, const RSize& s)$/;"	f	class:RGridView	signature:(const RPoint& p, const RSize& s)
setGeometry	/home/viper/projects/RBit/rgridview.h	/^        virtual void setGeometry(const RPoint&, const RSize&);$/;"	p	class:RGridView::Viewport	access:public	signature:(const RPoint&, const RSize&)
setGeometry	/home/viper/projects/RBit/rgridview.h	/^    virtual void setGeometry(const RPoint&, const RSize&);$/;"	p	class:RGridView	access:public	signature:(const RPoint&, const RSize&)
setGeometry	/home/viper/projects/RBit/rheaderview.cpp	/^void RHeaderView::setGeometry(const RPoint& p, const RSize& s)$/;"	f	class:RHeaderView	signature:(const RPoint& p, const RSize& s)
setGeometry	/home/viper/projects/RBit/rheaderview.h	/^    virtual void setGeometry(const RPoint& p, const RSize& s);    $/;"	p	class:RHeaderView	access:public	signature:(const RPoint& p, const RSize& s)
setGeometry	/home/viper/projects/RBit/rmessagebox.cpp	/^void RMessageBox::setGeometry(const RPoint& p, const RSize& s)$/;"	f	class:RMessageBox	signature:(const RPoint& p, const RSize& s)
setGeometry	/home/viper/projects/RBit/rmessagebox.h	/^    virtual void setGeometry(const RPoint& p, const RSize& s);$/;"	p	class:RMessageBox	access:public	signature:(const RPoint& p, const RSize& s)
setGeometry	/home/viper/projects/RBit/rmultilinelabel.cpp	/^void RMultilineLabel::setGeometry(const RPoint& p, const RSize& s)$/;"	f	class:RMultilineLabel	signature:(const RPoint& p, const RSize& s)
setGeometry	/home/viper/projects/RBit/rmultilinelabel.h	/^	virtual void		setGeometry(const RPoint& p, const RSize& s);	$/;"	p	class:RMultilineLabel	access:public	signature:(const RPoint& p, const RSize& s)
setGeometry	/home/viper/projects/RBit/rscrollarea.cpp	/^void RScrollArea::Viewport::setGeometry(const RPoint& p, const RSize& s)$/;"	f	class:RScrollArea::Viewport	signature:(const RPoint& p, const RSize& s)
setGeometry	/home/viper/projects/RBit/rscrollarea.cpp	/^void RScrollAreaBase::setGeometry(const RPoint& p, const RSize& s)$/;"	f	class:RScrollAreaBase	signature:(const RPoint& p, const RSize& s)
setGeometry	/home/viper/projects/RBit/rscrollarea.h	/^        virtual void setGeometry(const RPoint& p, const RSize& s);$/;"	p	class:RScrollArea::Viewport	access:public	signature:(const RPoint& p, const RSize& s)
setGeometry	/home/viper/projects/RBit/rscrollarea.h	/^    virtual void setGeometry(const RPoint& p, const RSize& s);$/;"	p	class:RScrollAreaBase	access:public	signature:(const RPoint& p, const RSize& s)
setGeometry	/home/viper/projects/RBit/rscrollwidgetarea.cpp	/^void RScrollWidgetAreaBase::setGeometry(const RPoint& p, const RSize& s)$/;"	f	class:RScrollWidgetAreaBase	signature:(const RPoint& p, const RSize& s)
setGeometry	/home/viper/projects/RBit/rscrollwidgetarea.h	/^    virtual void setGeometry(const RPoint& p, const RSize& s)$/;"	f	class:ScrollWidget	access:protected	signature:(const RPoint& p, const RSize& s)
setGeometry	/home/viper/projects/RBit/rscrollwidgetarea.h	/^    virtual void setGeometry(const RPoint& p, const RSize& s);$/;"	p	class:RScrollWidgetAreaBase	access:public	signature:(const RPoint& p, const RSize& s)
setGeometry	/home/viper/projects/RBit/rwidget.cpp	/^void RWidget::setGeometry(const RPoint& p, const RSize& s)$/;"	f	class:RWidget	signature:(const RPoint& p, const RSize& s)
setGeometry	/home/viper/projects/RBit/rwidget.h	/^    virtual void setGeometry(const RPoint& p, const RSize& s);$/;"	p	class:RWidget	access:public	signature:(const RPoint& p, const RSize& s)
setGeometry	/home/viper/projects/RBit/rwidget.h	/^    void setGeometry(const RRect& r);$/;"	p	class:RWidget	access:public	signature:(const RRect& r)
setGeometry	/home/viper/projects/RBit/rwidget.h	/^inline void RWidget::setGeometry(const RRect& g)$/;"	f	class:RWidget	signature:(const RRect& g)
setGrid	/home/viper/projects/RBit/rgridview.h	/^        inline void setGrid(RGridView* grid) { m_grid = grid; }$/;"	f	class:RGridView::HeaderObserver	access:public	signature:(RGridView* grid)
setHSV	/home/viper/projects/RBit/rcolor.cpp	/^void RColor::setHSV(Uint16 hue, Uint16 saturation, Uint16 value)$/;"	f	class:RColor	signature:(Uint16 hue, Uint16 saturation, Uint16 value)
setHSV	/home/viper/projects/RBit/rcolor.h	/^    void setHSV(Uint16 h, Uint16 s, Uint16 v);$/;"	p	class:RColor	access:public	signature:(Uint16 h, Uint16 s, Uint16 v)
setHeight	/home/viper/projects/RBit/rrect.h	/^    void setHeight(Uint16 h);$/;"	p	class:RRect	access:public	signature:(Uint16 h)
setHeight	/home/viper/projects/RBit/rrect.h	/^inline void RRect::setHeight(Uint16 height)$/;"	f	class:RRect	signature:(Uint16 height)
setHeight	/home/viper/projects/RBit/rsize.h	/^    void setHeight(Uint16 h);$/;"	p	class:RSize	access:public	signature:(Uint16 h)
setHeight	/home/viper/projects/RBit/rsize.h	/^inline void RSize::setHeight(Uint16 h) $/;"	f	class:RSize	signature:(Uint16 h)
setHorizontalHeader	/home/viper/projects/RBit/rgridview.cpp	/^void RGridView::setHorizontalHeader(RHeaderView* header)$/;"	f	class:RGridView	signature:(RHeaderView* header)
setHorizontalHeader	/home/viper/projects/RBit/rgridview.h	/^    void setHorizontalHeader(RHeaderView* header);$/;"	p	class:RGridView	access:protected	signature:(RHeaderView* header)
setHorizontalScrollBarPolicy	/home/viper/projects/RBit/rscrollarea.cpp	/^void RScrollAreaBase::setHorizontalScrollBarPolicy(RScrollAreaBase::ScrollBarPolicy policy)$/;"	f	class:RScrollAreaBase	signature:(RScrollAreaBase::ScrollBarPolicy policy)
setHorizontalScrollBarPolicy	/home/viper/projects/RBit/rscrollarea.h	/^    void setHorizontalScrollBarPolicy(ScrollBarPolicy);$/;"	p	class:RScrollAreaBase	access:public	signature:(ScrollBarPolicy)
setHorizontalStepsPerItem	/home/viper/projects/RBit/rgridview.cpp	/^void RGridView::setHorizontalStepsPerItem(Uint32 steps)$/;"	f	class:RGridView	signature:(Uint32 steps)
setHorizontalStepsPerItem	/home/viper/projects/RBit/rgridview.h	/^    void setHorizontalStepsPerItem(Uint32 steps);$/;"	p	class:RGridView	access:protected	signature:(Uint32 steps)
setIcon	/home/viper/projects/RBit/rmessagebox.h	/^    void setIcon (Icon);$/;"	p	class:RMessageBox	access:public	signature:(Icon)
setIcon	/home/viper/projects/RBit/rmessagebox.h	/^inline void RMessageBox::setIcon(Icon i)$/;"	f	class:RMessageBox	signature:(Icon i)
setId	/home/viper/projects/RBit/ridentity.h	/^	void setId(int id);$/;"	p	class:RIdentity	access:protected	signature:(int id)
setId	/home/viper/projects/RBit/ridentity.h	/^inline void RIdentity::setId(int id)$/;"	f	class:RIdentity	signature:(int id)
setItem	/home/viper/projects/RBit/rsimplegridmodel.h	/^    bool setItem(Sint32 row, Sint32 column, Item* item);        $/;"	p	class:RSimpleGridModel	access:public	signature:(Sint32 row, Sint32 column, Item* item)
setItem	/home/viper/projects/RBit/rsimplegridmodel.h	/^inline bool RSimpleGridModel::setItem(Sint32 row, Sint32 column, RSimpleGridModel::Item* item)$/;"	f	class:RSimpleGridModel	signature:(Sint32 row, Sint32 column, RSimpleGridModel::Item* item)
setItem	/home/viper/projects/RBit/rsimpleheadermodel.h	/^    bool setItem(Sint32 section, Item* item);        $/;"	p	class:RSimpleHeaderModel	access:public	signature:(Sint32 section, Item* item)
setItem	/home/viper/projects/RBit/rsimpleheadermodel.h	/^inline bool RSimpleHeaderModel::setItem(Sint32 section, RSimpleHeaderModel::Item* item)$/;"	f	class:RSimpleHeaderModel	signature:(Sint32 section, RSimpleHeaderModel::Item* item)
setItemPrototype	/home/viper/projects/RBit/rsimplegridmodel.cpp	/^void RSimpleGridModel::setItemPrototype(RSimpleGridModel::Item* item)$/;"	f	class:RSimpleGridModel	signature:(RSimpleGridModel::Item* item)
setItemPrototype	/home/viper/projects/RBit/rsimplegridmodel.h	/^    void setItemPrototype(Item* item);$/;"	p	class:RSimpleGridModel	access:public	signature:(Item* item)
setItemPrototype	/home/viper/projects/RBit/rsimpleheadermodel.cpp	/^void RSimpleHeaderModel::setItemPrototype(RSimpleHeaderModel::Item* item)$/;"	f	class:RSimpleHeaderModel	signature:(RSimpleHeaderModel::Item* item)
setItemPrototype	/home/viper/projects/RBit/rsimpleheadermodel.h	/^    void setItemPrototype(Item* item);$/;"	p	class:RSimpleHeaderModel	access:public	signature:(Item* item)
setKeyAutoRepeat	/home/viper/projects/RBit/rapplication.cpp	/^void RApplication::setKeyAutoRepeat(bool autoRepeat)$/;"	f	class:RApplication	signature:(bool autoRepeat)
setKeyAutoRepeat	/home/viper/projects/RBit/rapplication.h	/^    void setKeyAutoRepeat(bool autoRepeat);$/;"	p	class:RApplication	access:public	signature:(bool autoRepeat)
setKeyAutoRepeatLatency	/home/viper/projects/RBit/rapplication.cpp	/^void RApplication::setKeyAutoRepeatLatency(uint latency)$/;"	f	class:RApplication	signature:(uint latency)
setKeyAutoRepeatLatency	/home/viper/projects/RBit/rapplication.h	/^    void setKeyAutoRepeatLatency(uint delay);$/;"	p	class:RApplication	access:public	signature:(uint delay)
setKeyAutoRepeatPeriod	/home/viper/projects/RBit/rapplication.cpp	/^void RApplication::setKeyAutoRepeatPeriod(uint period)$/;"	f	class:RApplication	signature:(uint period)
setKeyAutoRepeatPeriod	/home/viper/projects/RBit/rapplication.h	/^    void setKeyAutoRepeatPeriod(uint period);$/;"	p	class:RApplication	access:public	signature:(uint period)
setKeyRepeatPeriodLowerBound	/home/viper/projects/RBit/rapplication.cpp	/^void RApplication::setKeyRepeatPeriodLowerBound(uint bound)$/;"	f	class:RApplication	signature:(uint bound)
setKeyRepeatPeriodLowerBound	/home/viper/projects/RBit/rapplication.h	/^    void setKeyRepeatPeriodLowerBound(uint bound);$/;"	p	class:RApplication	access:public	signature:(uint bound)
setLeft	/home/viper/projects/RBit/rrect.h	/^    void setLeft(Sint16 pos);$/;"	p	class:RRect	access:public	signature:(Sint16 pos)
setLeft	/home/viper/projects/RBit/rrect.h	/^inline void RRect::setLeft(Sint16 pos)$/;"	f	class:RRect	signature:(Sint16 pos)
setLightColor	/home/viper/projects/RBit/rheadermodel.h	/^    virtual bool setLightColor(Sint32 section, const RColor& color) $/;"	f	class:RHeaderModel	access:public	signature:(Sint32 section, const RColor& color)
setLightColor	/home/viper/projects/RBit/rsimpleheadermodel.cpp	/^bool RSimpleHeaderModel::setLightColor(Sint32 section, const RColor& color)$/;"	f	class:RSimpleHeaderModel	signature:(Sint32 section, const RColor& color)
setLightColor	/home/viper/projects/RBit/rsimpleheadermodel.h	/^        void setLightColor(const RColor&);$/;"	p	class:RSimpleHeaderModel::Item	access:public	signature:(const RColor&)
setLightColor	/home/viper/projects/RBit/rsimpleheadermodel.h	/^    virtual bool setLightColor(Sint32 section, const RColor& color);$/;"	p	class:RSimpleHeaderModel	access:public	signature:(Sint32 section, const RColor& color)
setLightColor	/home/viper/projects/RBit/rsimpleheadermodel.h	/^inline void RSimpleHeaderModel::Item::setLightColor(const RColor& lightColor)$/;"	f	class:RSimpleHeaderModel::Item	signature:(const RColor& lightColor)
setLineDecoration	/home/viper/projects/RBit/rgridview.h	/^    void setLineDecoration(int flags);$/;"	p	class:RGridView	access:public	signature:(int flags)
setLineDecoration	/home/viper/projects/RBit/rgridview.h	/^inline void RGridView::setLineDecoration(int flags)$/;"	f	class:RGridView	signature:(int flags)
setMaxCount	/home/viper/projects/RBit/rcombobox.cpp	/^void RComboBox::setMaxCount(Sint32 max)$/;"	f	class:RComboBox	signature:(Sint32 max)
setMaxCount	/home/viper/projects/RBit/rcombobox.h	/^    void setMaxCount(Sint32 max);$/;"	p	class:RComboBox	access:public	signature:(Sint32 max)
setMaxPos	/home/viper/projects/RBit/rsplitter.cpp	/^void RSplitter::setMaxPos(int pos)$/;"	f	class:RSplitter	signature:(int pos)
setMaxPos	/home/viper/projects/RBit/rsplitter.h	/^	void setMaxPos(int pos);$/;"	p	class:RSplitter	access:public	signature:(int pos)
setMaxVisibleItems	/home/viper/projects/RBit/rcombobox.cpp	/^void RComboBox::setMaxVisibleItems(Sint32 maxItems)$/;"	f	class:RComboBox	signature:(Sint32 maxItems)
setMaxVisibleItems	/home/viper/projects/RBit/rcombobox.h	/^    void setMaxVisibleItems(Sint32 maxItems);$/;"	p	class:RComboBox	access:public	signature:(Sint32 maxItems)
setMaximum	/home/viper/projects/RBit/rscrollbar.h	/^    void setMaximum(Sint32);$/;"	p	class:RScrollBar	access:public	signature:(Sint32)
setMaximum	/home/viper/projects/RBit/rscrollbar.h	/^inline void RScrollBar::setMaximum(Sint32 max)$/;"	f	class:RScrollBar	signature:(Sint32 max)
setMinPos	/home/viper/projects/RBit/rsplitter.cpp	/^void RSplitter::setMinPos(int pos)$/;"	f	class:RSplitter	signature:(int pos)
setMinPos	/home/viper/projects/RBit/rsplitter.h	/^	void setMinPos(int pos);$/;"	p	class:RSplitter	access:public	signature:(int pos)
setMinimum	/home/viper/projects/RBit/rscrollbar.h	/^    void setMinimum(Sint32);$/;"	p	class:RScrollBar	access:public	signature:(Sint32)
setMinimum	/home/viper/projects/RBit/rscrollbar.h	/^inline void RScrollBar::setMinimum(Sint32 min)$/;"	f	class:RScrollBar	signature:(Sint32 min)
setMinimumContentsLength	/home/viper/projects/RBit/rcombobox.h	/^    void setMinimumContentsLength(Sint32 characters);$/;"	p	class:RComboBox	access:public	signature:(Sint32 characters)
setModel	/home/viper/projects/RBit/rgridview.cpp	/^void RGridView::setModel(RGridModel* m)$/;"	f	class:RGridView	signature:(RGridModel* m)
setModel	/home/viper/projects/RBit/rgridview.h	/^    virtual void setModel(RGridModel* model);$/;"	p	class:RGridView	access:public	signature:(RGridModel* model)
setModel	/home/viper/projects/RBit/rheaderview.cpp	/^void RHeaderView::setModel(RHeaderModel* m)$/;"	f	class:RHeaderView	signature:(RHeaderModel* m)
setModel	/home/viper/projects/RBit/rheaderview.h	/^    virtual void setModel(RHeaderModel*);$/;"	p	class:RHeaderView	access:public	signature:(RHeaderModel*)
setModel	/home/viper/projects/RBit/rsimplegridmodel.h	/^    inline void static setModel(Item* item, RSimpleGridModel* m) { item->m_model = m; }$/;"	f	class:RSimpleGridModel	access:private	signature:(Item* item, RSimpleGridModel* m)
setModel	/home/viper/projects/RBit/rsimpleheadermodel.h	/^    inline void static setModel(Item* item, RSimpleHeaderModel* m) { item->m_model = m; }$/;"	f	class:RSimpleHeaderModel	access:private	signature:(Item* item, RSimpleHeaderModel* m)
setMouseTrackingEnabled	/home/viper/projects/RBit/rapplication.h	/^    bool setMouseTrackingEnabled(bool enabled);   $/;"	p	class:RApplication	access:private	signature:(bool enabled)
setMouseTrackingEnabled	/home/viper/projects/RBit/rapplication.h	/^inline bool RApplication::setMouseTrackingEnabled(bool enabled)$/;"	f	class:RApplication	signature:(bool enabled)
setMouseTrackingEnabled	/home/viper/projects/RBit/rwidget.h	/^    void setMouseTrackingEnabled(bool enabled);			\/* ‡ÁÂ¯‡ÂÚ ÎÓ‚ËÚ¸ „ÎÓ·‡Î¸ÌÓÂ ‰‚ËÊÂÌËÂ Ï˚¯¸˛ (‚ ‚Ë‰ÊËÚÂ Ó·‡·ÓÚÍ‡)*\/$/;"	p	class:RWidget	access:public	signature:(bool enabled)
setMouseTrackingEnabled	/home/viper/projects/RBit/rwidget.h	/^inline void RWidget::setMouseTrackingEnabled(bool enabled)$/;"	f	class:RWidget	signature:(bool enabled)
setObserver	/home/viper/projects/RBit/rsubjectobserver.h	/^    void setObserver(Observer* o)$/;"	f	class:RSubject	access:public	signature:(Observer* o)
setObserverEnabled	/home/viper/projects/RBit/rsubjectobserver.h	/^	void setObserverEnabled(bool enabled = true)$/;"	f	class:RObserver	access:public	signature:(bool enabled = true)
setOffset	/home/viper/projects/RBit/rheaderview.cpp	/^void RHeaderView::setOffset(int o)$/;"	f	class:RHeaderView	signature:(int o)
setOffset	/home/viper/projects/RBit/rheaderview.h	/^    virtual void setOffset(Sint32 offset);$/;"	p	class:RHeaderView	access:public	signature:(Sint32 offset)
setPageStep	/home/viper/projects/RBit/rscrollbar.cpp	/^void RScrollBar::setPageStep(Uint32 pageStep)$/;"	f	class:RScrollBar	signature:(Uint32 pageStep)
setPageStep	/home/viper/projects/RBit/rscrollbar.h	/^    void setPageStep(Uint32);$/;"	p	class:RScrollBar	access:public	signature:(Uint32)
setPalette	/home/viper/projects/RBit/rapplication.cpp	/^void RApplication::setPalette(const RPalette& p)$/;"	f	class:RApplication	signature:(const RPalette& p)
setPalette	/home/viper/projects/RBit/rapplication.h	/^    void setPalette(const RPalette&);$/;"	p	class:RApplication	access:public	signature:(const RPalette&)
setPalette	/home/viper/projects/RBit/rpalette.cpp	/^void RPalette::setPalette(const RColor& windowText, const RColor& button,$/;"	f	class:RPalette	signature:(const RColor& windowText, const RColor& button, const RColor& light, const RColor& dark, const RColor& mid, const RColor& text, const RColor& bright_text, const RColor& base, const RColor& alternate_base, const RColor& window, const RColor& midlight, const RColor& button_text, const RColor& shadow, const RColor& highlight, const RColor& highlighted_text)
setPalette	/home/viper/projects/RBit/rpalette.cpp	/^void RPalette::setPalette(const RColor& windowText, const RColor& button,$/;"	f	class:RPalette	signature:(const RColor& windowText, const RColor& button, const RColor& light, const RColor& dark, const RColor& mid, const RColor& text, const RColor& bright_text, const RColor& base, const RColor& window)
setPalette	/home/viper/projects/RBit/rpalette.h	/^    void setPalette(const RColor& windowText, const RColor& button,$/;"	p	class:RPalette	access:private	signature:(const RColor& windowText, const RColor& button, const RColor& light, const RColor& dark, const RColor& mid, const RColor& text, const RColor& bright_text, const RColor& base, const RColor& alternate_base, const RColor& window, const RColor& midlight, const RColor& button_text, const RColor& shadow, const RColor& highlight, const RColor& highlighted_text)
setPalette	/home/viper/projects/RBit/rpalette.h	/^    void setPalette(const RColor& windowText, const RColor& button,$/;"	p	class:RPalette	access:public	signature:(const RColor& windowText, const RColor& button, const RColor& light, const RColor& dark, const RColor& mid, const RColor& text, const RColor& bright_text, const RColor& base, const RColor& window)
setPalette	/home/viper/projects/RBit/rwidget.cpp	/^void RWidget::setPalette(const RPalette& pal)$/;"	f	class:RWidget	signature:(const RPalette& pal)
setPalette	/home/viper/projects/RBit/rwidget.h	/^    void setPalette(const RPalette&);$/;"	p	class:RWidget	access:public	signature:(const RPalette&)
setPalette	/home/viper/projects/RBit/rwidgetdefaultsettings.cpp	/^void RWidgetDefaultSettingsHelper::setPalette(const RPalette& pal, const char* className)$/;"	f	class:RWidgetDefaultSettingsHelper	signature:(const RPalette& pal, const char* className)
setPalette	/home/viper/projects/RBit/rwidgetdefaultsettings.h	/^    static void setPalette(const RPalette& pal)$/;"	f	class:RWidgetDefaultSettings	access:public	signature:(const RPalette& pal)
setPalette	/home/viper/projects/RBit/rwidgetdefaultsettings.h	/^    void setPalette(const RPalette& pal, const char* className);$/;"	p	class:RWidgetDefaultSettingsHelper	access:public	signature:(const RPalette& pal, const char* className)
setPos	/home/viper/projects/RBit/rwidget.h	/^    void setPos(Sint16 x, Sint16 y);$/;"	p	class:RWidget	access:public	signature:(Sint16 x, Sint16 y)
setPos	/home/viper/projects/RBit/rwidget.h	/^    void setPos(const RPoint& p);$/;"	p	class:RWidget	access:public	signature:(const RPoint& p)
setPos	/home/viper/projects/RBit/rwidget.h	/^inline void RWidget::setPos(Sint16 x, Sint16 y)$/;"	f	class:RWidget	signature:(Sint16 x, Sint16 y)
setPos	/home/viper/projects/RBit/rwidget.h	/^inline void RWidget::setPos(const RPoint& p)$/;"	f	class:RWidget	signature:(const RPoint& p)
setRGB	/home/viper/projects/RBit/rcolor.cpp	/^void RColor::setRGB(Uint8 r, Uint8 g, Uint8 b)$/;"	f	class:RColor	signature:(Uint8 r, Uint8 g, Uint8 b)
setRGB	/home/viper/projects/RBit/rcolor.h	/^	void setRGB(Uint8 r, Uint8 g, Uint8 b);$/;"	p	class:RColor	access:public	signature:(Uint8 r, Uint8 g, Uint8 b)
setRGBA	/home/viper/projects/RBit/rcolor.h	/^    void setRGBA(Uint8 r, Uint8 g, Uint8 b, Uint8 a);    $/;"	p	class:RColor	access:public	signature:(Uint8 r, Uint8 g, Uint8 b, Uint8 a)
setRange	/home/viper/projects/RBit/rscrollbar.cpp	/^void RScrollBar::setRange(Sint32 min_, Sint32 max_)$/;"	f	class:RScrollBar	signature:(Sint32 min_, Sint32 max_)
setRange	/home/viper/projects/RBit/rscrollbar.h	/^    void setRange(Sint32 min, Sint32 max);$/;"	p	class:RScrollBar	access:public	signature:(Sint32 min, Sint32 max)
setRect	/home/viper/projects/RBit/rrect.h	/^    void setRect(Sint16 x, Sint16 y, Uint16 w, Uint16 h);$/;"	p	class:RRect	access:public	signature:(Sint16 x, Sint16 y, Uint16 w, Uint16 h)
setRect	/home/viper/projects/RBit/rrect.h	/^inline void RRect::setRect(Sint16 x, Sint16 y, Uint16 w, Uint16 h)$/;"	f	class:RRect	signature:(Sint16 x, Sint16 y, Uint16 w, Uint16 h)
setRepeatAction	/home/viper/projects/RBit/rscrollbar.cpp	/^void RScrollBar::setRepeatAction(ScrollAction action, Uint16 thresholdTime, Uint16 repeatTime)$/;"	f	class:RScrollBar	signature:(ScrollAction action, Uint16 thresholdTime, Uint16 repeatTime)
setRepeatAction	/home/viper/projects/RBit/rscrollbar.h	/^    void setRepeatAction(ScrollAction action, Uint16 thresholdTime = 500, Uint16 repeatTime = 50);$/;"	p	class:RScrollBar	access:protected	signature:(ScrollAction action, Uint16 thresholdTime = 500, Uint16 repeatTime = 50)
setResizeMode	/home/viper/projects/RBit/rheaderview.cpp	/^void RHeaderView::setResizeMode(RHeaderView::ResizeMode mode)$/;"	f	class:RHeaderView	signature:(RHeaderView::ResizeMode mode)
setResizeMode	/home/viper/projects/RBit/rheaderview.cpp	/^void RHeaderView::setResizeMode(Sint32 section, ResizeMode mode)$/;"	f	class:RHeaderView	signature:(Sint32 section, ResizeMode mode)
setResizeMode	/home/viper/projects/RBit/rheaderview.h	/^    void setResizeMode(ResizeMode mode);$/;"	p	class:RHeaderView	access:public	signature:(ResizeMode mode)
setResizeMode	/home/viper/projects/RBit/rheaderview.h	/^    void setResizeMode(Sint32 section, ResizeMode mode);$/;"	p	class:RHeaderView	access:public	signature:(Sint32 section, ResizeMode mode)
setResult	/home/viper/projects/RBit/rdialog.h	/^	void setResult(int i);$/;"	p	class:RDialog	access:protected	signature:(int i)
setResult	/home/viper/projects/RBit/rdialog.h	/^inline void RDialog::setResult(int i)$/;"	f	class:RDialog	signature:(int i)
setRight	/home/viper/projects/RBit/rrect.h	/^    void setRight(Sint16 pos);$/;"	p	class:RRect	access:public	signature:(Sint16 pos)
setRight	/home/viper/projects/RBit/rrect.h	/^inline void RRect::setRight(Sint16 pos)$/;"	f	class:RRect	signature:(Sint16 pos)
setScreen	/home/viper/projects/RBit/rapplication.cpp	/^bool RApplication::setScreen(SDL_Surface* surface)$/;"	f	class:RApplication	signature:(SDL_Surface* surface)
setScreen	/home/viper/projects/RBit/rapplication.cpp	/^bool RApplication::setScreen(int w, int h, int depth, bool fullscreen)$/;"	f	class:RApplication	signature:(int w, int h, int depth, bool fullscreen)
setScreen	/home/viper/projects/RBit/rapplication.h	/^    bool setScreen(SDL_Surface* surface);$/;"	p	class:RApplication	access:public	signature:(SDL_Surface* surface)
setScreen	/home/viper/projects/RBit/rapplication.h	/^    bool setScreen(int w, int h, int depth, bool fullscreen);   $/;"	p	class:RApplication	access:public	signature:(int w, int h, int depth, bool fullscreen)
setScreenUpdateArea	/home/viper/projects/RBit/rapplication.h	/^    void setScreenUpdateArea(const RRect&);$/;"	p	class:RApplication	access:protected	signature:(const RRect&)
setScreenUpdateArea	/home/viper/projects/RBit/rapplication.h	/^inline void RApplication::setScreenUpdateArea(const RRect& r) $/;"	f	class:RApplication	signature:(const RRect& r)
setScrollValue	/home/viper/projects/RBit/rscrollbar.cpp	/^void RScrollBar::setScrollValue(Sint32 value)$/;"	f	class:RScrollBar	signature:(Sint32 value)
setScrollValue	/home/viper/projects/RBit/rscrollbar.h	/^    void setScrollValue(Sint32);$/;"	p	class:RScrollBar	access:public	signature:(Sint32)
setSelection	/home/viper/projects/RBit/reditbox.cpp	/^void REditBox::setSelection(int start, int length)$/;"	f	class:REditBox	signature:(int start, int length)
setSelection	/home/viper/projects/RBit/reditbox.h	/^    void setSelection(int start, int length);$/;"	p	class:REditBox	access:public	signature:(int start, int length)
setSelectionInvisibleWhenNotInFocus	/home/viper/projects/RBit/rgridview.h	/^    void setSelectionInvisibleWhenNotInFocus(bool invisible);$/;"	p	class:RGridView	access:public	signature:(bool invisible)
setSelectionInvisibleWhenNotInFocus	/home/viper/projects/RBit/rgridview.h	/^inline void RGridView::setSelectionInvisibleWhenNotInFocus(bool invisible)$/;"	f	class:RGridView	signature:(bool invisible)
setSelectionPolicy	/home/viper/projects/RBit/rgridview.h	/^    void setSelectionPolicy(SelectionPolicy policy);$/;"	p	class:RGridView	access:public	signature:(SelectionPolicy policy)
setSelectionPolicy	/home/viper/projects/RBit/rgridview.h	/^inline void RGridView::setSelectionPolicy(RGridView::SelectionPolicy policy)$/;"	f	class:RGridView	signature:(RGridView::SelectionPolicy policy)
setSingleStep	/home/viper/projects/RBit/rscrollbar.cpp	/^void RScrollBar::setSingleStep(Uint32 step)$/;"	f	class:RScrollBar	signature:(Uint32 step)
setSingleStep	/home/viper/projects/RBit/rscrollbar.h	/^    void setSingleStep(Uint32);$/;"	p	class:RScrollBar	access:public	signature:(Uint32)
setSize	/home/viper/projects/RBit/rrect.h	/^    void setSize(const RSize& s);$/;"	p	class:RRect	access:public	signature:(const RSize& s)
setSize	/home/viper/projects/RBit/rrect.h	/^inline void RRect::setSize(const RSize& s)$/;"	f	class:RRect	signature:(const RSize& s)
setSize	/home/viper/projects/RBit/rwidget.h	/^    void setSize(Uint16 w, Uint16 h);$/;"	p	class:RWidget	access:public	signature:(Uint16 w, Uint16 h)
setSize	/home/viper/projects/RBit/rwidget.h	/^    void setSize(const RSize& s);$/;"	p	class:RWidget	access:public	signature:(const RSize& s)
setSize	/home/viper/projects/RBit/rwidget.h	/^inline void RWidget::setSize(Uint16 w, Uint16 h)$/;"	f	class:RWidget	signature:(Uint16 w, Uint16 h)
setSize	/home/viper/projects/RBit/rwidget.h	/^inline void RWidget::setSize(const RSize& s)$/;"	f	class:RWidget	signature:(const RSize& s)
setSliderDown	/home/viper/projects/RBit/rscrollbar.cpp	/^void RScrollBar::setSliderDown(bool down)$/;"	f	class:RScrollBar	signature:(bool down)
setSliderDown	/home/viper/projects/RBit/rscrollbar.h	/^    void setSliderDown(bool down);$/;"	p	class:RScrollBar	access:public	signature:(bool down)
setSliderPosition	/home/viper/projects/RBit/rscrollbar.cpp	/^void RScrollBar::setSliderPosition(Sint32 pos)$/;"	f	class:RScrollBar	signature:(Sint32 pos)
setSliderPosition	/home/viper/projects/RBit/rscrollbar.h	/^    void setSliderPosition(Sint32);$/;"	p	class:RScrollBar	access:public	signature:(Sint32)
setSortIndicator	/home/viper/projects/RBit/rheaderview.cpp	/^void RHeaderView::setSortIndicator(Sint32 section, RBit::SortOrder order)$/;"	f	class:RHeaderView	signature:(Sint32 section, RBit::SortOrder order)
setSortIndicator	/home/viper/projects/RBit/rheaderview.h	/^    void setSortIndicator(Sint32 section, RBit::SortOrder order);$/;"	p	class:RHeaderView	access:public	signature:(Sint32 section, RBit::SortOrder order)
setSortIndicatorShown	/home/viper/projects/RBit/rheaderview.cpp	/^void RHeaderView::setSortIndicatorShown(bool show)$/;"	f	class:RHeaderView	signature:(bool show)
setSortIndicatorShown	/home/viper/projects/RBit/rheaderview.h	/^    void setSortIndicatorShown(bool show);$/;"	p	class:RHeaderView	access:public	signature:(bool show)
setSplitterPanes	/home/viper/projects/RBit/rsplitter.cpp	/^void RSplitter::setSplitterPanes(RWidget *pFirst, RWidget *pSecond)$/;"	f	class:RSplitter	signature:(RWidget *pFirst, RWidget *pSecond)
setSplitterPanes	/home/viper/projects/RBit/rsplitter.h	/^	void setSplitterPanes(RWidget *pFirst, RWidget *pSecond);$/;"	p	class:RSplitter	access:public	signature:(RWidget *pFirst, RWidget *pSecond)
setSplitterWidth	/home/viper/projects/RBit/rsplitter.cpp	/^void RSplitter::setSplitterWidth(int m_Width)$/;"	f	class:RSplitter	signature:(int m_Width)
setSplitterWidth	/home/viper/projects/RBit/rsplitter.h	/^	void setSplitterWidth(int m_Width);$/;"	p	class:RSplitter	access:public	signature:(int m_Width)
setState	/home/viper/projects/RBit/rsplitter.cpp	/^	void setState(State st)$/;"	f	class:RSplitterPrivate	access:public	signature:(State st)
setStretchLastSection	/home/viper/projects/RBit/rheaderview.cpp	/^void RHeaderView::setStretchLastSection(bool stretch)$/;"	f	class:RHeaderView	signature:(bool stretch)
setStretchLastSection	/home/viper/projects/RBit/rheaderview.h	/^    void setStretchLastSection(bool stretch);$/;"	p	class:RHeaderView	access:public	signature:(bool stretch)
setSubject	/home/viper/projects/RBit/rsubjectobserver.h	/^    void setSubject(Subject* subject)$/;"	f	class:RObserver	access:public	signature:(Subject* subject)
setTabKeyNavigation	/home/viper/projects/RBit/rgridview.h	/^    void setTabKeyNavigation(bool enable);$/;"	p	class:RGridView	access:public	signature:(bool enable)
setTabKeyNavigation	/home/viper/projects/RBit/rgridview.h	/^inline void RGridView::setTabKeyNavigation(bool enable)$/;"	f	class:RGridView	signature:(bool enable)
setTabOrder	/home/viper/projects/RBit/rwidget.h	/^    static void setTabOrder(RWidget* a, RWidget* b);$/;"	p	class:RWidget	access:public	signature:(RWidget* a, RWidget* b)
setTabOrder	/home/viper/projects/RBit/rwidget.h	/^inline void RWidget::setTabOrder(RWidget* a, RWidget* b)$/;"	f	class:RWidget	signature:(RWidget* a, RWidget* b)
setText	/home/viper/projects/RBit/rbutton.cpp	/^void RButton::setText(const char* str)$/;"	f	class:RButton	signature:(const char* str)
setText	/home/viper/projects/RBit/rbutton.h	/^    void setText(const char* str);$/;"	p	class:RButton	access:public	signature:(const char* str)
setText	/home/viper/projects/RBit/rcheckbox.h	/^    void setText(const char* str);$/;"	p	class:RCheckBox	access:public	signature:(const char* str)
setText	/home/viper/projects/RBit/rcheckbox.h	/^inline void RCheckBox::setText(const char* str)$/;"	f	class:RCheckBox	signature:(const char* str)
setText	/home/viper/projects/RBit/rcombobox.cpp	/^void RComboBox::setText(const char* text, Sint32 row)$/;"	f	class:RComboBox	signature:(const char* text, Sint32 row)
setText	/home/viper/projects/RBit/rcombobox.h	/^    void setText(const char* text, Sint32 row);$/;"	p	class:RComboBox	access:public	signature:(const char* text, Sint32 row)
setText	/home/viper/projects/RBit/reditbox.cpp	/^void REditBox::setText(const char* str)$/;"	f	class:REditBox	signature:(const char* str)
setText	/home/viper/projects/RBit/reditbox.h	/^    void setText(const char* str);$/;"	p	class:REditBox	access:public	signature:(const char* str)
setText	/home/viper/projects/RBit/reditbox.h	/^    void setText(const std::string& str);   $/;"	p	class:REditBox	access:public	signature:(const std::string& str)
setText	/home/viper/projects/RBit/reditbox.h	/^inline void REditBox::setText(const std::string& str)$/;"	f	class:REditBox	signature:(const std::string& str)
setText	/home/viper/projects/RBit/rgridmodel.h	/^    virtual bool setText(Sint32 row, Sint32 column, const char* data) $/;"	f	class:RGridModel	access:public	signature:(Sint32 row, Sint32 column, const char* data)
setText	/home/viper/projects/RBit/rheadermodel.h	/^    virtual bool setText(Sint32 section, const char* data) $/;"	f	class:RHeaderModel	access:public	signature:(Sint32 section, const char* data)
setText	/home/viper/projects/RBit/rlabel.h	/^    virtual void setText(const char* str);$/;"	p	class:RLabel	access:public	signature:(const char* str)
setText	/home/viper/projects/RBit/rlabel.h	/^inline void RLabel::setText(const char* str)$/;"	f	class:RLabel	signature:(const char* str)
setText	/home/viper/projects/RBit/rmessagebox.h	/^    void setText(const char* text);  $/;"	p	class:RMessageBox	access:public	signature:(const char* text)
setText	/home/viper/projects/RBit/rmessagebox.h	/^inline void RMessageBox::setText(const char* str)$/;"	f	class:RMessageBox	signature:(const char* str)
setText	/home/viper/projects/RBit/rmultilinelabel.cpp	/^void RMultilineLabel::setText(const char* str)$/;"	f	class:RMultilineLabel	signature:(const char* str)
setText	/home/viper/projects/RBit/rmultilinelabel.h	/^    virtual void		setText(const char* str);$/;"	p	class:RMultilineLabel	access:public	signature:(const char* str)
setText	/home/viper/projects/RBit/rsimplegridmodel.cpp	/^bool RSimpleGridModel::setText(Sint32 row, Sint32 column, const char* data)$/;"	f	class:RSimpleGridModel	signature:(Sint32 row, Sint32 column, const char* data)
setText	/home/viper/projects/RBit/rsimplegridmodel.h	/^        void setText(const char*);$/;"	p	class:RSimpleGridModel::Item	access:public	signature:(const char*)
setText	/home/viper/projects/RBit/rsimplegridmodel.h	/^    virtual bool setText(Sint32 row, Sint32 column, const char* data);$/;"	p	class:RSimpleGridModel	access:public	signature:(Sint32 row, Sint32 column, const char* data)
setText	/home/viper/projects/RBit/rsimplegridmodel.h	/^inline void RSimpleGridModel::Item::setText(const char* text)$/;"	f	class:RSimpleGridModel::Item	signature:(const char* text)
setText	/home/viper/projects/RBit/rsimpleheadermodel.cpp	/^bool RSimpleHeaderModel::setText(Sint32 section, const char* data)$/;"	f	class:RSimpleHeaderModel	signature:(Sint32 section, const char* data)
setText	/home/viper/projects/RBit/rsimpleheadermodel.h	/^        void setText(const char*);$/;"	p	class:RSimpleHeaderModel::Item	access:public	signature:(const char*)
setText	/home/viper/projects/RBit/rsimpleheadermodel.h	/^    virtual bool setText(Sint32 section, const char* data);$/;"	p	class:RSimpleHeaderModel	access:public	signature:(Sint32 section, const char* data)
setText	/home/viper/projects/RBit/rsimpleheadermodel.h	/^inline void RSimpleHeaderModel::Item::setText(const char* text)$/;"	f	class:RSimpleHeaderModel::Item	signature:(const char* text)
setTextAlignment	/home/viper/projects/RBit/rgridmodel.h	/^    virtual bool setTextAlignment(Sint32 row, Sint32 column, int alignment) $/;"	f	class:RGridModel	access:public	signature:(Sint32 row, Sint32 column, int alignment)
setTextAlignment	/home/viper/projects/RBit/rheadermodel.h	/^    virtual bool setTextAlignment(Sint32 section, int alignment) $/;"	f	class:RHeaderModel	access:public	signature:(Sint32 section, int alignment)
setTextAlignment	/home/viper/projects/RBit/rsimplegridmodel.cpp	/^bool RSimpleGridModel::setTextAlignment(Sint32 row, Sint32 column, int alignment)$/;"	f	class:RSimpleGridModel	signature:(Sint32 row, Sint32 column, int alignment)
setTextAlignment	/home/viper/projects/RBit/rsimplegridmodel.h	/^        void setTextAlignment(int);$/;"	p	class:RSimpleGridModel::Item	access:public	signature:(int)
setTextAlignment	/home/viper/projects/RBit/rsimplegridmodel.h	/^    virtual bool setTextAlignment(Sint32 row, Sint32 column, int alignment);$/;"	p	class:RSimpleGridModel	access:public	signature:(Sint32 row, Sint32 column, int alignment)
setTextAlignment	/home/viper/projects/RBit/rsimplegridmodel.h	/^inline void RSimpleGridModel::Item::setTextAlignment(int alignment)$/;"	f	class:RSimpleGridModel::Item	signature:(int alignment)
setTextAlignment	/home/viper/projects/RBit/rsimpleheadermodel.cpp	/^bool RSimpleHeaderModel::setTextAlignment(Sint32 section, int alignment)$/;"	f	class:RSimpleHeaderModel	signature:(Sint32 section, int alignment)
setTextAlignment	/home/viper/projects/RBit/rsimpleheadermodel.h	/^        void setTextAlignment(int);$/;"	p	class:RSimpleHeaderModel::Item	access:public	signature:(int)
setTextAlignment	/home/viper/projects/RBit/rsimpleheadermodel.h	/^    virtual bool setTextAlignment(Sint32 section, int alignment);$/;"	p	class:RSimpleHeaderModel	access:public	signature:(Sint32 section, int alignment)
setTextAlignment	/home/viper/projects/RBit/rsimpleheadermodel.h	/^inline void RSimpleHeaderModel::Item::setTextAlignment(int alignment)$/;"	f	class:RSimpleHeaderModel::Item	signature:(int alignment)
setTextAlignment	/home/viper/projects/RBit/rtextpainter.h	/^    void setTextAlignment(int a);    $/;"	p	class:RTextPainter	access:public	signature:(int a)
setTextAlignment	/home/viper/projects/RBit/rtextpainter.h	/^inline void RTextPainter::setTextAlignment(int a)$/;"	f	class:RTextPainter	signature:(int a)
setTextFlags	/home/viper/projects/RBit/rtextpainter.h	/^    void setTextFlags(int flags);$/;"	p	class:RTextPainter	access:protected	signature:(int flags)
setTextFlags	/home/viper/projects/RBit/rtextpainter.h	/^inline void RTextPainter::setTextFlags(int f)$/;"	f	class:RTextPainter	signature:(int f)
setTextMargins	/home/viper/projects/RBit/rgridview.h	/^    void setTextMargins(Sint16 left, Sint16 top, Sint16 right, Sint16 bottom);$/;"	p	class:RGridView	access:public	signature:(Sint16 left, Sint16 top, Sint16 right, Sint16 bottom)
setTextMargins	/home/viper/projects/RBit/rgridview.h	/^inline void RGridView::setTextMargins(Sint16 left, Sint16 top, Sint16 right, Sint16 bottom)$/;"	f	class:RGridView	signature:(Sint16 left, Sint16 top, Sint16 right, Sint16 bottom)
setTextMargins	/home/viper/projects/RBit/rheaderview.h	/^    void setTextMargins(Sint16 left, Sint16 top, Sint16 right, Sint16 bottom);$/;"	p	class:RHeaderView	access:public	signature:(Sint16 left, Sint16 top, Sint16 right, Sint16 bottom)
setTextMargins	/home/viper/projects/RBit/rheaderview.h	/^inline void RHeaderView::setTextMargins(Sint16 left, Sint16 top, Sint16 right, Sint16 bottom)$/;"	f	class:RHeaderView	signature:(Sint16 left, Sint16 top, Sint16 right, Sint16 bottom)
setTextRef	/home/viper/projects/RBit/rbutton.cpp	/^void RButton::setTextRef(const char* str)$/;"	f	class:RButton	signature:(const char* str)
setTextRef	/home/viper/projects/RBit/rbutton.h	/^    void setTextRef(const char* str);$/;"	p	class:RButton	access:public	signature:(const char* str)
setTextRef	/home/viper/projects/RBit/rcheckbox.h	/^    void setTextRef(const char* str);$/;"	p	class:RCheckBox	access:public	signature:(const char* str)
setTextRef	/home/viper/projects/RBit/rcheckbox.h	/^inline void RCheckBox::setTextRef(const char* str)$/;"	f	class:RCheckBox	signature:(const char* str)
setTextRef	/home/viper/projects/RBit/rlabel.h	/^    virtual void setTextRef(const char* str);$/;"	p	class:RLabel	access:public	signature:(const char* str)
setTextRef	/home/viper/projects/RBit/rlabel.h	/^inline void RLabel::setTextRef(const char* str)$/;"	f	class:RLabel	signature:(const char* str)
setTextRef	/home/viper/projects/RBit/rmultilinelabel.cpp	/^void RMultilineLabel::setTextRef(const char* str)$/;"	f	class:RMultilineLabel	signature:(const char* str)
setTextRef	/home/viper/projects/RBit/rmultilinelabel.h	/^	virtual void        setTextRef(const char* str);$/;"	p	class:RMultilineLabel	access:public	signature:(const char* str)
setTop	/home/viper/projects/RBit/rrect.h	/^    void setTop(Sint16 pos);$/;"	p	class:RRect	access:public	signature:(Sint16 pos)
setTop	/home/viper/projects/RBit/rrect.h	/^inline void RRect::setTop(Sint16 pos)$/;"	f	class:RRect	signature:(Sint16 pos)
setTopLeft	/home/viper/projects/RBit/rrect.h	/^    void setTopLeft(const RPoint &p);$/;"	p	class:RRect	access:public	signature:(const RPoint &p)
setTopLeft	/home/viper/projects/RBit/rrect.h	/^inline void RRect::setTopLeft(const RPoint& p)$/;"	f	class:RRect	signature:(const RPoint& p)
setTopRight	/home/viper/projects/RBit/rrect.h	/^    void setTopRight(const RPoint &p);$/;"	p	class:RRect	access:public	signature:(const RPoint &p)
setTrackingEnabled	/home/viper/projects/RBit/rscrollbar.h	/^    void setTrackingEnabled(bool enabled);    $/;"	p	class:RScrollBar	access:public	signature:(bool enabled)
setTrackingEnabled	/home/viper/projects/RBit/rscrollbar.h	/^inline void RScrollBar::setTrackingEnabled(bool enabled)$/;"	f	class:RScrollBar	signature:(bool enabled)
setUpdatesEnabled	/home/viper/projects/RBit/rwidget.cpp	/^void RWidget::setUpdatesEnabled(bool enable)$/;"	f	class:RWidget	signature:(bool enable)
setUpdatesEnabled	/home/viper/projects/RBit/rwidget.h	/^    void setUpdatesEnabled(bool enabled);$/;"	p	class:RWidget	access:public	signature:(bool enabled)
setUpdatesEnabled_helper	/home/viper/projects/RBit/rwidget.cpp	/^void RWidget::setUpdatesEnabled_helper(bool enable)$/;"	f	class:RWidget	signature:(bool enable)
setUpdatesEnabled_helper	/home/viper/projects/RBit/rwidget.h	/^    void setUpdatesEnabled_helper(bool enabled);$/;"	p	class:RWidget	access:private	signature:(bool enabled)
setVerticalHeader	/home/viper/projects/RBit/rgridview.cpp	/^void RGridView::setVerticalHeader(RHeaderView* header)$/;"	f	class:RGridView	signature:(RHeaderView* header)
setVerticalHeader	/home/viper/projects/RBit/rgridview.h	/^    void setVerticalHeader(RHeaderView* header);$/;"	p	class:RGridView	access:protected	signature:(RHeaderView* header)
setVerticalScrollBarPolicy	/home/viper/projects/RBit/rscrollarea.cpp	/^void RScrollAreaBase::setVerticalScrollBarPolicy(RScrollAreaBase::ScrollBarPolicy policy)$/;"	f	class:RScrollAreaBase	signature:(RScrollAreaBase::ScrollBarPolicy policy)
setVerticalScrollBarPolicy	/home/viper/projects/RBit/rscrollarea.h	/^    void setVerticalScrollBarPolicy(ScrollBarPolicy);$/;"	p	class:RScrollAreaBase	access:public	signature:(ScrollBarPolicy)
setVerticalStepsPerItem	/home/viper/projects/RBit/rgridview.cpp	/^void RGridView::setVerticalStepsPerItem(Uint32 steps)$/;"	f	class:RGridView	signature:(Uint32 steps)
setVerticalStepsPerItem	/home/viper/projects/RBit/rgridview.h	/^    void setVerticalStepsPerItem(Uint32 steps);$/;"	p	class:RGridView	access:protected	signature:(Uint32 steps)
setViewportMargins	/home/viper/projects/RBit/rscrollarea.cpp	/^void RScrollAreaBase::setViewportMargins(int left, int top, int right, int bottom)$/;"	f	class:RScrollAreaBase	signature:(int left, int top, int right, int bottom)
setViewportMargins	/home/viper/projects/RBit/rscrollarea.h	/^    void setViewportMargins(int left, int top, int right, int bottom);$/;"	p	class:RScrollAreaBase	access:protected	signature:(int left, int top, int right, int bottom)
setVisible	/home/viper/projects/RBit/rwidget.h	/^    void setVisible(bool visible);$/;"	p	class:RWidget	access:public	signature:(bool visible)
setVisible	/home/viper/projects/RBit/rwidget.h	/^inline void RWidget::setVisible(bool visible)$/;"	f	class:RWidget	signature:(bool visible)
setWFlags	/home/viper/projects/RBit/rwidget.h	/^    void setWFlags(RWFlags f);$/;"	p	class:RWidget	access:public	signature:(RWFlags f)
setWFlags	/home/viper/projects/RBit/rwidget.h	/^inline void RWidget::setWFlags(RWFlags f) $/;"	f	class:RWidget	signature:(RWFlags f)
setWidget	/home/viper/projects/RBit/rscrollwidgetarea.cpp	/^void RScrollWidgetAreaBase::setWidget(RWidget *w)$/;"	f	class:RScrollWidgetAreaBase	signature:(RWidget *w)
setWidget	/home/viper/projects/RBit/rscrollwidgetarea.h	/^    void setWidget(RWidget*);    $/;"	p	class:RScrollWidgetAreaBase	access:private	signature:(RWidget*)
setWidgetOpacity	/home/viper/projects/RBit/rwidget.cpp	/^void RWidget::setWidgetOpacity(Uint8 level)$/;"	f	class:RWidget	signature:(Uint8 level)
setWidgetOpacity	/home/viper/projects/RBit/rwidget.h	/^    void setWidgetOpacity(Uint8 level);$/;"	p	class:RWidget	access:public	signature:(Uint8 level)
setWidgetResizable	/home/viper/projects/RBit/rscrollwidgetarea.cpp	/^void RScrollWidgetAreaBase::setWidgetResizable(bool resizable)$/;"	f	class:RScrollWidgetAreaBase	signature:(bool resizable)
setWidgetResizable	/home/viper/projects/RBit/rscrollwidgetarea.h	/^    void setWidgetResizable(bool resizable);$/;"	p	class:RScrollWidgetAreaBase	access:public	signature:(bool resizable)
setWidth	/home/viper/projects/RBit/rrect.h	/^    void setWidth(Uint16 w);$/;"	p	class:RRect	access:public	signature:(Uint16 w)
setWidth	/home/viper/projects/RBit/rrect.h	/^inline void RRect::setWidth(Uint16 width)$/;"	f	class:RRect	signature:(Uint16 width)
setWidth	/home/viper/projects/RBit/rsize.h	/^    void setWidth(Uint16 w);$/;"	p	class:RSize	access:public	signature:(Uint16 w)
setWidth	/home/viper/projects/RBit/rsize.h	/^inline void RSize::setWidth(Uint16 w) $/;"	f	class:RSize	signature:(Uint16 w)
setX	/home/viper/projects/RBit/rpoint.h	/^    void setX (Sint16 x);$/;"	p	class:RPoint	access:public	signature:(Sint16 x)
setX	/home/viper/projects/RBit/rpoint.h	/^inline void RPoint::setX(Sint16 x)$/;"	f	class:RPoint	signature:(Sint16 x)
setX	/home/viper/projects/RBit/rrect.h	/^    void setX(Sint16 x);$/;"	p	class:RRect	access:public	signature:(Sint16 x)
setX	/home/viper/projects/RBit/rrect.h	/^inline void RRect::setX(Sint16 x)$/;"	f	class:RRect	signature:(Sint16 x)
setY	/home/viper/projects/RBit/rpoint.h	/^    void setY (Sint16 y);$/;"	p	class:RPoint	access:public	signature:(Sint16 y)
setY	/home/viper/projects/RBit/rpoint.h	/^inline void RPoint::setY(Sint16 y)$/;"	f	class:RPoint	signature:(Sint16 y)
setY	/home/viper/projects/RBit/rrect.h	/^    void setY(Sint16 y);    $/;"	p	class:RRect	access:public	signature:(Sint16 y)
setY	/home/viper/projects/RBit/rrect.h	/^inline void RRect::setY(Sint16 y)$/;"	f	class:RRect	signature:(Sint16 y)
settings_map	/home/viper/projects/RBit/rwidgetdefaultsettings.h	/^    SettingsMap settings_map;$/;"	m	class:RWidgetDefaultSettingsHelper	access:private
setupSectionIndicator	/home/viper/projects/RBit/rheaderview.h	/^    void setupSectionIndicator(Sint32 section, Sint32 position);$/;"	p	class:RHeaderView	access:private	signature:(Sint32 section, Sint32 position)
shadow	/home/viper/projects/RBit/rpalette.h	/^    inline const RColor& shadow() const { return color(Shadow); }$/;"	f	class:RPalette	access:public	signature:() const
show	/home/viper/projects/RBit/rwidget.cpp	/^void RWidget::show()$/;"	f	class:RWidget	signature:()
show	/home/viper/projects/RBit/rwidget.h	/^    void show();$/;"	p	class:RWidget	access:public	signature:()
showCursor	/home/viper/projects/RBit/rapplication.h	/^    void showCursor(bool on = true);$/;"	p	class:RApplication	access:public	signature:(bool on = true)
showCursor	/home/viper/projects/RBit/rapplication.h	/^inline void RApplication::showCursor(bool on)$/;"	f	class:RApplication	signature:(bool on)
showOrHideScrollBars	/home/viper/projects/RBit/rscrollarea.h	/^    void showOrHideScrollBars();    $/;"	p	class:RScrollAreaBase	access:private	signature:()
showOrHideScrollBars	/home/viper/projects/RBit/rscrollarea.h	/^inline void RScrollAreaBase::showOrHideScrollBars()$/;"	f	class:RScrollAreaBase	signature:()
showPopup	/home/viper/projects/RBit/rcombobox.cpp	/^void RComboBox::showPopup()$/;"	f	class:RComboBox	signature:()
showPopup	/home/viper/projects/RBit/rcombobox.h	/^    virtual void showPopup();$/;"	p	class:RComboBox	access:public	signature:()
singleStep	/home/viper/projects/RBit/rscrollbar.h	/^    Uint32 singleStep() const;$/;"	p	class:RScrollBar	access:public	signature:() const
singleStep	/home/viper/projects/RBit/rscrollbar.h	/^inline Uint32 RScrollBar::singleStep() const$/;"	f	class:RScrollBar	signature:() const
size	/home/viper/projects/RBit/rarraycontainer.h	/^	Uint32  size() const;	$/;"	p	class:RArrayContainer	access:public	signature:() const
size	/home/viper/projects/RBit/rarraycontainer.h	/^inline Uint32 RArrayContainer<T>::size() const$/;"	f	class:RArrayContainer	signature:() const
size	/home/viper/projects/RBit/rimage.cpp	/^    RSize size;$/;"	m	class:RImagePrivate	file:	access:public
size	/home/viper/projects/RBit/rimage.cpp	/^RSize RImage::size() const$/;"	f	class:RImage	signature:() const
size	/home/viper/projects/RBit/rimage.h	/^    RSize size() const;$/;"	p	class:RImage	access:public	signature:() const
size	/home/viper/projects/RBit/rrect.h	/^    RSize size() const;$/;"	p	class:RRect	access:public	signature:() const
size	/home/viper/projects/RBit/rrect.h	/^inline RSize RRect::size() const$/;"	f	class:RRect	signature:() const
size	/home/viper/projects/RBit/rsimplelist.h	/^	template<typename T_> inline unsigned int size(const RSimpleList<T_, RSLPolicy_TrackSize>*) const$/;"	f	class:RSimpleList	access:private	signature:(const RSimpleList<T_, RSLPolicy_TrackSize>*) const
size	/home/viper/projects/RBit/rsimplelist.h	/^	template<typename T_> unsigned int size(const RSimpleList<T_, RSLPolicy_DontTrackSize>*) const$/;"	f	class:RSimpleList	access:private	signature:(const RSimpleList<T_, RSLPolicy_DontTrackSize>*) const
size	/home/viper/projects/RBit/rsimplelist.h	/^	unsigned int size() const$/;"	f	class:RSimpleList	access:public	signature:() const
size	/home/viper/projects/RBit/rsimplelist.h	/^    inline unsigned int size() const$/;"	f	class:RSLPolicy_TrackSize	access:protected	signature:() const
size	/home/viper/projects/RBit/rwidget.h	/^    RSize size() const;$/;"	p	class:RWidget	access:public	signature:() const
size	/home/viper/projects/RBit/rwidget.h	/^inline RSize RWidget::size() const$/;"	f	class:RWidget	signature:() const
sizeHint	/home/viper/projects/RBit/captionwidget.cpp	/^RSize CCaptionWidget::sizeHint() const$/;"	f	class:CCaptionWidget	signature:() const
sizeHint	/home/viper/projects/RBit/captionwidget.h	/^    RSize sizeHint() const;$/;"	p	class:CCaptionWidget	access:public	signature:() const
sizeHint	/home/viper/projects/RBit/rbutton.cpp	/^RSize RButton::sizeHint() const$/;"	f	class:RButton	signature:() const
sizeHint	/home/viper/projects/RBit/rbutton.h	/^    RSize sizeHint() const;$/;"	p	class:RButton	access:public	signature:() const
sizeHint	/home/viper/projects/RBit/rcheckbox.cpp	/^RSize RCheckBox::sizeHint() const$/;"	f	class:RCheckBox	signature:() const
sizeHint	/home/viper/projects/RBit/rcheckbox.h	/^    RSize sizeHint() const;$/;"	p	class:RCheckBox	access:public	signature:() const
sizeHint	/home/viper/projects/RBit/rcombobox.cpp	/^RSize RComboBox::sizeHint() const$/;"	f	class:RComboBox	signature:() const
sizeHint	/home/viper/projects/RBit/rcombobox.h	/^    RSize sizeHint() const;$/;"	p	class:RComboBox	access:public	signature:() const
sizeHint	/home/viper/projects/RBit/rheaderview.cpp	/^RSize RHeaderView::sizeHint() const$/;"	f	class:RHeaderView	signature:() const
sizeHint	/home/viper/projects/RBit/rheaderview.h	/^    RSize sizeHint() const;$/;"	p	class:RHeaderView	access:public	signature:() const
sizeHint	/home/viper/projects/RBit/rscrollarea.h	/^    RSize sizeHint() const;$/;"	p	class:RScrollAreaBase	access:public	signature:() const
sizeHint	/home/viper/projects/RBit/rscrollarea.h	/^inline RSize RScrollAreaBase::sizeHint() const$/;"	f	class:RScrollAreaBase	signature:() const
sizeHint	/home/viper/projects/RBit/rscrollbar.cpp	/^RSize RScrollBar::sizeHint() const$/;"	f	class:RScrollBar	signature:() const
sizeHint	/home/viper/projects/RBit/rscrollbar.h	/^    RSize sizeHint() const;$/;"	p	class:RScrollBar	access:public	signature:() const
sizeHint	/home/viper/projects/RBit/rscrollwidgetarea.h	/^    RSize sizeHint() const;    $/;"	p	class:RScrollWidgetAreaBase	access:public	signature:() const
sliderPosition	/home/viper/projects/RBit/rscrollbar.h	/^    Sint32 sliderPosition() const;$/;"	p	class:RScrollBar	access:public	signature:() const
sliderPosition	/home/viper/projects/RBit/rscrollbar.h	/^inline Sint32 RScrollBar::sliderPosition() const$/;"	f	class:RScrollBar	signature:() const
sliderPositionFromValue	/home/viper/projects/RBit/rscrollbar.cpp	/^Sint32 RScrollBar::sliderPositionFromValue(Sint32 min, Sint32 max, Sint32 logicalValue, Sint16 span, bool upsideDown) const$/;"	f	class:RScrollBar	signature:(Sint32 min, Sint32 max, Sint32 logicalValue, Sint16 span, bool upsideDown) const
sliderPositionFromValue	/home/viper/projects/RBit/rscrollbar.h	/^    Sint32 sliderPositionFromValue(Sint32 min, Sint32 max, Sint32 logicalValue, Sint16 span, bool upsideDown) const;$/;"	p	class:RScrollBar	access:protected	signature:(Sint32 min, Sint32 max, Sint32 logicalValue, Sint16 span, bool upsideDown) const
sliderValueFromPosition	/home/viper/projects/RBit/rscrollbar.cpp	/^Sint32 RScrollBar::sliderValueFromPosition(Sint32 min, Sint32 max, Sint32 pos, Sint32 span, bool upsideDown) const$/;"	f	class:RScrollBar	signature:(Sint32 min, Sint32 max, Sint32 pos, Sint32 span, bool upsideDown) const
sliderValueFromPosition	/home/viper/projects/RBit/rscrollbar.h	/^    Sint32 sliderValueFromPosition(Sint32 min, Sint32 max, Sint32 pos, Sint32 span, bool upsideDown) const;$/;"	p	class:RScrollBar	access:protected	signature:(Sint32 min, Sint32 max, Sint32 pos, Sint32 span, bool upsideDown) const
sort	/home/viper/projects/RBit/rgridmodel.h	/^    virtual void sort(Sint32 column, RBit::SortOrder = RBit::AscendingOrder)$/;"	f	class:RGridModel	access:public	signature:(Sint32 column, RBit::SortOrder = RBit::AscendingOrder)
sort	/home/viper/projects/RBit/rsimplegridmodel.cpp	/^void RSimpleGridModel::sort(Sint32 column, RBit::SortOrder order)$/;"	f	class:RSimpleGridModel	signature:(Sint32 column, RBit::SortOrder order)
sort	/home/viper/projects/RBit/rsimplegridmodel.cpp	/^void RSimpleGridModel::sort(Sint32 column, Sint32 first, Sint32 last, RBit::SortOrder order, RModelDataTypeBase* type)$/;"	f	class:RSimpleGridModel	signature:(Sint32 column, Sint32 first, Sint32 last, RBit::SortOrder order, RModelDataTypeBase* type)
sort	/home/viper/projects/RBit/rsimplegridmodel.h	/^    virtual void sort(Sint32 column, RBit::SortOrder = RBit::AscendingOrder);$/;"	p	class:RSimpleGridModel	access:public	signature:(Sint32 column, RBit::SortOrder = RBit::AscendingOrder)
sort	/home/viper/projects/RBit/rsimplegridmodel.h	/^    void sort(Sint32 column, Sint32 first, Sint32 last, RBit::SortOrder, RModelDataTypeBase* type);$/;"	p	class:RSimpleGridModel	access:private	signature:(Sint32 column, Sint32 first, Sint32 last, RBit::SortOrder, RModelDataTypeBase* type)
sortByColumn	/home/viper/projects/RBit/rgridview.cpp	/^void RGridView::sortByColumn(Sint32 column)$/;"	f	class:RGridView	signature:(Sint32 column)
sortByColumn	/home/viper/projects/RBit/rgridview.h	/^    void sortByColumn(Sint32 column);$/;"	p	class:RGridView	access:public	signature:(Sint32 column)
sortIndicatorOrder	/home/viper/projects/RBit/rheaderview.cpp	/^RBit::SortOrder RHeaderView::sortIndicatorOrder() const$/;"	f	class:RHeaderView	signature:() const
sortIndicatorOrder	/home/viper/projects/RBit/rheaderview.h	/^    RBit::SortOrder sortIndicatorOrder() const;$/;"	p	class:RHeaderView	access:public	signature:() const
sortIndicatorSection	/home/viper/projects/RBit/rheaderview.cpp	/^Sint32 RHeaderView::sortIndicatorSection() const$/;"	f	class:RHeaderView	signature:() const
sortIndicatorSection	/home/viper/projects/RBit/rheaderview.h	/^    Sint32 sortIndicatorSection() const;$/;"	p	class:RHeaderView	access:public	signature:() const
split	/home/viper/projects/RBit/rsplitter.cpp	/^	void split(Uint16 x, Uint16 y);$/;"	p	class:RSplitterPrivate	file:	access:public	signature:(Uint16 x, Uint16 y)
split	/home/viper/projects/RBit/rsplitter.cpp	/^void RSplitterPrivate::split(Uint16 x, Uint16 y)$/;"	f	class:RSplitterPrivate	signature:(Uint16 x, Uint16 y)
splitHCursor	/home/viper/projects/RBit/rheaderview.cpp	/^    const char *splitHCursor[] = {      $/;"	v
splitHCursor	/home/viper/projects/RBit/rsplitter.cpp	/^	const char *splitHCursor[] = {      $/;"	v
splitVCursor	/home/viper/projects/RBit/rheaderview.cpp	/^    const char *splitVCursor[] = {      $/;"	v
splitVCursor	/home/viper/projects/RBit/rsplitter.cpp	/^	const char *splitVCursor[] = {      $/;"	v
src	/home/viper/projects/RBit/rsdlttf.cpp	/^	SDL_RWops *src;$/;"	m	struct:_TTF_Font	file:	access:public
stackUnder	/home/viper/projects/RBit/rwidget.cpp	/^void RWidget::stackUnder(RWidget* w)$/;"	f	class:RWidget	signature:(RWidget* w)
stackUnder	/home/viper/projects/RBit/rwidget.h	/^    void stackUnder(RWidget* w);$/;"	p	class:RWidget	access:public	signature:(RWidget* w)
standardIcon	/home/viper/projects/RBit/rmessagebox.cpp	/^    RSurface standardIcon(RMessageBox::Icon i)$/;"	f	namespace:__anon5	signature:(RMessageBox::Icon i)
state	/home/viper/projects/RBit/rsplitter.cpp	/^	State state() const$/;"	f	class:RSplitterPrivate	access:public	signature:() const
stateChanged	/home/viper/projects/RBit/rcheckbox.cpp	/^void RCheckBox::stateChanged(RBit::CheckState)$/;"	f	class:RCheckBox	signature:(RBit::CheckState)
stateChanged	/home/viper/projects/RBit/rcheckbox.h	/^    virtual void stateChanged(RBit::CheckState);$/;"	p	class:RCheckBox	access:public	signature:(RBit::CheckState)
stored	/home/viper/projects/RBit/rsdlttf.cpp	/^	int stored;$/;"	m	struct:cached_glyph	file:	access:public
stretchLastSection	/home/viper/projects/RBit/rheaderview.cpp	/^bool RHeaderView::stretchLastSection() const$/;"	f	class:RHeaderView	signature:() const
stretchLastSection	/home/viper/projects/RBit/rheaderview.h	/^    bool stretchLastSection() const;$/;"	p	class:RHeaderView	access:public	signature:() const
stretchSectionCount	/home/viper/projects/RBit/rheaderview.cpp	/^Uint32 RHeaderView::stretchSectionCount() const$/;"	f	class:RHeaderView	signature:() const
stretchSectionCount	/home/viper/projects/RBit/rheaderview.h	/^    Uint32 stretchSectionCount() const;$/;"	p	class:RHeaderView	access:public	signature:() const
stricoll	/home/viper/projects/RBit/rgridmodeldatatype.h	11;"	d
stricoll	/home/viper/projects/RBit/rgridmodeldatatype.h	8;"	d
stricoll	/home/viper/projects/RBit/rgridmodeldatatype.h	9;"	d
strnicmp	/home/viper/projects/RBit/rcombobox.cpp	11;"	d	file:
style	/home/viper/projects/RBit/rsdlttf.cpp	/^	int style;$/;"	m	struct:_TTF_Font	file:	access:public
subControlRect	/home/viper/projects/RBit/rcombobox.cpp	/^RRect RComboBox::subControlRect(SubControl sc) const$/;"	f	class:RComboBox	signature:(SubControl sc) const
subControlRect	/home/viper/projects/RBit/rcombobox.h	/^    RRect subControlRect(SubControl c) const;$/;"	p	class:RComboBox	access:protected	signature:(SubControl c) const
subControlRect	/home/viper/projects/RBit/rscrollbar.cpp	/^RRect RScrollBar::subControlRect(SubControl sc) const$/;"	f	class:RScrollBar	signature:(SubControl sc) const
subControlRect	/home/viper/projects/RBit/rscrollbar.h	/^    RRect subControlRect(SubControl c) const;$/;"	p	class:RScrollBar	access:protected	signature:(SubControl c) const
subjectAdded	/home/viper/projects/RBit/rsubjectobserver.h	/^	virtual void subjectAdded(Subject* s)$/;"	f	class:RObserver	access:protected	signature:(Subject* s)
subjectRemoved	/home/viper/projects/RBit/rheaderview.cpp	/^void RHeaderView::subjectRemoved(RHeaderModel* s)$/;"	f	class:RHeaderView	signature:(RHeaderModel* s)
subjectRemoved	/home/viper/projects/RBit/rheaderview.h	/^    void subjectRemoved(Subject* s);$/;"	p	class:RHeaderView	access:protected	signature:(Subject* s)
subjectRemoved	/home/viper/projects/RBit/rsubjectobserver.h	/^	virtual void subjectRemoved(Subject* s)$/;"	f	class:RObserver	access:protected	signature:(Subject* s)
superClassName	/home/viper/projects/RBit/rwidget.h	/^    inline const char* superClassName() const$/;"	f	class:RMetaObject	access:public	signature:() const
supressCursor	/home/viper/projects/RBit/reditbox.h	/^    void supressCursor(bool supress);    $/;"	p	class:REditBox	access:public	signature:(bool supress)
supressCursor	/home/viper/projects/RBit/reditbox.h	/^inline void REditBox::supressCursor(bool supress)$/;"	f	class:REditBox	signature:(bool supress)
swapRows	/home/viper/projects/RBit/rsimplegridmodel.cpp	/^void RSimpleGridModel::swapRows(Sint32 lh, Sint32 rh)$/;"	f	class:RSimpleGridModel	signature:(Sint32 lh, Sint32 rh)
swapRows	/home/viper/projects/RBit/rsimplegridmodel.h	/^    void swapRows(Sint32 lh, Sint32 rh);$/;"	p	class:RSimpleGridModel	access:private	signature:(Sint32 lh, Sint32 rh)
t	/home/viper/projects/RBit/rsdlttf.o	/^∏ˇˇˇˇÈÛ/;"	v
tabKeyNavigation	/home/viper/projects/RBit/rgridview.h	/^    bool tabKeyNavigation() const;$/;"	p	class:RGridView	access:public	signature:() const
tabKeyNavigation	/home/viper/projects/RBit/rgridview.h	/^inline bool RGridView::tabKeyNavigation() const$/;"	f	class:RGridView	signature:() const
tableIndex	/home/viper/projects/RBit/rsimplegridmodel.h	/^    Sint32 tableIndex(Sint32 row, Sint32 column) const;$/;"	p	class:RSimpleGridModel	access:protected	signature:(Sint32 row, Sint32 column) const
tableIndex	/home/viper/projects/RBit/rsimplegridmodel.h	/^    Sint32 tableIndex(const Item* item) const;$/;"	p	class:RSimpleGridModel	access:protected	signature:(const Item* item) const
tableIndex	/home/viper/projects/RBit/rsimplegridmodel.h	/^inline Sint32 RSimpleGridModel::tableIndex(Sint32 row, Sint32 column) const$/;"	f	class:RSimpleGridModel	signature:(Sint32 row, Sint32 column) const
tableIndex	/home/viper/projects/RBit/rsimplegridmodel.h	/^inline Sint32 RSimpleGridModel::tableIndex(const Item* item) const$/;"	f	class:RSimpleGridModel	signature:(const Item* item) const
tail	/home/viper/projects/RBit/rsimplelist.h	/^    inline Contents* tail() const$/;"	f	class:RSimpleList	access:public	signature:() const
takeItem	/home/viper/projects/RBit/rsimplegridmodel.cpp	/^RSimpleGridModel::Item* RSimpleGridModel::takeItem(RSimpleGridModel::Item* item)$/;"	f	class:RSimpleGridModel	signature:(RSimpleGridModel::Item* item)
takeItem	/home/viper/projects/RBit/rsimplegridmodel.cpp	/^RSimpleGridModel::Item* RSimpleGridModel::takeItem(Sint32 row, Sint32 column)$/;"	f	class:RSimpleGridModel	signature:(Sint32 row, Sint32 column)
takeItem	/home/viper/projects/RBit/rsimplegridmodel.h	/^    Item* takeItem(Item* item);$/;"	p	class:RSimpleGridModel	access:public	signature:(Item* item)
takeItem	/home/viper/projects/RBit/rsimplegridmodel.h	/^    Item* takeItem(Sint32 row, Sint32 col);$/;"	p	class:RSimpleGridModel	access:public	signature:(Sint32 row, Sint32 col)
takeItem	/home/viper/projects/RBit/rsimpleheadermodel.cpp	/^RSimpleHeaderModel::Item* RSimpleHeaderModel::takeItem(RSimpleHeaderModel::Item* item)$/;"	f	class:RSimpleHeaderModel	signature:(RSimpleHeaderModel::Item* item)
takeItem	/home/viper/projects/RBit/rsimpleheadermodel.cpp	/^RSimpleHeaderModel::Item* RSimpleHeaderModel::takeItem(Sint32 section)$/;"	f	class:RSimpleHeaderModel	signature:(Sint32 section)
takeItem	/home/viper/projects/RBit/rsimpleheadermodel.h	/^    Item* takeItem(Item* item);$/;"	p	class:RSimpleHeaderModel	access:public	signature:(Item* item)
takeItem	/home/viper/projects/RBit/rsimpleheadermodel.h	/^    Item* takeItem(Sint32 section);$/;"	p	class:RSimpleHeaderModel	access:public	signature:(Sint32 section)
testWFlags	/home/viper/projects/RBit/rwidget.h	/^    RWFlags testWFlags(RWFlags f) const;    $/;"	p	class:RWidget	access:public	signature:(RWFlags f) const
testWFlags	/home/viper/projects/RBit/rwidget.h	/^inline RWFlags RWidget::testWFlags(RWFlags f) const$/;"	f	class:RWidget	signature:(RWFlags f) const
text	/home/viper/projects/RBit/rbutton.cpp	/^    const char*	text;$/;"	m	class:RButtonPrivate	file:	access:public
text	/home/viper/projects/RBit/rbutton.cpp	/^const char* RButton::text() const$/;"	f	class:RButton	signature:() const
text	/home/viper/projects/RBit/rbutton.h	/^    const char*	text() const; $/;"	p	class:RButton	access:public	signature:() const
text	/home/viper/projects/RBit/rcheckbox.h	/^    const char* text() const;$/;"	p	class:RCheckBox	access:public	signature:() const
text	/home/viper/projects/RBit/rcheckbox.h	/^inline const char* RCheckBox::text() const$/;"	f	class:RCheckBox	signature:() const
text	/home/viper/projects/RBit/rcombobox.cpp	/^const char* RComboBox::text(Sint32 row) const$/;"	f	class:RComboBox	signature:(Sint32 row) const
text	/home/viper/projects/RBit/rcombobox.h	/^    const char* text(Sint32 row) const;$/;"	p	class:RComboBox	access:public	signature:(Sint32 row) const
text	/home/viper/projects/RBit/reditbox.h	/^    const char* text() const;$/;"	p	class:REditBox	access:public	signature:() const
text	/home/viper/projects/RBit/reditbox.h	/^inline const char* REditBox::text() const$/;"	f	class:REditBox	signature:() const
text	/home/viper/projects/RBit/rgridmodel.h	/^    virtual const char* text(Sint32 row, Sint32 column) const = 0;$/;"	p	class:RGridModel	access:public	signature:(Sint32 row, Sint32 column) const
text	/home/viper/projects/RBit/rheadermodel.h	/^    virtual const char* text(Sint32 section) const = 0;$/;"	p	class:RHeaderModel	access:public	signature:(Sint32 section) const
text	/home/viper/projects/RBit/rlabel.h	/^    const char* text() const;$/;"	p	class:RLabel	access:public	signature:() const
text	/home/viper/projects/RBit/rlabel.h	/^inline const char* RLabel::text() const$/;"	f	class:RLabel	signature:() const
text	/home/viper/projects/RBit/rmessagebox.h	/^    const char* text() const;$/;"	p	class:RMessageBox	access:public	signature:() const
text	/home/viper/projects/RBit/rmessagebox.h	/^inline const char* RMessageBox::text() const$/;"	f	class:RMessageBox	signature:() const
text	/home/viper/projects/RBit/rpalette.h	/^    inline const RColor& text() const { return color(Text); }$/;"	f	class:RPalette	access:public	signature:() const
text	/home/viper/projects/RBit/rsimplegridmodel.cpp	/^const char* RSimpleGridModel::text(Sint32 row, Sint32 column) const$/;"	f	class:RSimpleGridModel	signature:(Sint32 row, Sint32 column) const
text	/home/viper/projects/RBit/rsimplegridmodel.h	/^        const char* text() const;$/;"	p	class:RSimpleGridModel::Item	access:public	signature:() const
text	/home/viper/projects/RBit/rsimplegridmodel.h	/^    virtual const char* text(Sint32 row, Sint32 column) const;$/;"	p	class:RSimpleGridModel	access:public	signature:(Sint32 row, Sint32 column) const
text	/home/viper/projects/RBit/rsimplegridmodel.h	/^inline const char* RSimpleGridModel::Item::text() const$/;"	f	class:RSimpleGridModel::Item	signature:() const
text	/home/viper/projects/RBit/rsimpleheadermodel.cpp	/^const char* RSimpleHeaderModel::text(Sint32 section) const$/;"	f	class:RSimpleHeaderModel	signature:(Sint32 section) const
text	/home/viper/projects/RBit/rsimpleheadermodel.h	/^        const char* text() const;$/;"	p	class:RSimpleHeaderModel::Item	access:public	signature:() const
text	/home/viper/projects/RBit/rsimpleheadermodel.h	/^    virtual const char* text(Sint32 section) const;$/;"	p	class:RSimpleHeaderModel	access:public	signature:(Sint32 section) const
text	/home/viper/projects/RBit/rsimpleheadermodel.h	/^inline const char* RSimpleHeaderModel::Item::text() const$/;"	f	class:RSimpleHeaderModel::Item	signature:() const
textAlignment	/home/viper/projects/RBit/rcombobox.cpp	/^		virtual int textAlignment(Sint32 row, Sint32 column) const $/;"	f	class:RComboBox::Popup::PopupModel	access:public	signature:(Sint32 row, Sint32 column) const
textAlignment	/home/viper/projects/RBit/rgridmodel.h	/^    virtual int textAlignment(Sint32 row, Sint32 column) const $/;"	f	class:RGridModel	access:public	signature:(Sint32 row, Sint32 column) const
textAlignment	/home/viper/projects/RBit/rheadermodel.h	/^    virtual int textAlignment(Sint32 section) const $/;"	f	class:RHeaderModel	access:public	signature:(Sint32 section) const
textAlignment	/home/viper/projects/RBit/rsimplegridmodel.cpp	/^int RSimpleGridModel::textAlignment(Sint32 row, Sint32 column) const$/;"	f	class:RSimpleGridModel	signature:(Sint32 row, Sint32 column) const
textAlignment	/home/viper/projects/RBit/rsimplegridmodel.h	/^        int textAlignment() const;$/;"	p	class:RSimpleGridModel::Item	access:public	signature:() const
textAlignment	/home/viper/projects/RBit/rsimplegridmodel.h	/^    virtual int textAlignment(Sint32 row, Sint32 column) const;$/;"	p	class:RSimpleGridModel	access:public	signature:(Sint32 row, Sint32 column) const
textAlignment	/home/viper/projects/RBit/rsimplegridmodel.h	/^inline int RSimpleGridModel::Item::textAlignment() const$/;"	f	class:RSimpleGridModel::Item	signature:() const
textAlignment	/home/viper/projects/RBit/rsimpleheadermodel.cpp	/^int RSimpleHeaderModel::textAlignment(Sint32 section) const$/;"	f	class:RSimpleHeaderModel	signature:(Sint32 section) const
textAlignment	/home/viper/projects/RBit/rsimpleheadermodel.h	/^        int textAlignment() const;$/;"	p	class:RSimpleHeaderModel::Item	access:public	signature:() const
textAlignment	/home/viper/projects/RBit/rsimpleheadermodel.h	/^    virtual int textAlignment(Sint32 section) const;$/;"	p	class:RSimpleHeaderModel	access:public	signature:(Sint32 section) const
textAlignment	/home/viper/projects/RBit/rsimpleheadermodel.h	/^inline int RSimpleHeaderModel::Item::textAlignment() const$/;"	f	class:RSimpleHeaderModel::Item	signature:() const
textAlignment	/home/viper/projects/RBit/rtextpainter.h	/^    int	textAlignment() const;$/;"	p	class:RTextPainter	access:public	signature:() const
textAlignment	/home/viper/projects/RBit/rtextpainter.h	/^inline int RTextPainter::textAlignment() const$/;"	f	class:RTextPainter	signature:() const
textBoundingRect	/home/viper/projects/RBit/rmultilinelabel.cpp	/^RRect RMultilineLabel::textBoundingRect(Uint16 width) const$/;"	f	class:RMultilineLabel	signature:(Uint16 width) const
textBoundingRect	/home/viper/projects/RBit/rmultilinelabel.h	/^	RRect				textBoundingRect() const;	$/;"	p	class:RMultilineLabel	access:public	signature:() const
textBoundingRect	/home/viper/projects/RBit/rmultilinelabel.h	/^	RRect				textBoundingRect(Uint16 width) const;$/;"	p	class:RMultilineLabel	access:public	signature:(Uint16 width) const
textBoundingRect	/home/viper/projects/RBit/rmultilinelabel.h	/^inline RRect RMultilineLabel::textBoundingRect() const$/;"	f	class:RMultilineLabel	signature:() const
textChanged	/home/viper/projects/RBit/reditbox.cpp	/^void REditBox::textChanged()$/;"	f	class:REditBox	signature:()
textChanged	/home/viper/projects/RBit/reditbox.h	/^    virtual void textChanged();$/;"	p	class:REditBox	access:protected	signature:()
textFlags	/home/viper/projects/RBit/rtextpainter.h	/^    int	textFlags() const;$/;"	p	class:RTextPainter	access:protected	signature:() const
textFlags	/home/viper/projects/RBit/rtextpainter.h	/^inline int RTextPainter::textFlags() const$/;"	f	class:RTextPainter	signature:() const
textRect	/home/viper/projects/RBit/reditbox.cpp	/^RRect REditBox::textRect() const$/;"	f	class:REditBox	signature:() const
textRect	/home/viper/projects/RBit/reditbox.h	/^    RRect textRect() const;$/;"	p	class:REditBox	access:private	signature:() const
textSize	/home/viper/projects/RBit/reditbox.cpp	/^RSize REditBox::textSize() const$/;"	f	class:REditBox	signature:() const
textSize	/home/viper/projects/RBit/reditbox.h	/^    RSize textSize() const;$/;"	p	class:REditBox	access:private	signature:() const
textSize	/home/viper/projects/RBit/rlabel.h	/^    RSize textSize() const;$/;"	p	class:RLabel	access:public	signature:() const
textSize	/home/viper/projects/RBit/rlabel.h	/^inline RSize RLabel::textSize() const$/;"	f	class:RLabel	signature:() const
textSize	/home/viper/projects/RBit/rmultilinelabel.h	/^	RSize				textSize() const;$/;"	p	class:RMultilineLabel	access:public	signature:() const
textSize	/home/viper/projects/RBit/rmultilinelabel.h	/^inline RSize RMultilineLabel::textSize() const$/;"	f	class:RMultilineLabel	signature:() const
texture	/home/viper/projects/RBit/rimage.cpp	/^    GLuint texture;$/;"	m	class:RImagePrivate	file:	access:public
textures	/home/viper/projects/RBit/rgl.h	/^    RArrayContainer<GLuint> textures;$/;"	m	struct:rglPicSeq	access:public
time	/home/viper/projects/RBit/rapplication.cpp	/^    uint time;$/;"	m	struct:__anon21::FPS	file:	access:public
toggle	/home/viper/projects/RBit/rbutton.cpp	/^void RButton::toggle()$/;"	f	class:RButton	signature:()
toggle	/home/viper/projects/RBit/rbutton.h	/^    void toggle();$/;"	p	class:RButton	access:public	signature:()
toggled	/home/viper/projects/RBit/rbutton.cpp	/^void RButton::toggled()$/;"	f	class:RButton	signature:()
toggled	/home/viper/projects/RBit/rbutton.h	/^    virtual void toggled();$/;"	p	class:RButton	access:protected	signature:()
top	/home/viper/projects/RBit/rrect.h	/^    Sint16 top() const;$/;"	p	class:RRect	access:public	signature:() const
top	/home/viper/projects/RBit/rrect.h	/^inline Sint16 RRect::top() const$/;"	f	class:RRect	signature:() const
topLeft	/home/viper/projects/RBit/rrect.h	/^    RPoint topLeft() const;$/;"	p	class:RRect	access:public	signature:() const
topLeft	/home/viper/projects/RBit/rrect.h	/^inline RPoint RRect::topLeft() const$/;"	f	class:RRect	signature:() const
topLevelWidget	/home/viper/projects/RBit/rwidget.cpp	/^RWidget* RWidget::topLevelWidget() const$/;"	f	class:RWidget	signature:() const
topLevelWidget	/home/viper/projects/RBit/rwidget.h	/^    RWidget* topLevelWidget() const;$/;"	p	class:RWidget	access:public	signature:() const
topRight	/home/viper/projects/RBit/rrect.h	/^    RPoint topRight() const;$/;"	p	class:RRect	access:public	signature:() const
topRight	/home/viper/projects/RBit/rrect.h	/^inline RPoint RRect::topRight() const$/;"	f	class:RRect	signature:() const
topTextMargin	/home/viper/projects/RBit/rgridview.h	/^    Sint32 topTextMargin() const;$/;"	p	class:RGridView	access:public	signature:() const
topTextMargin	/home/viper/projects/RBit/rgridview.h	/^inline Sint32 RGridView::topTextMargin() const$/;"	f	class:RGridView	signature:() const
trackingEnabled	/home/viper/projects/RBit/rscrollbar.h	/^    bool trackingEnabled() const;$/;"	p	class:RScrollBar	access:public	signature:() const
trackingEnabled	/home/viper/projects/RBit/rscrollbar.h	/^inline bool RScrollBar::trackingEnabled() const$/;"	f	class:RScrollBar	signature:() const
translate	/home/viper/projects/RBit/rapplication.cpp	/^void RApplication::translate(SDL_keysym* key)$/;"	f	class:RApplication	signature:(SDL_keysym* key)
translate	/home/viper/projects/RBit/rapplication.h	/^    void translate(SDL_keysym* key);$/;"	p	class:RApplication	access:private	signature:(SDL_keysym* key)
translate	/home/viper/projects/RBit/rrect.h	/^    void translate(Sint16 dx, Sint16 dy);$/;"	p	class:RRect	access:public	signature:(Sint16 dx, Sint16 dy)
translate	/home/viper/projects/RBit/rrect.h	/^    void translate(const RPoint &p);$/;"	p	class:RRect	access:public	signature:(const RPoint &p)
translate	/home/viper/projects/RBit/rrect.h	/^inline void RRect::translate(Sint16 dx, Sint16 dy)$/;"	f	class:RRect	signature:(Sint16 dx, Sint16 dy)
translate	/home/viper/projects/RBit/rrect.h	/^inline void RRect::translate(const RPoint& p)$/;"	f	class:RRect	signature:(const RPoint& p)
translated	/home/viper/projects/RBit/rrect.h	/^    RRect translated(Sint16 dx, Sint16 dy) const;$/;"	p	class:RRect	access:public	signature:(Sint16 dx, Sint16 dy) const
translated	/home/viper/projects/RBit/rrect.h	/^    RRect translated(const RPoint &p) const;$/;"	p	class:RRect	access:public	signature:(const RPoint &p) const
translated	/home/viper/projects/RBit/rrect.h	/^inline RRect RRect::translated(Sint16 dx, Sint16 dy) const$/;"	f	class:RRect	signature:(Sint16 dx, Sint16 dy) const
translated	/home/viper/projects/RBit/rrect.h	/^inline RRect RRect::translated(const RPoint &p) const$/;"	f	class:RRect	signature:(const RPoint &p) const
triggerAction	/home/viper/projects/RBit/rscrollbar.cpp	/^void RScrollBar::triggerAction(RScrollBar::ScrollAction action)$/;"	f	class:RScrollBar	signature:(RScrollBar::ScrollAction action)
triggerAction	/home/viper/projects/RBit/rscrollbar.h	/^    void triggerAction(ScrollAction);$/;"	p	class:RScrollBar	access:public	signature:(ScrollAction)
trim	/home/viper/projects/RBit/reditbox.cpp	/^void REditBox::trim()$/;"	f	class:REditBox	signature:()
trim	/home/viper/projects/RBit/reditbox.h	/^	void trim();$/;"	p	class:REditBox	access:public	signature:()
triml	/home/viper/projects/RBit/reditbox.cpp	/^void REditBox::triml()$/;"	f	class:REditBox	signature:()
triml	/home/viper/projects/RBit/reditbox.h	/^	void triml();$/;"	p	class:REditBox	access:public	signature:()
trimr	/home/viper/projects/RBit/reditbox.cpp	/^void REditBox::trimr()$/;"	f	class:REditBox	signature:()
trimr	/home/viper/projects/RBit/reditbox.h	/^	void trimr();$/;"	p	class:REditBox	access:public	signature:()
ttfFont	/home/viper/projects/RBit/rfont.h	/^    TTF_Font* ttfFont() const \/\/ obsolete, exists for compatibility$/;"	f	class:RFont	access:public	signature:() const
uint	/home/viper/projects/RBit/rglobal.h	/^typedef unsigned int uint;$/;"	t
underline_height	/home/viper/projects/RBit/rsdlttf.cpp	/^	int underline_height;$/;"	m	struct:_TTF_Font	file:	access:public
underline_offset	/home/viper/projects/RBit/rsdlttf.cpp	/^	int underline_offset;$/;"	m	struct:_TTF_Font	file:	access:public
unicode_toLocal8bit	/home/viper/projects/RBit/rapplication.cpp	/^Uint8 RApplication::unicode_toLocal8bit(Uint16 ch)$/;"	f	class:RApplication	signature:(Uint16 ch)
unicode_toLocal8bit	/home/viper/projects/RBit/rapplication.h	/^    Uint8 unicode_toLocal8bit(Uint16 ch);$/;"	p	class:RApplication	access:public	signature:(Uint16 ch)
unite	/home/viper/projects/RBit/rrect.h	/^    RRect unite(const RRect& r) const;$/;"	p	class:RRect	access:public	signature:(const RRect& r) const
unite	/home/viper/projects/RBit/rrect.h	/^inline RRect RRect::unite(const RRect& r) const$/;"	f	class:RRect	signature:(const RRect& r) const
unlink	/home/viper/projects/RBit/rsimplelist.h	/^	inline static void unlink(Node* first, Node* last)$/;"	f	class:RSimpleCircularListNode	access:protected	signature:(Node* first, Node* last)
unlink	/home/viper/projects/RBit/rsimplelist.h	/^	inline static void unlink(Node* first, Node* last)$/;"	f	class:RSimpleListNode	access:protected	signature:(Node* first, Node* last)
unlink	/home/viper/projects/RBit/rsimplelist.h	/^	inline static void unlink(RSimpleListNodeBase* first, RSimpleListNodeBase* last)$/;"	f	class:RSimpleListNodeBase	access:protected	signature:(RSimpleListNodeBase* first, RSimpleListNodeBase* last)
unlink	/home/viper/projects/RBit/rsimplelist.h	/^	inline void unlink()$/;"	f	class:RSimpleCircularListNode	access:protected	signature:()
unlink	/home/viper/projects/RBit/rsimplelist.h	/^	inline void unlink()$/;"	f	class:RSimpleListNode	access:protected	signature:()
unlink	/home/viper/projects/RBit/rsimplelist.h	/^	inline void unlink()$/;"	f	class:RSimpleListNodeBase	access:protected	signature:()
unregisterWidget	/home/viper/projects/RBit/rwidget.cpp	/^void RWidget::unregisterWidget()$/;"	f	class:RWidget	signature:()
unregisterWidget	/home/viper/projects/RBit/rwidget.h	/^    void unregisterWidget();$/;"	p	class:RWidget	access:private	signature:()
update	/home/viper/projects/RBit/rwidget.cpp	/^void RWidget::update(const RRect& r)$/;"	f	class:RWidget	signature:(const RRect& r)
update	/home/viper/projects/RBit/rwidget.h	/^    void update();$/;"	p	class:RWidget	access:public	signature:()
update	/home/viper/projects/RBit/rwidget.h	/^    void update(const RRect& r);$/;"	p	class:RWidget	access:public	signature:(const RRect& r)
update	/home/viper/projects/RBit/rwidget.h	/^inline void RWidget::update()$/;"	f	class:RWidget	signature:()
updateCursorRect	/home/viper/projects/RBit/reditbox.cpp	/^void REditBox::updateCursorRect()$/;"	f	class:REditBox	signature:()
updateCursorRect	/home/viper/projects/RBit/reditbox.h	/^    void  updateCursorRect();$/;"	p	class:REditBox	access:private	signature:()
updateDisplayText	/home/viper/projects/RBit/reditbox.cpp	/^void REditBox::updateDisplayText() const$/;"	f	class:REditBox	signature:() const
updateDisplayText	/home/viper/projects/RBit/reditbox.h	/^    void updateDisplayText() const;$/;"	p	class:REditBox	access:private	signature:() const
updateEditBoxGeometry	/home/viper/projects/RBit/rcombobox.cpp	/^void RComboBox::updateEditBoxGeometry()$/;"	f	class:RComboBox	signature:()
updateEditBoxGeometry	/home/viper/projects/RBit/rcombobox.h	/^	void updateEditBoxGeometry();$/;"	p	class:RComboBox	access:protected	signature:()
updateFrameWidth	/home/viper/projects/RBit/rframepainter.cpp	/^void RFramePainter::updateFrameWidth()$/;"	f	class:RFramePainter	signature:()
updateFrameWidth	/home/viper/projects/RBit/rframepainter.h	/^    void updateFrameWidth();$/;"	p	class:RFramePainter	access:protected	signature:()
updateGeometries	/home/viper/projects/RBit/rgridview.cpp	/^void RGridView::updateGeometries()$/;"	f	class:RGridView	signature:()
updateGeometries	/home/viper/projects/RBit/rgridview.h	/^    void updateGeometries();$/;"	p	class:RGridView	access:protected	signature:()
updateHorizontalScrollbar	/home/viper/projects/RBit/rgridview.cpp	/^void RGridView::updateHorizontalScrollbar()$/;"	f	class:RGridView	signature:()
updateHorizontalScrollbar	/home/viper/projects/RBit/rgridview.h	/^    void updateHorizontalScrollbar();$/;"	p	class:RGridView	access:private	signature:()
updateScreen	/home/viper/projects/RBit/rapplication.cpp	/^void RApplication::updateScreen(const RRect& r)$/;"	f	class:RApplication	signature:(const RRect& r)
updateScreen	/home/viper/projects/RBit/rapplication.h	/^    void updateScreen();$/;"	p	class:RApplication	access:public	signature:()
updateScreen	/home/viper/projects/RBit/rapplication.h	/^    void updateScreen(const RRect& r);$/;"	p	class:RApplication	access:public	signature:(const RRect& r)
updateScreen	/home/viper/projects/RBit/rapplication.h	/^inline void RApplication::updateScreen()$/;"	f	class:RApplication	signature:()
updateScrollBars	/home/viper/projects/RBit/rscrollwidgetarea.cpp	/^void RScrollWidgetAreaBase::updateScrollBars()$/;"	f	class:RScrollWidgetAreaBase	signature:()
updateScrollBars	/home/viper/projects/RBit/rscrollwidgetarea.h	/^    void updateScrollBars();$/;"	p	class:RScrollWidgetAreaBase	access:protected	signature:()
updateSection	/home/viper/projects/RBit/rheaderview.cpp	/^void RHeaderView::updateSection(Sint32 section)$/;"	f	class:RHeaderView	signature:(Sint32 section)
updateSection	/home/viper/projects/RBit/rheaderview.h	/^    virtual void updateSection(Sint32 section);    $/;"	p	class:RHeaderView	access:protected	signature:(Sint32 section)
updateSectionIndicator	/home/viper/projects/RBit/rheaderview.h	/^    void updateSectionIndicator(Sint32 section, Sint32 position);$/;"	p	class:RHeaderView	access:private	signature:(Sint32 section, Sint32 position)
updateVerticalScrollbar	/home/viper/projects/RBit/rgridview.cpp	/^void RGridView::updateVerticalScrollbar()$/;"	f	class:RGridView	signature:()
updateVerticalScrollbar	/home/viper/projects/RBit/rgridview.h	/^    void updateVerticalScrollbar();$/;"	p	class:RGridView	access:private	signature:()
updatesEnabled	/home/viper/projects/RBit/rwidget.h	/^    bool updatesEnabled() const;$/;"	p	class:RWidget	access:public	signature:() const
updatesEnabled	/home/viper/projects/RBit/rwidget.h	/^inline bool RWidget::updatesEnabled() const$/;"	f	class:RWidget	signature:() const
valid	/home/viper/projects/RBit/rapplication.cpp	/^    bool valid;$/;"	m	struct:__anon21::FPS	file:	access:public
value	/home/viper/projects/RBit/rcolor.cpp	/^Uint16 RColor::value() const$/;"	f	class:RColor	signature:() const
value	/home/viper/projects/RBit/rcolor.h	/^    Uint16 value() const;$/;"	p	class:RColor	access:public	signature:() const
verticalHeader	/home/viper/projects/RBit/rgridview.h	/^    RHeaderView* verticalHeader() const;$/;"	p	class:RGridView	access:public	signature:() const
verticalHeader	/home/viper/projects/RBit/rgridview.h	/^inline RHeaderView* RGridView::verticalHeader() const$/;"	f	class:RGridView	signature:() const
verticalHeaderPressed	/home/viper/projects/RBit/rgridview.cpp	/^void RGridView::verticalHeaderPressed(Sint32 section)$/;"	f	class:RGridView	signature:(Sint32 section)
verticalHeaderPressed	/home/viper/projects/RBit/rgridview.h	/^    virtual void verticalHeaderPressed(Sint32);$/;"	p	class:RGridView	access:protected	signature:(Sint32)
verticalOffset	/home/viper/projects/RBit/rgridview.h	/^    Sint32 verticalOffset() const;$/;"	p	class:RGridView	access:protected	signature:() const
verticalOffset	/home/viper/projects/RBit/rgridview.h	/^inline Sint32 RGridView::verticalOffset() const$/;"	f	class:RGridView	signature:() const
verticalOffset	/home/viper/projects/RBit/rheaderview.h	/^    Sint32 verticalOffset() const;    $/;"	p	class:RHeaderView	access:protected	signature:() const
verticalScrollBar	/home/viper/projects/RBit/rscrollarea.h	/^    RScrollBar* verticalScrollBar() const;$/;"	p	class:RScrollAreaBase	access:public	signature:() const
verticalScrollBar	/home/viper/projects/RBit/rscrollarea.h	/^inline RScrollBar* RScrollAreaBase::verticalScrollBar() const$/;"	f	class:RScrollAreaBase	signature:() const
verticalScrollBarAction	/home/viper/projects/RBit/rgridview.cpp	/^void RGridView::verticalScrollBarAction(RScrollBar::ScrollAction action)$/;"	f	class:RGridView	signature:(RScrollBar::ScrollAction action)
verticalScrollBarAction	/home/viper/projects/RBit/rgridview.h	/^    virtual void verticalScrollBarAction(RScrollBar::ScrollAction action);$/;"	p	class:RGridView	access:protected	signature:(RScrollBar::ScrollAction action)
verticalScrollBarAction	/home/viper/projects/RBit/rscrollarea.h	/^    virtual void verticalScrollBarAction(RScrollBar::ScrollAction action) $/;"	f	class:RScrollAreaBase	access:protected	signature:(RScrollBar::ScrollAction action)
verticalScrollBarPolicy	/home/viper/projects/RBit/rscrollarea.h	/^    ScrollBarPolicy verticalScrollBarPolicy() const;$/;"	p	class:RScrollAreaBase	access:public	signature:() const
verticalScrollBarPolicy	/home/viper/projects/RBit/rscrollarea.h	/^inline RScrollAreaBase::ScrollBarPolicy RScrollAreaBase::verticalScrollBarPolicy() const$/;"	f	class:RScrollAreaBase	signature:() const
verticalStepsPerItem	/home/viper/projects/RBit/rgridview.h	/^    inline Uint32 verticalStepsPerItem() const { return 64; }$/;"	f	class:RGridView	access:protected	signature:() const
viewport	/home/viper/projects/RBit/rscrollarea.h	/^    RWidget* viewport() const;$/;"	p	class:RScrollAreaBase	access:public	signature:() const
viewport	/home/viper/projects/RBit/rscrollarea.h	/^inline RWidget* RScrollAreaBase::viewport() const$/;"	f	class:RScrollAreaBase	signature:() const
viewportRepaintImpl	/home/viper/projects/RBit/rscrollarea.cpp	/^void RScrollArea::viewportRepaintImpl(const RRect&)$/;"	f	class:RScrollArea	signature:(const RRect&)
viewportRepaintImpl	/home/viper/projects/RBit/rscrollarea.h	/^    virtual void viewportRepaintImpl(const RRect&);$/;"	p	class:RScrollArea	access:protected	signature:(const RRect&)
viewportSizeChanged	/home/viper/projects/RBit/rscrollarea.cpp	/^void RScrollArea::viewportSizeChanged(const RSize&)$/;"	f	class:RScrollArea	signature:(const RSize&)
viewportSizeChanged	/home/viper/projects/RBit/rscrollarea.h	/^    virtual void viewportSizeChanged(const RSize& newSize);$/;"	p	class:RScrollArea	access:protected	signature:(const RSize& newSize)
visualRect	/home/viper/projects/RBit/reditbox.cpp	/^RRect REditBox::visualRect() const$/;"	f	class:REditBox	signature:() const
visualRect	/home/viper/projects/RBit/reditbox.h	/^    RRect visualRect() const;$/;"	p	class:REditBox	access:protected	signature:() const
visualRect	/home/viper/projects/RBit/rgridview.cpp	/^RRect RGridView::visualRect(Sint32 row, Sint32 column) const$/;"	f	class:RGridView	signature:(Sint32 row, Sint32 column) const
visualRect	/home/viper/projects/RBit/rgridview.h	/^    RRect visualRect(Sint32 row, Sint32 column) const;$/;"	p	class:RGridView	access:public	signature:(Sint32 row, Sint32 column) const
vslide	/home/viper/projects/RBit/rscrollarea.cpp	/^void RScrollAreaBase::vslide(Sint32 y)$/;"	f	class:RScrollAreaBase	signature:(Sint32 y)
vslide	/home/viper/projects/RBit/rscrollarea.h	/^    void vslide(Sint32);$/;"	p	class:RScrollAreaBase	access:private	signature:(Sint32)
w	/home/viper/projects/RBit/rgl.h	/^    int w;$/;"	m	struct:rglPicSeq	access:public
w	/home/viper/projects/RBit/rwidgetdefaultsettings.o	/^/;"	v
warning	/home/viper/projects/RBit/rmessagebox.cpp	/^int RMessageBox::warning(RWidget* parent, const char* caption, const char* text, $/;"	f	class:RMessageBox	signature:(RWidget* parent, const char* caption, const char* text, int button0, int button1, int button2)
warning	/home/viper/projects/RBit/rmessagebox.h	/^    static int warning(RWidget* parent, const char* caption, const char* text, $/;"	p	class:RMessageBox	access:public	signature:(RWidget* parent, const char* caption, const char* text, int button0 = Ok | Default | Escape, int button1 = NoButton, int button2 = NoButton)
warningBmp	/home/viper/projects/RBit/rmessagebox.cpp	/^    const unsigned char warningBmp[] = {$/;"	v
white	/home/viper/projects/RBit/rbit.h	/^        white,$/;"	e	enum:RBit::GlobalColor
widget	/home/viper/projects/RBit/rscrollwidgetarea.h	/^    RWidget *widget() const;$/;"	p	class:RScrollWidgetAreaBase	access:public	signature:() const
widget	/home/viper/projects/RBit/rscrollwidgetarea.h	/^inline RWidget* RScrollWidgetAreaBase::widget() const$/;"	f	class:RScrollWidgetAreaBase	signature:() const
widgetAt	/home/viper/projects/RBit/rwidget.cpp	/^RWidget* RWidget::widgetAt(const RPoint& p)$/;"	f	class:RWidget	signature:(const RPoint& p)
widgetAt	/home/viper/projects/RBit/rwidget.h	/^    static RWidget* widgetAt(Sint16 x, Sint16 y);$/;"	p	class:RWidget	access:public	signature:(Sint16 x, Sint16 y)
widgetAt	/home/viper/projects/RBit/rwidget.h	/^    static RWidget* widgetAt(const RPoint& p);$/;"	p	class:RWidget	access:public	signature:(const RPoint& p)
widgetAt	/home/viper/projects/RBit/rwidget.h	/^inline RWidget* RWidget::widgetAt(Sint16 x, Sint16 y)$/;"	f	class:RWidget	signature:(Sint16 x, Sint16 y)
widgetMouseTrackingEnabled	/home/viper/projects/RBit/rwidget.h	/^    bool widgetMouseTrackingEnabled() const;$/;"	p	class:RWidget	access:public	signature:() const
widgetOpacity	/home/viper/projects/RBit/rwidget.cpp	/^float RWidget::widgetOpacity() const$/;"	f	class:RWidget	signature:() const
widgetOpacity	/home/viper/projects/RBit/rwidget.h	/^    float widgetOpacity() const;$/;"	p	class:RWidget	access:public	signature:() const
widgetResizable	/home/viper/projects/RBit/rscrollwidgetarea.cpp	/^bool RScrollWidgetAreaBase::widgetResizable() const$/;"	f	class:RScrollWidgetAreaBase	signature:() const
widgetResizable	/home/viper/projects/RBit/rscrollwidgetarea.h	/^    bool widgetResizable() const;$/;"	p	class:RScrollWidgetAreaBase	access:public	signature:() const
width	/home/viper/projects/RBit/rdrawutil.cpp	/^    Uint16 width;$/;"	m	struct:RTextLine	file:	access:public
width	/home/viper/projects/RBit/rrect.h	/^    Uint16 width() const;$/;"	p	class:RRect	access:public	signature:() const
width	/home/viper/projects/RBit/rrect.h	/^inline Uint16 RRect::width() const $/;"	f	class:RRect	signature:() const
width	/home/viper/projects/RBit/rsize.h	/^    Uint16 width() const;$/;"	p	class:RSize	access:public	signature:() const
width	/home/viper/projects/RBit/rsize.h	/^inline Uint16 RSize::width() const $/;"	f	class:RSize	signature:() const
width	/home/viper/projects/RBit/rwidget.h	/^    Uint16 width() const;$/;"	p	class:RWidget	access:public	signature:() const
width	/home/viper/projects/RBit/rwidget.h	/^inline Uint16 RWidget::width() const$/;"	f	class:RWidget	signature:() const
window	/home/viper/projects/RBit/rpalette.h	/^    inline const RColor& window() const { return color(Window); }$/;"	f	class:RPalette	access:public	signature:() const
windowText	/home/viper/projects/RBit/rpalette.h	/^    inline const RColor& windowText() const { return color(WindowText); }$/;"	f	class:RPalette	access:public	signature:() const
windows1251_unicode	/home/viper/projects/RBit/rapplication.cpp	/^const Uint16 windows1251_unicode[256] = {$/;"	v
x	/home/viper/projects/RBit/rpoint.h	/^    Sint16 x() const;$/;"	p	class:RPoint	access:public	signature:() const
x	/home/viper/projects/RBit/rpoint.h	/^inline Sint16 RPoint::x() const$/;"	f	class:RPoint	signature:() const
x	/home/viper/projects/RBit/rrect.h	/^    Sint16 x() const;$/;"	p	class:RRect	access:public	signature:() const
x	/home/viper/projects/RBit/rrect.h	/^inline Sint16 RRect::x() const$/;"	f	class:RRect	signature:() const
x	/home/viper/projects/RBit/rwidget.h	/^    Sint16 x() const;$/;"	p	class:RWidget	access:public	signature:() const
x	/home/viper/projects/RBit/rwidget.h	/^inline Sint16 RWidget::x() const$/;"	f	class:RWidget	signature:() const
y	/home/viper/projects/RBit/rpoint.h	/^    Sint16 y() const;$/;"	p	class:RPoint	access:public	signature:() const
y	/home/viper/projects/RBit/rpoint.h	/^inline Sint16 RPoint::y() const$/;"	f	class:RPoint	signature:() const
y	/home/viper/projects/RBit/rrect.h	/^    Sint16 y() const;$/;"	p	class:RRect	access:public	signature:() const
y	/home/viper/projects/RBit/rrect.h	/^inline Sint16 RRect::y() const$/;"	f	class:RRect	signature:() const
y	/home/viper/projects/RBit/rwidget.h	/^    Sint16 y() const;$/;"	p	class:RWidget	access:public	signature:() const
y	/home/viper/projects/RBit/rwidget.h	/^inline Sint16 RWidget::y() const$/;"	f	class:RWidget	signature:() const
yellow	/home/viper/projects/RBit/rbit.h	/^        yellow,$/;"	e	enum:RBit::GlobalColor
yoffset	/home/viper/projects/RBit/rsdlttf.cpp	/^	int yoffset;$/;"	m	struct:cached_glyph	file:	access:public
~ColorArray	/home/viper/projects/RBit/rcolormanager.cpp	/^        ~ColorArray() $/;"	f	struct:RBlendingMap1::ColorArray	access:public	signature:()
~Item	/home/viper/projects/RBit/rsimplegridmodel.h	/^        virtual ~Item();$/;"	p	class:RSimpleGridModel::Item	access:public	signature:()
~Item	/home/viper/projects/RBit/rsimplegridmodel.h	/^inline RSimpleGridModel::Item::~Item()$/;"	f	class:RSimpleGridModel::Item	signature:()
~Item	/home/viper/projects/RBit/rsimpleheadermodel.h	/^        virtual ~Item();$/;"	p	class:RSimpleHeaderModel::Item	access:public	signature:()
~Item	/home/viper/projects/RBit/rsimpleheadermodel.h	/^inline RSimpleHeaderModel::Item::~Item()$/;"	f	class:RSimpleHeaderModel::Item	signature:()
~ItemAutoPtr	/home/viper/projects/RBit/rsimplegridmodel.h	/^        inline ~ItemAutoPtr() $/;"	f	struct:RSimpleGridModel::ItemAutoPtr	access:public	signature:()
~ItemAutoPtr	/home/viper/projects/RBit/rsimpleheadermodel.h	/^        inline ~ItemAutoPtr() $/;"	f	struct:RSimpleHeaderModel::ItemAutoPtr	access:public	signature:()
~RApplication	/home/viper/projects/RBit/rapplication.cpp	/^RApplication::~RApplication()$/;"	f	class:RApplication	signature:()
~RApplication	/home/viper/projects/RBit/rapplication.h	/^    ~RApplication();    $/;"	p	class:RApplication	access:public	signature:()
~RArrayContainer	/home/viper/projects/RBit/rarraycontainer.h	/^	~RArrayContainer();$/;"	p	class:RArrayContainer	access:public	signature:()
~RArrayContainer	/home/viper/projects/RBit/rarraycontainer.h	/^inline RArrayContainer<T>::~RArrayContainer()$/;"	f	class:RArrayContainer	signature:()
~RBlendingMap	/home/viper/projects/RBit/rcolormanager.cpp	/^    virtual ~RBlendingMap() {}$/;"	f	class:RBlendingMap	access:public	signature:()
~RBlendingMapPtr	/home/viper/projects/RBit/rcolormanager.cpp	/^RColorManager::RBlendingMapPtr::~RBlendingMapPtr()$/;"	f	class:RColorManager::RBlendingMapPtr	signature:()
~RBlendingMapPtr	/home/viper/projects/RBit/rcolormanager.h	/^        ~RBlendingMapPtr();$/;"	p	class:RColorManager::RBlendingMapPtr	access:public	signature:()
~RButton	/home/viper/projects/RBit/rbutton.cpp	/^RButton::~RButton()$/;"	f	class:RButton	signature:()
~RButton	/home/viper/projects/RBit/rbutton.h	/^    ~RButton();$/;"	p	class:RButton	access:public	signature:()
~RComboBox	/home/viper/projects/RBit/rcombobox.cpp	/^RComboBox::~RComboBox()$/;"	f	class:RComboBox	signature:()
~RComboBox	/home/viper/projects/RBit/rcombobox.h	/^    virtual ~RComboBox();$/;"	p	class:RComboBox	access:public	signature:()
~RFont	/home/viper/projects/RBit/rfont.h	/^    ~RFont()$/;"	f	class:RFont	access:public	signature:()
~RGridModel	/home/viper/projects/RBit/rgridmodel.h	/^    virtual ~RGridModel() {};$/;"	f	class:RGridModel	access:public	signature:()
~RHeaderModel	/home/viper/projects/RBit/rheadermodel.h	/^    virtual ~RHeaderModel() {}$/;"	f	class:RHeaderModel	access:public	signature:()
~RImagePrivate	/home/viper/projects/RBit/rimage.cpp	/^    ~RImagePrivate()$/;"	f	class:RImagePrivate	access:public	signature:()
~RLibrary	/home/viper/projects/RBit/rlibrary.h	/^    ~RLibrary()$/;"	f	class:RLibrary	access:public	signature:()
~RMetaRegistrator	/home/viper/projects/RBit/rwidget.cpp	/^RMetaRegistrator::~RMetaRegistrator()$/;"	f	class:RMetaRegistrator	signature:()
~RMetaRegistrator	/home/viper/projects/RBit/rwidget.h	/^    ~RMetaRegistrator();$/;"	p	class:RMetaRegistrator	access:private	signature:()
~RMultilineLabel	/home/viper/projects/RBit/rmultilinelabel.h	/^	virtual ~RMultilineLabel();$/;"	p	class:RMultilineLabel	access:public	signature:()
~RMultilineLabel	/home/viper/projects/RBit/rmultilinelabel.h	/^inline RMultilineLabel::~RMultilineLabel()$/;"	f	class:RMultilineLabel	signature:()
~RObserver	/home/viper/projects/RBit/rsubjectobserver.h	/^    ~RObserver()$/;"	f	class:RObserver	access:public	signature:()
~RPalette	/home/viper/projects/RBit/rpalette.cpp	/^RPalette::~RPalette()$/;"	f	class:RPalette	signature:()
~RPalette	/home/viper/projects/RBit/rpalette.h	/^    ~RPalette();$/;"	p	class:RPalette	access:public	signature:()
~RSimpleGridModel	/home/viper/projects/RBit/rsimplegridmodel.h	/^    ~RSimpleGridModel();$/;"	p	class:RSimpleGridModel	access:public	signature:()
~RSimpleGridModel	/home/viper/projects/RBit/rsimplegridmodel.h	/^inline RSimpleGridModel::~RSimpleGridModel()$/;"	f	class:RSimpleGridModel	signature:()
~RSimpleHeaderModel	/home/viper/projects/RBit/rsimpleheadermodel.h	/^    ~RSimpleHeaderModel();$/;"	p	class:RSimpleHeaderModel	access:public	signature:()
~RSimpleHeaderModel	/home/viper/projects/RBit/rsimpleheadermodel.h	/^inline RSimpleHeaderModel::~RSimpleHeaderModel()$/;"	f	class:RSimpleHeaderModel	signature:()
~RSimpleListNodeBase	/home/viper/projects/RBit/rsimplelist.h	/^	~RSimpleListNodeBase()$/;"	f	class:RSimpleListNodeBase	access:public	signature:()
~RSplitter	/home/viper/projects/RBit/rsplitter.cpp	/^RSplitter::~RSplitter()$/;"	f	class:RSplitter	signature:()
~RSplitter	/home/viper/projects/RBit/rsplitter.h	/^	virtual ~RSplitter();$/;"	p	class:RSplitter	access:public	signature:()
~RString	/home/viper/projects/RBit/rstring.h	/^	~RString();$/;"	p	class:RString	access:public	signature:()
~RString	/home/viper/projects/RBit/rstring.h	/^inline RString::~RString()$/;"	f	class:RString	signature:()
~RSubject	/home/viper/projects/RBit/rsubjectobserver.h	/^    ~RSubject()$/;"	f	class:RSubject	access:public	signature:()
~RSurface	/home/viper/projects/RBit/rsurface.h	/^    ~RSurface()$/;"	f	class:RSurface	access:public	signature:()
~RTTFQuiter	/home/viper/projects/RBit/rfont.h	/^    ~RTTFQuiter()$/;"	f	class:RTTFQuiter	access:public	signature:()
~RWidget	/home/viper/projects/RBit/rwidget.cpp	/^RWidget::~RWidget()$/;"	f	class:RWidget	signature:()
~RWidget	/home/viper/projects/RBit/rwidget.h	/^    virtual ~RWidget();$/;"	p	class:RWidget	access:public	signature:()
~SharedCounter	/home/viper/projects/RBit/rsharedptr.h	/^        ~SharedCounter()$/;"	f	class:RSharedPtr::SharedCounter	access:public	signature:()
~SharedCounterHelperBase	/home/viper/projects/RBit/rsharedptr.h	/^        virtual ~SharedCounterHelperBase() $/;"	f	class:RSharedPtr::SharedCounterHelperBase	access:public	signature:()
